"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[9157],{85674:(e,t,n)=>{n.d(t,{O:()=>s,a:()=>o,b:()=>c,h:()=>i});var r=n(76506);class s{constructor(e=[],t=[],n=!1){this.lengths=null!=e?e:[],this.coords=null!=t?t:[],this.hasIndeterminateRingOrder=n}get isPoint(){return 0===this.lengths.length}get maxLength(){return Math.max(...this.lengths)}get size(){return this.lengths.reduce(((e,t)=>e+t))}forEachVertex(e){let t=0;this.lengths.length||e(this.coords[0],this.coords[1]);for(let n=0;n<this.lengths.length;n++){const r=this.lengths[n];for(let n=0;n<r;n++)e(this.coords[2*(n+t)],this.coords[2*(n+t)+1]);t+=r}}clone(e){return e?(e.set(this.coords),new s(this.lengths.slice(),e,this.hasIndeterminateRingOrder)):new s(this.lengths.slice(),this.coords.slice(),this.hasIndeterminateRingOrder)}}class o{constructor(e=null,t={},n,r){this.geometry=e,this.attributes=t,this.centroid=n,this.objectId=r,this.displayId=0,this.geohashX=0,this.geohashY=0}weakClone(){const e=new o(this.geometry,this.attributes,this.centroid,this.objectId);return e.displayId=this.displayId,e.geohashX=this.geohashX,e.geohashY=this.geohashY,e}}function i(e){return!((0,r.b)(e.geometry)||!e.geometry.coords||!e.geometry.coords.length)}class c extends o{}},9006:(e,t,n)=>{n.d(t,{O:()=>r});class r{constructor(){this.objectIdFieldName=null,this.globalIdFieldName=null,this.geohashFieldName=null,this.geometryProperties=null,this.geometryType=null,this.spatialReference=null,this.hasZ=!1,this.hasM=!1,this.features=[],this.fields=[],this.transform=null,this.exceededTransferLimit=!1,this.uniqueIdField=null,this.queryGeometryType=null,this.queryGeometry=null}weakClone(){const e=new r;return e.objectIdFieldName=this.objectIdFieldName,e.globalIdFieldName=this.globalIdFieldName,e.geohashFieldName=this.geohashFieldName,e.geometryProperties=this.geometryProperties,e.geometryType=this.geometryType,e.spatialReference=this.spatialReference,e.hasZ=this.hasZ,e.hasM=this.hasM,e.features=this.features,e.fields=this.fields,e.transform=this.transform,e.exceededTransferLimit=this.exceededTransferLimit,e.uniqueIdField=this.uniqueIdField,e.queryGeometry=this.queryGeometry,e.queryGeometryType=this.queryGeometryType,e}}},40267:(e,t,n)=>{n.d(t,{a:()=>H,b:()=>Y,c:()=>X,e:()=>E,f:()=>w,g:()=>W,h:()=>Z,i:()=>x,j:()=>O,k:()=>Q,l:()=>z,m:()=>D,n:()=>j,o:()=>v,p:()=>C,q:()=>V,r:()=>te,s:()=>$,t:()=>p,u:()=>ee,v:()=>b,w:()=>re,z:()=>se});var r=n(60991),s=n(92143),o=n(76506),i=n(32422),c=n(85674),u=n(9006);function l(e,t){return e?t?4:3:t?3:2}const a=s.L.getLogger("esri.layers.graphics.featureConversionUtils"),h={esriGeometryPoint:0,esriGeometryPolyline:2,esriGeometryPolygon:3,esriGeometryMultipoint:0},f=(e,t,n,r,s,o)=>{e[n]=s,e[n+1]=o},d=(e,t,n,r,s,o)=>{e[n]=s,e[n+1]=o,e[n+2]=t[r+2]},m=(e,t,n,r,s,o)=>{e[n]=s,e[n+1]=o,e[n+2]=t[r+3]},g=(e,t,n,r,s,o)=>{e[n]=s,e[n+1]=o,e[n+2]=t[r+2],e[n+3]=t[r+3]};function y(e,t,n,r){if(e){if(n)return t&&r?g:d;if(t&&r)return m}else if(t&&r)return d;return f}function p({scale:e,translate:t},n){return Math.round((n-t[0])/e[0])}function b({scale:e,translate:t},n){return Math.round((t[1]-n)/e[1])}function I({scale:e,translate:t},n){return n*e[0]+t[0]}function U({scale:e,translate:t},n){return t[1]-n*e[1]}function w(e,t,n){return e?t?n?N(e):M(e):n?k(e):T(e):null}function T(e){const t=e.coords;return{x:t[0],y:t[1]}}function G(e,t){return e.coords[0]=t.x,e.coords[1]=t.y,e}function M(e){const t=e.coords;return{x:t[0],y:t[1],z:t[2]}}function q(e,t){return e.coords[0]=t.x,e.coords[1]=t.y,e.coords[2]=t.z,e}function k(e){const t=e.coords;return{x:t[0],y:t[1],m:t[2]}}function S(e,t){return e.coords[0]=t.x,e.coords[1]=t.y,e.coords[2]=t.m,e}function N(e){const t=e.coords;return{x:t[0],y:t[1],z:t[2],m:t[3]}}function B(e,t){return e.coords[0]=t.x,e.coords[1]=t.y,e.coords[2]=t.z,e.coords[3]=t.m,e}function P(e,t){return e&&t?B:e?q:t?S:G}function O(e,t,n){if((0,o.b)(e))return null;const r=l(t,n),s=[];for(let t=0;t<e.coords.length;t+=r){const n=[];for(let s=0;s<r;s++)n.push(e.coords[t+s]);s.push(n)}return t?n?{points:s,hasZ:t,hasM:n}:{points:s,hasZ:t}:n?{points:s,hasM:n}:{points:s}}function F(e,t,n=l(t.hasZ,t.hasM)){e.lengths[0]=t.points.length;const r=e.coords;let s=0;for(const e of t.points)for(let t=0;t<n;t++)r[s++]=e[t];return e}function Z(e,t,n){if(!e)return null;const r=l(t,n),{coords:s,lengths:o}=e,i=[];let c=0;for(const e of o){const t=[];for(let n=0;n<e;n++){const e=[];for(let t=0;t<r;t++)e.push(s[c++]);t.push(e)}i.push(t)}return t?n?{paths:i,hasZ:t,hasM:n}:{paths:i,hasZ:t}:n?{paths:i,hasM:n}:{paths:i}}function R(e,t,n=l(t.hasZ,t.hasM)){const{lengths:r,coords:s}=e;let o=0;for(const e of t.paths){for(const t of e)for(let e=0;e<n;e++)s[o++]=t[e];r.push(e.length)}return e}function x(e,t,n){if(!e)return null;const r=l(t,n),{coords:s,lengths:o}=e,i=[];let c=0;for(const e of o){const t=[];for(let n=0;n<e;n++){const e=[];for(let t=0;t<r;t++)e.push(s[c++]);t.push(e)}i.push(t)}return t?n?{rings:i,hasZ:t,hasM:n}:{rings:i,hasZ:t}:n?{rings:i,hasM:n}:{rings:i}}function E(e,t,n=t.hasZ,r=t.hasM){return function(e,t,n,r){const s=l(n,r),{lengths:o,coords:i}=e;let c=0;o.length=i.length=0;for(const e of t){for(const t of e)for(let e=0;e<s;e++)i[c++]=t[e];o.push(e.length)}}(e,t.rings,n,r),e}const _=[],A=[];function C(e,t,n,r,s){_[0]=e;const[o]=j(A,_,t,n,r,s);return _.length=A.length=0,o}function j(e,t,n,s,i,u){if(e.length=0,!n){for(const n of t){const t=n.attributes[u];e.push(new c.a(null,n.attributes,null,t))}return e}switch(n){case"esriGeometryPoint":return function(e,t,n,r,s){const o=P(n,r);for(const n of t){const{geometry:t,attributes:r}=n;let i;t&&(i=o(new c.O,t)),e.push(new c.a(i,r,null,r[s]))}return e}(e,t,s,i,u);case"esriGeometryMultipoint":return function(e,t,n,r,s){const o=l(n,r);for(const n of t){const t=n.geometry,r=n.attributes;let i;t&&(i=F(new c.O,t,o)),e.push(new c.a(i,r,null,r[s]))}return e}(e,t,s,i,u);case"esriGeometryPolyline":return function(e,t,n,r,s){const o=l(n,r);for(const n of t){const t=n.geometry,r=n.attributes;let i;t&&(i=R(new c.O,t,o)),e.push(new c.a(i,r,null,r[s]))}return e}(e,t,s,i,u);case"esriGeometryPolygon":return function(e,t,n,r,s){for(const i of t){const t=i.geometry,u=i.centroid,l=i.attributes;let a;t&&(a=E(new c.O,t,n,r)),(0,o.i)(u)?e.push(new c.a(a,l,G(new c.O,u),l[s])):e.push(new c.a(a,l,null,l[s]))}return e}(e,t,s,i,u);default:a.error("convertToFeatureSet:unknown-geometry",new r.Z(`Unable to parse unknown geometry type '${n}'`)),e.length=0}return e}function v(e,t,n,r){A[0]=e,L(_,A,t,n,r);const s=_[0];return _.length=A.length=0,s}function Y(e,t,n){if((0,o.b)(e))return null;const s=new c.O;return"hasZ"in e&&null==t&&(t=e.hasZ),"hasM"in e&&null==n&&(n=e.hasM),(0,i.wp)(e)?P(null!=t?t:null!=e.z,null!=n?n:null!=e.m)(s,e):(0,i.oU)(e)?E(s,e,t,n):(0,i.l9)(e)?R(s,e,l(t,n)):(0,i.aW)(e)?F(s,e,l(t,n)):void a.error("convertFromGeometry:unknown-geometry",new r.Z(`Unable to parse unknown geometry type '${e}'`))}function H(e,t,n,s){const i=e&&("coords"in e?e:e.geometry);if((0,o.b)(i))return null;switch(t){case"esriGeometryPoint":{let e=T;return n&&s?e=N:n?e=M:s&&(e=k),e(i)}case"esriGeometryMultipoint":return O(i,n,s);case"esriGeometryPolyline":return Z(i,n,s);case"esriGeometryPolygon":return x(i,n,s);default:return void a.error("convertToGeometry:unknown-geometry",new r.Z(`Unable to parse unknown geometry type '${t}'`))}}function L(e,t,n,s,i){if(e.length=0,(0,o.b)(n))return function(e,t){for(const n of t)e.push({attributes:n.attributes});return e}(e,t);switch(n){case"esriGeometryPoint":return function(e,t,n,r){let s=T;n&&r?s=N:n?s=M:r&&(s=k);for(const n of t){const{geometry:t,attributes:r}=n,i=(0,o.i)(t)?s(t):null;e.push({attributes:r,geometry:i})}return e}(e,t,s,i);case"esriGeometryMultipoint":return function(e,t,n,r){for(const s of t){const{geometry:t,attributes:o}=s;let i;t&&(i=O(t,n,r)),e.push({attributes:o,geometry:i})}return e}(e,t,s,i);case"esriGeometryPolyline":return function(e,t,n,r){for(const s of t){const{geometry:t,attributes:i}=s;let c;(0,o.i)(t)&&(c=Z(t,n,r)),e.push({attributes:i,geometry:c})}return e}(e,t,s,i);case"esriGeometryPolygon":return function(e,t,n,r){for(const s of t){const{geometry:t,attributes:i,centroid:c}=s;let u;if((0,o.i)(t)&&(u=x(t,n,r)),(0,o.i)(c)){const t=T(c);e.push({attributes:i,centroid:t,geometry:u})}else e.push({attributes:i,geometry:u})}return e}(e,t,s,i);default:a.error("convertToFeatureSet:unknown-geometry",new r.Z(`Unable to parse unknown geometry type '${n}'`))}return e}function X(e){const{objectIdFieldName:t,spatialReference:n,transform:r,fields:s,hasM:o,hasZ:i,features:c,geometryType:u,exceededTransferLimit:l,uniqueIdField:a,queryGeometry:h,queryGeometryType:f}=e,d={features:L([],c,u,i,o),fields:s,geometryType:u,objectIdFieldName:t,spatialReference:n,uniqueIdField:a,queryGeometry:H(h,f,!1,!1)};return r&&(d.transform=r),l&&(d.exceededTransferLimit=l),o&&(d.hasM=o),i&&(d.hasZ=i),d}function D(e,t){const n=new u.O,{hasM:s,hasZ:o,features:i,objectIdFieldName:c,spatialReference:l,geometryType:h,exceededTransferLimit:f,transform:d,fields:m}=e;return m&&(n.fields=m),n.geometryType=h,n.objectIdFieldName=c||t,n.spatialReference=l,n.objectIdFieldName?(i&&j(n.features,i,h,o,s,n.objectIdFieldName),f&&(n.exceededTransferLimit=f),s&&(n.hasM=s),o&&(n.hasZ=o),d&&(n.transform=d),n):(a.error(new r.Z("optimized-features:invalid-objectIdFieldName","objectIdFieldName is missing")),n)}function z(e){const{transform:t,features:n,hasM:r,hasZ:s}=e;if(!t)return e;for(const e of n)(0,o.i)(e.geometry)&&ee(e.geometry,e.geometry,r,s,t),(0,o.i)(e.centroid)&&ee(e.centroid,e.centroid,r,s,t);return e.transform=null,e}function $(e,t){const{geometryType:n,features:r,hasM:s,hasZ:o}=t;if(!e)return t;for(let t=0;t<r.length;t++){const i=r[t],u=i.weakClone();u.geometry=new c.O,V(u.geometry,i.geometry,s,o,n,e),i.centroid&&(u.centroid=new c.O,V(u.centroid,i.centroid,s,o,"esriGeometryPoint",e)),r[t]=u}return t.transform=e,t}function V(e,t,n,r,s,i,c=n,u=r){if(e.lengths.length&&(e.lengths.length=0),e.coords.length&&(e.coords.length=0),(0,o.b)(t)||!t.coords.length)return null;const a=h[s],{coords:f,lengths:d}=t,m=l(n,r),g=l(n&&c,r&&u),I=y(n,r,c,u);if(!d.length)return I(e.coords,f,0,0,p(i,f[0]),b(i,f[1])),e.lengths.length&&(e.lengths.length=0),e.coords.length=m,e;let U,w,T,G,M=0,q=0,k=q;for(const t of d){if(t<a)continue;let n=0;q=k,T=U=p(i,f[M]),G=w=b(i,f[M+1]),I(e.coords,f,q,M,T,G),n++,M+=m,q+=g;for(let r=1;r<t;r++,M+=m)T=p(i,f[M]),G=b(i,f[M+1]),T===U&&G===w||(I(e.coords,f,q,M,T-U,G-w),q+=g,n++,U=T,w=G);n>=a&&(e.lengths.push(n),k=q)}return e.coords.length=k,e.coords.length?e:null}function W(e,t,n,r,s,o,i=n,c=r){if(e.lengths.length&&(e.lengths.length=0),e.coords.length&&(e.coords.length=0),!t||!t.coords.length)return null;const u=h[s],{coords:a,lengths:f}=t,d=l(n,r),m=l(n&&i,r&&c),g=y(n,r,i,c);if(!f.length)return g(e.coords,a,0,0,a[0],a[1]),e.lengths.length&&(e.lengths.length=0),e.coords.length=d,e;let p=0;const b=o*o;for(const t of f){if(t<u){p+=t*d;continue}const n=e.coords.length/m,r=p,s=p+(t-1)*d;g(e.coords,a,e.coords.length,r,a[r],a[r+1]),K(e.coords,a,d,b,g,r,s),g(e.coords,a,e.coords.length,s,a[s],a[s+1]);const o=e.coords.length/m-n;o>=u?e.lengths.push(o):e.coords.length=n*m,p+=t*d}return e.coords.length?e:null}function J(e,t,n,r){const s=e[t],o=e[t+1],i=e[n],c=e[n+1],u=e[r],l=e[r+1];let a=i,h=c,f=u-a,d=l-h;if(0!==f||0!==d){const e=((s-a)*f+(o-h)*d)/(f*f+d*d);e>1?(a=u,h=l):e>0&&(a+=f*e,h+=d*e)}return f=s-a,d=o-h,f*f+d*d}function K(e,t,n,r,s,o,i){let c,u=r,l=0;for(let e=o+n;e<i;e+=n)c=J(t,e,o,i),c>u&&(l=e,u=c);u>r&&(l-o>n&&K(e,t,n,r,s,o,l),s(e,t,e.length,l,t[l],t[l+1]),i-l>n&&K(e,t,n,r,s,l,i))}function Q(e,t,n,r){if((0,o.b)(t)||!t.coords||!t.coords.length)return null;const s=l(n,r);let i=Number.POSITIVE_INFINITY,c=Number.POSITIVE_INFINITY,u=Number.NEGATIVE_INFINITY,a=Number.NEGATIVE_INFINITY;if(t&&t.coords){const e=t.coords;for(let t=0;t<e.length;t+=s){const n=e[t],r=e[t+1];i=Math.min(i,n),u=Math.max(u,n),c=Math.min(c,r),a=Math.max(a,r)}}return e[0]=i,e[1]=c,e[2]=u,e[3]=a,e}function ee(e,t,n,r,s){const{coords:o,lengths:i}=t,c=n?r?g:d:r?d:f,u=l(n,r);if(!o.length)return e!==t&&(e.lengths.length=0,e.coords.length=0),e;if(!i.length)return c(e.coords,o,0,0,I(s,o[0]),U(s,o[1])),e!==t&&(e.lengths.length=0,e.coords.length=u),e;const[a,h]=s.scale;let m=0;for(let t=0;t<i.length;t++){const n=i[t];e.lengths[t]=n;let r=I(s,o[m]),l=U(s,o[m+1]);c(e.coords,o,m,m,r,l),m+=u;for(let t=1;t<n;t++,m+=u)r+=o[m]*a,l-=o[m+1]*h,c(e.coords,o,m,m,r,l)}return e!==t&&(e.lengths.length=i.length,e.coords.length=o.length),e}function te(e,t,n,r,s,o){const i=l(n,r),c=y(n,r,s,o),u=t.coords;e.coords.length=0,e.lengths.length=0,e.lengths.push(...t.lengths);for(let t=0;t<u.length;t+=i)c(e.coords,u,e.coords.length,t,u[t],u[t+1]);return e}function ne(e,t,n,r){let s=0,o=e[r*t],i=e[r*(t+1)];for(let c=1;c<n;c++){const n=o+e[r*(t+c)],u=i+e[r*(t+c)+1],l=(n-o)*(u+i);o=n,i=u,s+=l}return.5*s}function re(e,t){const{coords:n,lengths:r}=e;let s=0,o=0;for(let e=0;e<r.length;e++)o+=ne(n,s,r[e],t),s+=e;return Math.abs(o)}function se(e,t){if((0,o.b)(e))return null;const n=e.clone(),r=e.coords,s=e.lengths;let i=0;for(let e=0;e<s.length;e++){const o=s[e];let c=r[t*i],u=r[t*i+1];for(let e=1;e<o;e++){const s=c+r[t*(i+e)],o=u+r[t*(i+e)+1];n.coords[t*(i+e)]=s,n.coords[t*(i+e)+1]=o,c=s,u=o}i+=o}return n}},95587:(e,t,n)=>{n.d(t,{S:()=>i,W:()=>l,a:()=>a,b:()=>c,c:()=>u,d:()=>f,g:()=>h});var r=n(60947),s=n(89623);function o(e){return new r.Z({wkt:`GEOCCS["Spherical geocentric",\n    DATUM["Not specified",\n      SPHEROID["Sphere",${e.radius},0]],\n    PRIMEM["Greenwich",0.0,\n      AUTHORITY["EPSG","8901"]],\n    UNIT["m",1.0],\n    AXIS["Geocentric X",OTHER],\n    AXIS["Geocentric Y",EAST],\n    AXIS["Geocentric Z",NORTH]\n  ]`})}const i=o(s.e),c=o(s.m),u=o(s.a),l=new r.Z({wkt:`GEOCCS["WGS 84",\n  DATUM["WGS_1984",\n    SPHEROID["WGS 84",${s.e.radius},298.257223563,\n      AUTHORITY["EPSG","7030"]],\n    AUTHORITY["EPSG","6326"]],\n  PRIMEM["Greenwich",0,\n    AUTHORITY["EPSG","8901"]],\n  UNIT["m",1.0,\n    AUTHORITY["EPSG","9001"]],\n  AXIS["Geocentric X",OTHER],\n  AXIS["Geocentric Y",OTHER],\n  AXIS["Geocentric Z",NORTH],\n  AUTHORITY["EPSG","4978"]\n]`});function a(e){return e&&((0,r.f)(e)||e===c)?c:e&&((0,r.h)(e)||e===u)?u:i}function h(e){return e&&((0,r.f)(e)||e===c)?s.m:e&&((0,r.h)(e)||e===u)?s.a:s.e}function f(e){return(0,r.c)(e)?s.m:(0,r.d)(e)?s.a:s.e}},53785:(e,t,n)=>{n.d(t,{b:()=>M,c:()=>w,d:()=>q,e:()=>S,f:()=>x,g:()=>k,h:()=>E,i:()=>u,l:()=>T,u:()=>G,v:()=>P});var r=n(76506),s=n(57251),o=n(95587),i=n(60947),c=n(89623);const u=39.37,l=c.e.radius*Math.PI/200,a=/UNIT\[([^\]]+)\]\]$/i,h=i.o,f=/UNIT\[([^\]]+)\]/i,d=new Set([4261,4305,4807,4810,4811,4812,4816,4819,4821,4901,4902,37225,104139,104140]),m=(0,s.s)()({meter:"meters",foot:"feet",foot_us:"us-feet",foot_clarke:"clarke-feet",yard_clarke:"clarke-yards",link_clarke:"clarke-links",yard_sears:"sears-yards",foot_sears:"sears-feet",chain_sears:"sears-chains",chain_benoit_1895_b:"benoit-1895-b-chains",yard_indian:"indian-yards",yard_indian_1937:"indian-1937-yards",foot_gold_coast:"gold-coast-feet",chain_sears_1922_truncated:"sears-1922-truncated-chains","50_kilometers":"50-kilometers","150_kilometers":"150-kilometers"}),g=e=>e*e,y=e=>e*e*e,p={length:{baseUnit:"meters",units:{millimeters:{inBaseUnits:.001},centimeters:{inBaseUnits:.01},decimeters:{inBaseUnits:.1},meters:{inBaseUnits:1},kilometers:{inBaseUnits:1e3},inches:{inBaseUnits:.0254},feet:{inBaseUnits:.3048},yards:{inBaseUnits:.9144},miles:{inBaseUnits:1609.344},"nautical-miles":{inBaseUnits:1852},"us-feet":{inBaseUnits:1200/3937}}},area:{baseUnit:"square-meters",units:{"square-millimeters":{inBaseUnits:g(.001)},"square-centimeters":{inBaseUnits:g(.01)},"square-decimeters":{inBaseUnits:g(.1)},"square-meters":{inBaseUnits:1},"square-kilometers":{inBaseUnits:g(1e3)},"square-inches":{inBaseUnits:g(.0254)},"square-feet":{inBaseUnits:g(.3048)},"square-yards":{inBaseUnits:g(.9144)},"square-miles":{inBaseUnits:g(1609.344)},"square-us-feet":{inBaseUnits:g(1200/3937)},acres:{inBaseUnits:.0015625*g(1609.344)},ares:{inBaseUnits:100},hectares:{inBaseUnits:1e4}}},volume:{baseUnit:"liters",units:{liters:{inBaseUnits:1},"cubic-millimeters":{inBaseUnits:1e3*y(.001)},"cubic-centimeters":{inBaseUnits:1e3*y(.01)},"cubic-decimeters":{inBaseUnits:1e3*y(.1)},"cubic-meters":{inBaseUnits:1e3},"cubic-kilometers":{inBaseUnits:1e3*y(1e3)},"cubic-inches":{inBaseUnits:1e3*y(.0254)},"cubic-feet":{inBaseUnits:1e3*y(.3048)},"cubic-yards":{inBaseUnits:1e3*y(.9144)},"cubic-miles":{inBaseUnits:1e3*y(1609.344)}}},angle:{baseUnit:"radians",units:{radians:{inBaseUnits:1},degrees:{inBaseUnits:Math.PI/180}}}},b=function(){const e={};for(const t in p)for(const n in p[t].units)e[n]=t;return e}();function I(e){const t=b[e];if(t)return t;throw new Error("unknown type")}function U(e,t=null){return t=t||I(e),p[t].baseUnit===e}function w(e,t,n){if(t===n)return e;const r=I(t);if(r!==I(n))throw new Error("incompatible units");const s=U(t,r)?e:function(e,t,n){return e*p[n].units[t].inBaseUnits}(e,t,r);return U(n,r)?s:function(e,t,n){return e/p[n].units[t].inBaseUnits}(s,n,r)}function T(e,t,n){return w(e,t,"meters")/(n*Math.PI/180)}function G(e){return m.fromJSON(e.toLowerCase())||null}function M(e){if(e&&"object"==typeof e&&!(0,i.b)(e))return 1;const t=k(e);return t>1e5?1:t}function q(e){return k(e)>=(e instanceof i.Z?(0,o.g)(e).metersPerDegree:1e5)?"meters":P(e)}function k(e,t=c.e.metersPerDegree){return S(e,!0)||t}function S(e,t=!1){let n,r,s=null;if(null!=e&&("object"==typeof e?(n=e.wkid,r=e.wkt):"number"==typeof e?n=e:"string"==typeof e&&(r=e)),n){if((0,i.c)(n))return c.m.metersPerDegree;if((0,i.d)(n))return c.a.metersPerDegree;s=h.values[h[n]],!s&&t&&d.has(n)&&(s=l)}else r&&(F(r)?s=N(a.exec(r),s):O(r)&&(s=N(f.exec(r),s)));return s}function N(e,t){return e&&e[1]?B(e[1]):t}function B(e){return parseFloat(e.split(",")[1])}function P(e){let t,n,s=null;if(null!=e&&("object"==typeof e?(t=e.wkid,n=e.wkt):"number"==typeof e?t=e:"string"==typeof e&&(n=e)),t)s=h.units[h[t]];else if(n){const e=F(n)?a:O(n)?f:null;if(e){const t=e.exec(n);t&&t[1]&&(s=function(e){const t=/[\\"\\']{1}([^\\"\\']+)/.exec(e);let n=t&&t[1];if(!n||-1===h.units.indexOf(n)){const t=B(e);n=null;const r=h.values;for(let e=0;e<r.length;++e)if(Math.abs(t-r[e])<1e-7){n=h.units[e];break}}return n}(t[1]))}}return(0,r.i)(s)?G(s):null}function O(e){return/^GEOCCS/i.test(e)}function F(e){return/^PROJCS/i.test(e)}const Z={esriAcres:"acres",esriAres:"ares",esriHectares:"hectares",esriSquareCentimeters:"square-centimeters",esriSquareDecimeters:"square-decimeters",esriSquareFeet:"square-feet",esriSquareInches:"square-inches",esriSquareKilometers:"square-kilometers",esriSquareMeters:"square-meters",esriSquareMiles:"square-miles",esriSquareMillimeters:"square-millimeters",esriSquareUsFeet:"square-us-feet",esriSquareYards:"square-yards"},R={esriCentimeters:"centimeters",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriYards:"yards"},x=(0,s.s)()(Z),E=(0,s.s)()(R);(0,s.s)()({...Z,...R})}}]);