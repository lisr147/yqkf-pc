"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[9472,7258],{87239:(e,t,r)=>{r.d(t,{f:()=>f,n:()=>m,r:()=>d});var i=r(60991),n=r(50406),s=r(3482);const a=/^([a-z]{2})(?:[-_]([A-Za-z]{2}))?$/,o={ar:!0,bg:!0,bs:!0,ca:!0,cs:!0,da:!0,de:!0,el:!0,en:!0,es:!0,et:!0,fi:!0,fr:!0,he:!0,hr:!0,hu:!0,id:!0,it:!0,ja:!0,ko:!0,lt:!0,lv:!0,nb:!0,nl:!0,pl:!0,"pt-BR":!0,"pt-PT":!0,ro:!0,ru:!0,sk:!0,sl:!0,sr:!0,sv:!0,th:!0,tr:!0,uk:!0,vi:!0,"zh-CN":!0,"zh-HK":!0,"zh-TW":!0};function l(e){var t;return null!=(t=o[e])&&t}const c=[],u=new Map;function h(e){for(const t of u.keys())p(e.pattern,t)&&u.delete(t)}function d(e){return c.includes(e)||(h(e),c.unshift(e)),{remove(){const t=c.indexOf(e);t>-1&&(c.splice(t,1),h(e))}}}async function f(e){const t=(0,s.g)();u.has(e)||u.set(e,async function(e,t){const r=[];for(const i of c)if(p(i.pattern,e))try{return await i.fetchMessageBundle(e,t)}catch(e){r.push(e)}if(r.length)throw new i.Z("intl:message-bundle-error",`Errors occurred while loading "${e}"`,{errors:r});throw new i.Z("intl:no-message-bundle-loader",`No loader found for message bundle "${e}"`)}(e,t));const r=u.get(e);return await g.add(r),r}function m(e){if(!a.test(e))return null;const[,t,r]=a.exec(e),i=t+(r?"-"+r.toUpperCase():"");return l(i)?i:l(t)?t:null}function p(e,t){return"string"==typeof e?t.startsWith(e):e.test(t)}(0,s.b)((()=>{u.clear()}));const g=new class{constructor(){this._numLoading=0}async waitForAll(){this._dfd&&await this._dfd.promise}add(e){return this._increase(),e.then((()=>this._decrease()),(()=>this._decrease())),this.waitForAll()}_increase(){this._numLoading++,this._dfd||(this._dfd=(0,n.dD)())}_decrease(){this._numLoading=Math.max(this._numLoading-1,0),this._dfd&&0===this._numLoading&&(this._dfd.resolve(),this._dfd=null)}}},65514:(e,t,r)=>{r.d(t,{bA:()=>N});var i=r(60991),n=r(76506),s=r(50406),a=r(46987),o=r(37453),l=r(88762),c=r(92143),u=r(73173),h=r(31450),d=(r(66284),r(32101)),f=r(30773),m=r(3482);r(71552),r(40642),r(22723),r(82058),r(33921),r(57251),r(87239);let p=null;p=(0,d.hF)((0,u.g)("esri/core/workers/init.js"));const g={};g.baseUrl=(0,d.hF)((0,u.g)("dojo/")),g.packages=[{name:"esri",location:"../esri"}];class y{constructor(){const e=document.createDocumentFragment();["addEventListener","dispatchEvent","removeEventListener"].forEach((t=>{this[t]=(...r)=>e[t](...r)}))}}class x{constructor(){this._dispatcher=new y,this._workerPostMessage({type:o.M.HANDSHAKE})}terminate(){}get onmessage(){return this._onmessageHandler}set onmessage(e){this._onmessageHandler&&this.removeEventListener("message",this._onmessageHandler),this._onmessageHandler=e,e&&this.addEventListener("message",e)}get onmessageerror(){return this._onmessageerrorHandler}set onmessageerror(e){this._onmessageerrorHandler&&this.removeEventListener("messageerror",this._onmessageerrorHandler),this._onmessageerrorHandler=e,e&&this.addEventListener("messageerror",e)}get onerror(){return this._onerrorHandler}set onerror(e){this._onerrorHandler&&this.removeEventListener("error",this._onerrorHandler),this._onerrorHandler=e,e&&this.addEventListener("error",e)}postMessage(e){(0,f.n)((()=>{this._workerMessageHandler(new MessageEvent("message",{data:e}))}))}dispatchEvent(e){return this._dispatcher.dispatchEvent(e)}addEventListener(e,t,r){this._dispatcher.addEventListener(e,t,r)}removeEventListener(e,t,r){this._dispatcher.removeEventListener(e,t,r)}_workerPostMessage(e){(0,f.n)((()=>{this.dispatchEvent(new MessageEvent("message",{data:e}))}))}async _workerMessageHandler(e){const t=(0,o.r)(e);if(t&&t.type===o.M.OPEN){const{modulePath:e,jobId:r}=t;let i=await o.default.loadWorker(e);i||(i=await import(e));const n=o.default.connect(i);this._workerPostMessage({type:o.M.OPENED,jobId:r,data:n})}}}const w=c.L.getLogger("esri.core.workers"),{HANDSHAKE:b}=o.M;let v,I;const _="Failed to create Worker. Fallback to execute module in main thread";async function R(e){return new Promise((t=>{function r(n){const s=(0,o.r)(n);s&&s.type===b&&(e.removeEventListener("message",r),e.removeEventListener("error",i),t(e))}function i(t){t.preventDefault(),e.removeEventListener("message",r),e.removeEventListener("error",i),w.warn("Failed to create Worker. Fallback to execute module in main thread",t),(e=new x).addEventListener("message",r),e.addEventListener("error",i)}e.addEventListener("message",r),e.addEventListener("error",i)}))}let k=0;const S=c.L.getLogger("esri.core.workers"),{ABORT:C,INVOKE:T,OPEN:P,OPENED:M,RESPONSE:O}=o.M;class E{constructor(e,t){this._outJobs=new Map,this._inJobs=new Map,this.worker=e,this.id=t,e.addEventListener("message",this._onMessage.bind(this)),e.addEventListener("error",(e=>{e.preventDefault(),S.error(e)}))}static async create(e){const t=await async function(){if(!(0,n.h)("esri-workers")||((0,n.h)("mozilla"),0))return R(new x);if(!v&&!I)try{const e='let globalId=0;const outgoing=new Map,configuration=JSON.parse("{CONFIGURATION}");self.esriConfig=configuration.esriConfig;const workerPath=self.esriConfig.workers.workerPath,HANDSHAKE=0,OPEN=1,OPENED=2,RESPONSE=3,INVOKE=4,ABORT=5;function createAbortError(){const e=new Error("Aborted");return e.name="AbortError",e}function receiveMessage(e){return e&&e.data?"string"==typeof e.data?JSON.parse(e.data):e.data:null}function invokeStaticMessage(e,o,r){const t=r&&r.signal,n=globalId++;return new Promise(((r,i)=>{if(t){if(t.aborted)return i(createAbortError());t.addEventListener("abort",(()=>{outgoing.get(n)&&(outgoing.delete(n),self.postMessage({type:5,jobId:n}),i(createAbortError()))}))}outgoing.set(n,{resolve:r,reject:i}),self.postMessage({type:4,jobId:n,methodName:e,abortable:null!=t,data:o})}))}let workerRevisionChecked=!1;function checkWorkerRevision(e){if(!workerRevisionChecked&&e.kernelInfo){workerRevisionChecked=!0;const{revision:o,buildDate:r,version:t}=configuration.kernelInfo,{revision:n,buildDate:i,version:s}=e.kernelInfo;o!==n&&console.warn(`[esri.core.workers] Version mismatch detected between ArcGIS API for JavaScript and assets:\\nAPI version: ${t} [Date: ${r}, Revision: ${o.slice(0,8)}]\nAssets version: ${s} [Date: ${i}, Revision: ${n.slice(0,8)}]`)}}function messageHandler(e){const o=receiveMessage(e);if(!o)return;const r=o.jobId;switch(o.type){case 1:let e;function t(o){const t=e.connect(o);self.postMessage({type:2,jobId:r,data:t},[t])}"function"==typeof define&&define.amd?require([workerPath],(r=>{e=r.default||r,checkWorkerRevision(e),e.loadWorker(o.modulePath).then((e=>e||new Promise((e=>{require([o.modulePath],e)})))).then(t)})):"System"in self&&"function"==typeof System.import?System.import(workerPath).then((r=>(e=r.default,checkWorkerRevision(e),e.loadWorker(o.modulePath)))).then((e=>e||System.import(o.modulePath))).then(t):esriConfig.workers.useDynamicImport?import(workerPath).then((r=>{e=r.default||r,checkWorkerRevision(e),e.loadWorker(o.modulePath).then((e=>e||import(o.modulePath))).then(t)})):(self.RemoteClient||importScripts(workerPath),e=self.RemoteClient.default||self.RemoteClient,checkWorkerRevision(e),e.loadWorker(o.modulePath).then(t));break;case 3:if(outgoing.has(r)){const e=outgoing.get(r);outgoing.delete(r),o.error?e.reject(JSON.parse(o.error)):e.resolve(o.data)}}}self.dojoConfig=configuration.loaderConfig,esriConfig.workers.loaderUrl&&(self.importScripts(esriConfig.workers.loaderUrl),"function"==typeof require&&"function"==typeof require.config&&require.config(configuration.loaderConfig)),self.addEventListener("message",messageHandler),self.postMessage({type:0});'.replace('"{CONFIGURATION}"',`'${function(){let e;if(null!=h.Z.default){const t={...h.Z};delete t.default,e=JSON.parse(JSON.stringify(t))}else e=JSON.parse(JSON.stringify(h.Z));e.assetsPath=(0,d.hF)(e.assetsPath),e.request.interceptors=[],e.log.interceptors=[],e.locale=(0,m.g)(),e.has={"esri-csp-restrictions":(0,n.h)("esri-csp-restrictions"),"esri-2d-debug":!1,"esri-2d-update-debug":(0,n.h)("esri-2d-update-debug"),"esri-2d-query-centroid-enabled":(0,n.h)("esri-2d-query-centroid-enabled"),"featurelayer-pbf":(0,n.h)("featurelayer-pbf"),"featurelayer-simplify-thresholds":(0,n.h)("featurelayer-simplify-thresholds"),"featurelayer-simplify-payload-size-factors":(0,n.h)("featurelayer-simplify-payload-size-factors"),"featurelayer-simplify-mobile-factor":(0,n.h)("featurelayer-simplify-mobile-factor"),"esri-atomics":(0,n.h)("esri-atomics"),"esri-shared-array-buffer":(0,n.h)("esri-shared-array-buffer"),"esri-tiles-debug":(0,n.h)("esri-tiles-debug"),"esri-workers-arraybuffer-transfer":(0,n.h)("esri-workers-arraybuffer-transfer"),"feature-polyline-generalization-factor":(0,n.h)("feature-polyline-generalization-factor"),"host-webworker":1},e.workers.loaderUrl?e.workers.loaderUrl=(0,d.hF)(e.workers.loaderUrl):p&&(e.workers.loaderUrl=p),e.workers.workerPath?e.workers.workerPath=(0,d.hF)(e.workers.workerPath):e.workers.workerPath="esri/core/workers/RemoteClient",e.workers.useDynamicImport=!1;const t=h.Z.workers.loaderConfig,r=function(e){var t;const r={async:e.async,isDebug:e.isDebug,locale:e.locale,baseUrl:e.baseUrl,has:{...e.has},map:{...e.map},packages:e.packages&&e.packages.concat()||[],paths:{...e.paths}};return e.hasOwnProperty("async")||(r.async=!0),e.hasOwnProperty("isDebug")||(r.isDebug=!1),e.baseUrl||(r.baseUrl=g.baseUrl),null==(t=g.packages)||t.forEach((e=>{!function(e,t){for(const r of e)if(r.name===t.name)return;e.push(t)}(r.packages,e)})),r}({baseUrl:null==t?void 0:t.baseUrl,locale:(0,m.g)(),has:{"csp-restrictions":1,"dojo-test-sniff":0,"host-webworker":1,...null==t?void 0:t.has},map:{...null==t?void 0:t.map},paths:{...null==t?void 0:t.paths},packages:(null==t?void 0:t.packages)||[]}),i={version:l.i8,buildDate:l.rh,revision:l.LB};return JSON.stringify({esriConfig:e,loaderConfig:r,kernelInfo:i})}()}'`);v=URL.createObjectURL(new Blob([e],{type:"text/javascript"}))}catch(e){I=e||{}}let e;if(v)try{e=new Worker(v,{name:"esri-worker-"+k++})}catch(t){w.warn(_,I),e=new x}else w.warn(_,I),e=new x;return R(e)}();return new E(t,e)}terminate(){this.worker.terminate()}async open(e,t={}){const{signal:r}=t,i=(0,o.n)();return new Promise(((t,n)=>{const a={resolve:t,reject:n,abortHandle:(0,s.$F)(r,(()=>{this._outJobs.delete(i),this._post({type:C,jobId:i})}))};this._outJobs.set(i,a),this._post({type:P,jobId:i,modulePath:e})}))}_onMessage(e){const t=(0,o.r)(e);if(t)switch(t.type){case M:this._onOpenedMessage(t);break;case O:this._onResponseMessage(t);break;case C:this._onAbortMessage(t);break;case T:this._onInvokeMessage(t)}}_onAbortMessage(e){const t=this._inJobs,r=e.jobId,i=t.get(r);i&&(i.controller&&i.controller.abort(),t.delete(r))}_onInvokeMessage(e){const{methodName:t,jobId:r,data:i,abortable:n}=e,a=n?new AbortController:null,c=this._inJobs,u=l.Nv[t];let h;try{if("function"!=typeof u)throw new TypeError(`${t} is not a function`);h=u.call(null,i,{signal:a?a.signal:null})}catch(e){return void this._post({type:O,jobId:r,error:(0,o.t)(e)})}(0,s.y8)(h)?(c.set(r,{controller:a,promise:h}),h.then((e=>{c.has(r)&&(c.delete(r),this._post({type:O,jobId:r},e))}),(e=>{c.has(r)&&(c.delete(r),e||(e={message:"Error encountered at method"+t}),(0,s.D_)(e)||this._post({type:O,jobId:r,error:(0,o.t)(e||{message:`Error encountered at method ${t}`})}))}))):this._post({type:O,jobId:r},h)}_onOpenedMessage(e){var t;const{jobId:r,data:i}=e,n=this._outJobs.get(r);n&&(this._outJobs.delete(r),null==(t=n.abortHandle)||t.remove(),n.resolve(i))}_onResponseMessage(e){var t;const{jobId:r,error:n,data:s}=e,a=this._outJobs.get(r);a&&(this._outJobs.delete(r),null==(t=a.abortHandle)||t.remove(),n?a.reject(i.Z.fromJSON(JSON.parse(n))):a.resolve(s))}_post(e,t,r){return(0,o.p)(this.worker,e,t,r)}}let F=(0,n.h)("esri-workers-debug")?1:(0,n.h)("host-browser")?navigator.hardwareConcurrency-1:0;F||(F=(0,n.h)("safari")&&(0,n.h)("mac")||(0,n.h)("trident")?7:2);let B=0;const D=[];async function L(e,t){const r=new a.Z;return await r.open(e,t),r}async function N(e,t={}){if("string"!=typeof e)throw new i.Z("workers:undefined-module","modulePath is missing");let r=t.strategy||"distributed";if((0,n.h)("host-webworker")&&!(0,n.h)("esri-workers")&&(r="local"),"local"===r){let r=await o.default.loadWorker(e);r||(r=await import(e)),(0,s.k_)(t.signal);const i=t.client||r;return L([o.default.connect(r)],{...t,client:i})}if(await async function(){if(H)return H;A=new AbortController;const e=[];for(let t=0;t<F;t++){const r=E.create(t).then((e=>(D[t]=e,e)));e.push(r)}return H=Promise.all(e),H}(),(0,s.k_)(t.signal),"dedicated"===r){const r=B++%F;return L([await D[r].open(e,t)],t)}if(t.maxNumWorkers&&t.maxNumWorkers>0){const r=Math.min(t.maxNumWorkers,F);if(r<F){const i=new Array(r);for(let n=0;n<r;++n){const r=B++%F;i[n]=D[r].open(e,t)}return L(i,t)}}return L(D.map((r=>r.open(e,t))),t)}let A,H=null},66284:(e,t,r)=>{r.d(t,{ng:()=>f});var i=r(33921),n=r(92143),s=r(71552),a=r(40642),o=(r(3482),r(87239)),l=r(82058),c=r(60991),u=r(76506),h=r(73173);r(57251),r(31450),r(50406),r(88762),r(32101);const d=n.L.getLogger("esri.intl");function f(e,t,r={}){const{format:n={}}=r;return(0,a.r)(e,(e=>function(e,t,r){let n,a;const o=e.indexOf(":");if(-1===o?n=e.trim():(n=e.slice(0,o).trim(),a=e.slice(o+1).trim()),!n)return"";const l=(0,s.g)(n,t);if(null==l)return"";const c=r[a]||r[n];return c?function(e,t){switch(t.type){case"date":return(0,i.f)(e,t.intlOptions);case"number":return(0,i.a)(e,t.intlOptions);default:return d.warn("missing format descriptor for key {key}"),m(e)}}(l,c):a?function(e,t){switch(t.toLowerCase()){case"dateformat":return(0,i.f)(e);case"numberformat":return(0,i.a)(e);default:return d.warn(`inline format is unsupported since 4.12: ${t}`),/^(dateformat|datestring)/i.test(t)?(0,i.f)(e):/^numberformat/i.test(t)?(0,i.a)(e):m(e)}}(l,a):m(l)}(e,t,n)))}function m(e){switch(typeof e){case"string":return e;case"number":return(0,i.a)(e);case"boolean":return""+e;default:return e instanceof Date?(0,i.f)(e):""}}async function p(e){if((0,u.i)(y.fetchBundleAsset))return y.fetchBundleAsset(e);const t=await(0,l.default)(e,{responseType:"text"});return JSON.parse(t.data)}class g{constructor({base:e="",pattern:t,location:r=new URL(window.location.href)}){let i;i="string"==typeof r?e=>new URL(e,new URL(r,window.location.href)).href:r instanceof URL?e=>new URL(e,r).href:r,this.pattern="string"==typeof t?new RegExp(`^${t}`):t,this.getAssetUrl=i,e=e?e.endsWith("/")?e:e+"/":"",this.matcher=new RegExp(`^${e}(?:(.*)/)?(.*)$`)}fetchMessageBundle(e,t){return async function(e,t,r,i){const n=t.exec(r);if(!n)throw new c.Z("esri-intl:invalid-bundle",`Bundle id "${r}" is not compatible with the pattern "${t}"`);const s=n[1]?`${n[1]}/`:"",a=n[2],l=(0,o.n)(i),u=`${s}${a}.json`,h=l?`${s}${a}_${l}.json`:u;let d;try{d=await p(e(h))}catch(t){if(h===u)throw new c.Z("intl:unknown-bundle",`Bundle "${r}" cannot be loaded`,{error:t});try{d=await p(e(u))}catch(e){throw new c.Z("intl:unknown-bundle",`Bundle "${r}" cannot be loaded`,{error:e})}}return d}(this.getAssetUrl,this.matcher,e,t)}}const y={};var x;(0,o.r)((x={pattern:"esri/",location:h.g},new g(x)))},79472:(e,t,r)=>{r.r(t),r.d(t,{default:()=>Ne});var i=r(29768),n=r(86748),s=r(88678),a=r(60991),o=r(76506),l=r(54179),c=r(50406),u=r(34250),h=r(91306),d=r(59465),f=r(97714),m=r(17533),p=r(41617),g=r(11118),y=r(8547),x=(r(74569),r(82058)),w=r(92143),b=r(63136),v=r(60947),I=r(21132),_=r(67541),R=r(66827),k=r(13074),S=r(43352),C=r(7534),T=r(1030),P=r(40558),M=r(35717),O=r(21801),E=r(74673),F=r(20543),B=r(72246),D=r(52182),L=r(91597);const N=new Map,A=new class{constructor(e=15e3,t=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,t)}decreaseRefCount(e,t){const r=e+"/"+t,i=this._cachedBlocks;if(i.has(r)){const e=i.get(r);return e.refCount--,e.refCount<=0&&(i.delete(r),e.controller&&e.controller.abort()),e.refCount}return 0}getBlock(e,t){const r=e+"/"+t,i=this._cachedBlocks;if(i.has(r)){const e=i.get(r);return e.ts=Date.now(),e.refCount++,i.delete(r),i.set(r,e),e.block}return null}putBlock(e,t,r,i=null){const n=this._cachedBlocks,s=e+"/"+t;if(n.has(s)){const e=n.get(s);e.ts=Date.now(),e.refCount++}else n.set(s,{block:r,ts:Date.now(),refCount:1,controller:i});this._trim(),this._updateTimer()}deleteBlock(e,t){const r=this._cachedBlocks,i=e+"/"+t;r.has(i)&&r.delete(i)}updateMaxSize(e){this._size=e,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(null!=this._timer)return;const e=this._cachedBlocks;this._timer=setInterval((()=>{const t=Array.from(e),r=Date.now();for(let i=0;i<t.length&&t[i][1].ts<=r-this._duration;i++)e.delete(t[i][0]);0===e.size&&this._clearTimer()}),this._interval)}_trim(){const e=this._cachedBlocks;if(-1===this._size||this._size>=e.size)return;const t=Array.from(e);for(let r=0;r<t.length-this._size;r++)e.delete(t[r][0])}_clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}};function H(e,t){return null==t?e:`${e}?sliceId=${t}`}function z(e,t,r){if(!N.has(e))return null==t?A.decreaseRefCount(e,r):0;const i=N.get(e);if(null==i[t])return A.decreaseRefCount(e,r);const n=i[t].cache;if(n.has(r)){const e=n.get(r);if(e.refCount--,0===e.refCount){n.delete(r);for(let e=0;e<i.length;e++)i[e]&&i[e].cache.has(r)&&i[e].cache.delete(r);e.controller&&e.controller.abort()}return e.refCount}return 0}function J(e,t,r){if(!N.has(e))return null==t?A.getBlock(e,r):null;const i=N.get(e);if(null==i[t]){for(let e=0;e<i.length;e++)if(i[e]&&i[e].cache.has(r)){const t=i[e].cache.get(r);return t.refCount++,t.block}return A.getBlock(e,r)}const n=i[t].cache;if(n.has(r)){const e=n.get(r);return e.refCount++,e.block}for(let e=0;e<i.length;e++)if(e!==t&&i[e]&&i[e]&&i[e].cache.has(r)){const t=i[e].cache.get(r);return t.refCount++,n.set(r,t),t.block}return null}function Z(e,t,r,i,n=null){if(!N.has(e))return void(null==t&&A.putBlock(e,r,i,n));const s=N.get(e);if(null==s[t])return void A.putBlock(e,r,i,n);const a={refCount:1,block:i,isResolved:!1,isRejected:!1,controller:n};i.then((()=>a.isResolved=!0)).catch((()=>a.isRejected=!0)),s[t].cache.set(r,a)}function j(e,t,r){if(!N.has(e))return void(null==t&&A.deleteBlock(e,r));const i=N.get(e);null!=i[t]?i[t].cache.delete(r):A.deleteBlock(e,r)}var W=r(98264);const U=w.L.getLogger("esri.layers.mixins.ImageryTileMixin"),q=e=>{let t=class extends e{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.multidimensionalDefinition=null,this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set url(e){this._set("url",(0,I.s)(e,U))}set renderer(e){this._set("renderer",e),this.updateRenderer()}async convertVectorFieldData(e,t){if((0,o.b)(e))return null;const r=this._rasterJobHandler.instance,i=this.rasterInfo.dataType;return r?r.convertVectorFieldData({pixelBlock:e,dataType:i},t):(0,C.c)(e,i)}async createStreamlinesMesh(e,t){const r=this._rasterJobHandler.instance;return r?r.createStreamlinesMesh(e,t):(0,M.c)(e.rendererSettings,e.flowData,(0,o.i)(t.signal)?t.signal:(new AbortController).signal)}normalizeRasterFetchOptions(e){const{multidimensionalInfo:t}=this.rasterInfo;if((0,o.b)(t))return e;let r=e.multidimensionalDefinition||this.multidimensionalDefinition;!(0,o.b)(r)&&r.length||(r=this._getDefaultSlice());const i=e.timeExtent||this.timeExtent;if((0,o.i)(r)&&(0,o.i)(i)&&((0,o.i)(i.start)||(0,o.i)(i.end))){var n,s;r=r.map((e=>e.clone()));const a=null==(n=t.variables.find((({name:e})=>e===r[0].variableName)))||null==(s=n.dimensions)?void 0:s.find((({name:e})=>"StdTime"===e)),l=r.find((({dimensionName:e})=>"StdTime"===e));if(!a||!l)return{...e,multidimensionalDefinition:null};const{start:c,end:u}=i,h=(0,o.b)(c)?null:c.getTime(),d=(0,o.b)(u)?null:u.getTime(),f=null!=h?h:d,m=null!=d?d:h;if((0,o.i)(a.values)){const e=a.values.filter((e=>{if(Array.isArray(e)){if(f===m)return e[0]<=f&&e[1]>=f;const t=e[0]<=f&&e[1]>f||e[0]<m&&e[1]>=m,r=e[0]>=f&&e[1]<=m||e[0]<f&&e[1]>m;return t||r}return f===m?e===f:e>=f&&e<=m}));if(e.length){const t=e.sort(((e,t)=>{var r,i,n,s;return f===m?(null!=(n=e[0])?n:e)-(null!=(s=t[0])?s:t):Math.abs((null!=(r=e[1])?r:e)-m)-Math.abs((null!=(i=t[1])?i:t)-m)}))[0];l.values=[t]}else r=null}else if(a.hasRegularIntervals&&a.extent){const[e,t]=a.extent;f>t||m<e?r=null:l.values=f===m?[f]:[Math.max(e,f),Math.min(t,m)]}}return{...e,multidimensionalDefinition:r}}async updateRenderer(){if(!this.loaded)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const e=this._rasterJobHandler.instance;e&&(this.symbolizer.rendererJSON=(0,T.n)(this.renderer.toJSON()),this.symbolizer.bind(),await e.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){const r=e&&e.pixelBlock;if(!((0,o.i)(r)&&r.pixels&&r.pixels.length>0))return null;let i;await this.updateRenderer();const n=this._rasterJobHandler.instance,{bandIds:s}=this;return i=n?await n.symbolize({...e,simpleStretchParams:t,bandIds:s}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:s}),i}getTileUrl(e,t,r){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${r}`:""}getCompatibleTileInfo(e,t,r=!1){if(!this.loaded||(0,o.b)(t))return null;if(r&&e.equals(this.spatialReference))return this.tileInfo;const i=(0,v.g)(e);return S.Z.create({size:256,spatialReference:e,origin:i?{x:i.origin[0],y:i.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,r,i={}){if(i.requestAsImageElement){const n=this.getTileUrl(e,t,r);return(0,x.default)(n,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:i.signal}).then((e=>e.data))}if((0,o.i)(this.rasterInfo.multidimensionalInfo)&&(i=this.normalizeRasterFetchOptions(i),(0,o.b)(i.multidimensionalDefinition))){const n=i.tileInfo||this.rasterInfo.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(e,t,r,n),pixelBlock:null}}return await this._initJobHandler(),"raster-shaded-relief"===this.renderer.type&&(i={...i,buffer:{cols:1,rows:1}}),this.raster.fetchTile(e,t,r,i)}async fetchPixels(e,t,r,i={}){return(0,o.i)(this.rasterInfo.multidimensionalInfo)&&(i=this.normalizeRasterFetchOptions(i),(0,o.b)(i.multidimensionalDefinition))?{extent:e,pixelBlock:null}:(await this._initJobHandler(),this.raster.fetchPixels(e,t,r,i))}async identify(e,t={}){return(0,o.i)(this.rasterInfo.multidimensionalInfo)&&(t=this.normalizeRasterFetchOptions(t),(0,o.b)(t.multidimensionalDefinition))?{location:e,value:null}:this.raster.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var e;const t=this.rasterInfo.multidimensionalInfo;if(!(0,o.i)(t)||"standard-time"!==this.rasterInfo.dataType)return!1;const r=null==(e=this.multidimensionalDefinition[0])?void 0:e.variableName;return t.variables.some((e=>e.name===r&&e.dimensions.some((e=>"StdTime"===e.name))))}getStandardTimeValue(e){return new Date(24*(e-25569)*3600*1e3).toString()}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=this._getDefaultSlice()),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new k.R;return this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer()})).catch((()=>null)),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null}_configDefaultInterpolation(){if(null==this.interpolation){var e;const t=(0,T.b)(this.rasterInfo,this.raster.tileType,null==(e=this.sourceJSON)?void 0:e.defaultResamplingMethod);this._set("interpolation",t)}}_getDefaultSlice(){const{multidimensionalInfo:e}=this.raster.rasterInfo;if(!(0,o.i)(e))return null;const t=e.variables[0];return t.dimensions.map((e=>{var r,i;return new R.Z({variableName:t.name,dimensionName:e.name,values:[null!=(r=null==(i=e.values)?void 0:i[0])?r:e.extent[0]],isSlice:!0})}))}_configDefaultRenderer(){const e=this.raster.rasterInfo;var t;this.bandIds||(this.bandIds=(0,T.a)(e)),this.renderer||(this.renderer=(0,T.c)(e,{bandIds:this.bandIds,variableName:(0,o.i)(this.multidimensionalDefinition)?null==(t=this.multidimensionalDefinition[0])?void 0:t.variableName:null})),this.symbolizer?(this.symbolizer.rendererJSON=(0,T.n)(this.renderer.toJSON()),this.symbolizer.rasterInfo=e):this.symbolizer=new P.R({rendererJSON:this.renderer.toJSON(),rasterInfo:e});const r=this.symbolizer.bind();r.success||U.warn("imagery-tile-mixin",r.error||"The given renderer is not supported by the layer.")}};return(0,i._)([(0,u.Cb)()],t.prototype,"_cachedRendererJson",void 0),(0,i._)([(0,u.Cb)()],t.prototype,"_compatibleFullExtent",void 0),(0,i._)([(0,u.Cb)()],t.prototype,"_rasterJobHandler",void 0),(0,i._)([(0,u.Cb)()],t.prototype,"bandIds",void 0),(0,i._)([(0,u.Cb)({json:{origins:{service:{read:{source:"copyrightText"}}}}})],t.prototype,"copyright",void 0),(0,i._)([(0,u.Cb)({type:O.Z,json:{read:!1}}),(0,b.B)("rasterInfo.extent")],t.prototype,"fullExtent",void 0),(0,i._)([(0,u.Cb)()],t.prototype,"interpolation",void 0),(0,i._)([(0,u.Cb)()],t.prototype,"ioConfig",void 0),(0,i._)([(0,u.Cb)({type:[R.Z]})],t.prototype,"multidimensionalDefinition",void 0),(0,i._)([(0,u.Cb)()],t.prototype,"raster",void 0),(0,i._)([(0,u.Cb)({readOnly:!0}),(0,b.B)("raster.rasterInfo")],t.prototype,"rasterInfo",void 0),(0,i._)([(0,u.Cb)()],t.prototype,"sourceJSON",void 0),(0,i._)([(0,u.Cb)({type:v.Z,json:{read:!1}}),(0,b.B)("rasterInfo.spatialReference")],t.prototype,"spatialReference",void 0),(0,i._)([(0,u.Cb)({type:S.Z,json:{read:!1}}),(0,b.B)("rasterInfo.storageInfo.tileInfo")],t.prototype,"tileInfo",void 0),(0,i._)([(0,u.Cb)(_.u)],t.prototype,"url",null),(0,i._)([(0,u.Cb)({types:s.dr})],t.prototype,"renderer",null),(0,i._)([(0,u.Cb)()],t.prototype,"symbolizer",void 0),t=(0,i._)([(0,m.j)("esri.layers.ImageryTileMixin")],t),t};let G=class extends((0,F.a)(E.a)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const e=(0,D.l)();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:S.Z.create(),...e.ioConfig}}),e}get _isGlobalWrappableSource(){const{rasterInfo:e}=this,t=(0,D.g)(e.spatialReference);return(0,o.i)(t)&&e.extent.width>=t/2}set url(e){this._set("url",(0,I.s)(e,w.L.getLogger(this.declaredClass)))}async open(e){throw new a.Z("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,r,i={}){const n=i.tileInfo||this.rasterInfo.storageInfo.tileInfo,s=this.getTileExtentFromTileInfo(e,t,r,n);return this.fetchPixels(s,n.size[0],n.size[1],i)}async identify(e,t={}){t=this._getRequestOptionsWithSliceId(t);const{spatialReference:r,extent:i}=this.rasterInfo,{datumTransformation:n}=t;let s=(0,D.p)(e,r,n);if(!i.intersects(s))return{location:s,value:null};if((0,o.i)(this.rasterInfo.transform)){const e=this.rasterInfo.transform.inverseTransform(s);if(!this.rasterInfo.nativeExtent.intersects(e))return{location:e,value:null};s=e}let a=0;if(t.srcResolution)a=(0,D.s)(t.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(a=await this.computeBestPyramidLevelForLocation(e,t),null==a)return{location:s,value:null};const l=this.identifyPixelLocation(s,a,null);if(null===l)return{location:s,value:null};const{row:c,col:u,rowOffset:h,colOffset:d}=l,f=H(this.url,t.sliceId),m=`${a}/${c}/${u}`;let p=J(f,null,m);(0,o.b)(p)&&(p=this.fetchRawTile(a,c,u,t),Z(f,null,m,p));const g=await p;if((0,o.b)(g)||!g.pixels||0===g.pixels.length)return{location:s,value:null};const y=h*this.rasterInfo.storageInfo.blockHeight+d,x=!g.mask||g.mask[y]?g.pixels.map((e=>e[y])):null,w=this.rasterInfo.dataType;return("vector-magdir"===w||"vector-uv"===w)&&(null==x?void 0:x.length)>1?{location:s,value:x,magdirValue:"vector-magdir"===w?[x[0],x[1]]:(0,C.u)([x[0],x[1]]),pyramidLevel:a}:{location:s,value:x,pyramidLevel:a}}async fetchPixels(e,t,r,i={}){if(e=(0,D.a)(e),(i=this._getRequestOptionsWithSliceId(i)).requestRawData)return this._fetchPixels(e,t,r,i);const n=(0,D.g)(e.spatialReference),s=(0,D.b)(e);if((0,o.b)(n)||0===s||1===s&&this._isGlobalWrappableSource)return this._fetchPixels(e,t,r,i);if(s>=3)return{extent:e,pixelBlock:null};const a=[],{xmin:l,xmax:c}=e,u=Math.round(n/(c-l)*t),h=u-Math.round((n/2-l)/(c-l)*t);let d=0;const f=[];for(let o=0;o<=s;o++){const m=new O.Z({xmin:0===o?l:-n/2,xmax:o===s?c-n*o:n/2,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference}),p=0===o?u-h:o===s?t-d:u;d+=p,f.push(p);const g=i.disableWrapAround&&o>0?null:this._fetchPixels(m,p,r,i);a.push(g)}const m=(await Promise.all(a)).map((e=>null==e?void 0:e.pixelBlock));let p=null;const g={width:t,height:r};return p=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:m,srcMosaicSize:g,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:f},i)).pixelBlock:(0,W.m)(m,g,{blockWidths:f}),{extent:e,srcExtent:(0,D.c)(e,this.rasterInfo.spatialReference,i.datumTransformation),pixelBlock:p}}async fetchRawPixels(e,t,r,i={}){t={x:Math.floor(t.x),y:Math.floor(t.y)};const n=await this._fetchRawTiles(e,t,r,i),{nativeExtent:s,nativePixelSize:a,storageInfo:l}=this.rasterInfo,c=2**e,u=a.x*c,h=a.y*c,d=new O.Z({xmin:s.xmin+u*t.x,xmax:s.xmin+u*(t.x+r.width-1),ymin:s.ymax-h*(t.y+r.height-1),ymax:s.ymax-h*t.y,spatialReference:s.spatialReference});if(!n)return{extent:d,srcExtent:d,pixelBlock:null};const{pixelBlocks:f,mosaicSize:m}=n;if(1===f.length&&(0,o.i)(f[0])&&f[0].width===r.width&&f[0].height===r.height)return{extent:d,srcExtent:d,pixelBlock:n.pixelBlocks[0]};const p=e>0?l.pyramidBlockWidth:l.blockWidth,g=e>0?l.pyramidBlockHeight:l.blockHeight,y={x:t.x%p,y:t.y%g};let x;return x=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:f,srcMosaicSize:m,destDimension:r,clipOffset:y,clipSize:r,coefs:null,sampleSpacing:null,interpolation:i.interpolation,alignmentInfo:null,blockWidths:null},i)).pixelBlock:(0,W.m)(f,m,{clipOffset:y,clipSize:r}),{extent:d,srcExtent:d,pixelBlock:x}}fetchRawTile(e,t,r,i){throw new a.Z("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return(0,D.c)(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?(0,P.d)(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t,r){var i,n;const{customFetchParameters:s}=this.ioConfig,{range:a,query:o,headers:l}=t;r=null!=(i=null!=(n=r)?n:t.retryCount)?i:this.ioConfig.retryCount;const c=a?{Range:`bytes=${a.from}-${a.to}`}:null;try{return await(0,x.default)(e,{...t,query:{...o,...s},headers:{...l,...c}})}catch(i){if(r>0)return r--,this.request(e,t,r);throw i}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;if(!(0,o.i)(t))return null;if(!(0,o.i)(e)||0===e.length)return null;let r=0;const i=e[0].variableName;for(let n=0;n<t.variables.length;n++){const s=t.variables[n],a=s.dimensions;if(s.name!==i){r+=a.map((e=>this._getDimensionValuesCount(e))).reduce(((e,t)=>e+t));break}const o=a.map((e=>this._getDimensionValuesCount(e))),l=a.length;for(let t=0;t<l;t++){const i=e.find((e=>e.dimensionName===a[t].name));if(null==i)return null;const n=Array.isArray(i.values[0])?i.values[0][0]:i.values[0],s=this._getIndexFromDimensions(n,a[t]);if(-1===s)return null;o.shift(),r+=t===l-1?s:s*o.reduce(((e,t)=>e+t))}}return r}getTileExtentFromTileInfo(e,t,r,i){const n=i.lodAt(e);return this.getTileExtent({x:n.resolution,y:n.resolution},t,r,i.origin,i.spatialReference,i.size)}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:r,pixelSize:i}=this.rasterInfo;if(!e.tileInfo){const n=[],s=e.maximumPyramidLevel||0;let a=Math.max(i.x,i.y),o=1/.0254*96*a;for(let e=0;e<=s;e++)n.push({level:s-e,resolution:a,scale:o}),a*=2,o*=2;const l=new L.Z({x:r.xmin,y:r.ymax,spatialReference:t});e.tileInfo=new S.Z({origin:l,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:n}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,r=512,i){const{width:n,height:s,nativeExtent:a,pixelSize:o,spatialReference:l}=e,c=new L.Z({x:a.xmin,y:a.ymax,spatialReference:l});null==i&&(i=Math.max(0,Math.round(Math.log(Math.max(n,s))/Math.LN2-8)));const u=this.computeBlockBoundary(a,512,512,{x:a.xmin,y:a.ymax},[o],i);e.storageInfo=new B.R({blockWidth:t,blockHeight:r,pyramidBlockWidth:t,pyramidBlockHeight:r,origin:c,firstPyramidLevel:1,maximumPyramidLevel:i,blockBoundary:u})}async computeBestPyramidLevelForLocation(e,t={}){return 0}computeBlockBoundary(e,t,r,i,n,s=0,a=2){if(1===n.length&&s>0){n=[...n];let{x:e,y:t}=n[0];for(let r=0;r<s;r++)e*=a,t*=a,n.push({x:e,y:t})}const o=[],{x:l,y:c}=i;for(let i=0;i<n.length;i++){const{x:s,y:a}=n[i];o.push({minCol:Math.floor((e.xmin-l+.1*s)/t/s),maxCol:Math.floor((e.xmax-l-.1*s)/t/s),minRow:Math.floor((c-e.ymax+.1*a)/r/a),maxRow:Math.floor((c-e.ymin-.1*a)/r/a)})}return o}getPyramidPixelSize(e){const{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:r,pyramidScalingFactor:i}=this.rasterInfo.storageInfo;if(0===e)return t;if((0,o.i)(r)&&r.length)return r[e-1];const n=i**e;return{x:t.x*n,y:t.y*n}}identifyPixelLocation(e,t,r){const{spatialReference:i,nativeExtent:n}=this.rasterInfo,{blockWidth:s,blockHeight:a,maximumPyramidLevel:o,origin:l}=this.rasterInfo.storageInfo,c=(0,D.p)(e,i,r);if(!n.intersects(c))return null;if(t<0||t>o)return null;const u=this.getPyramidPixelSize(t),{x:h,y:d}=u,f=(l.y-c.y)/d/a,m=(c.x-l.x)/h/s,p=Math.min(a-1,Math.floor((f-Math.floor(f))*a)),g=Math.min(s-1,Math.floor((m-Math.floor(m))*s));return{pyramidLevel:t,row:Math.floor(f),col:Math.floor(m),rowOffset:p,colOffset:g,srcLocation:c}}getTileExtent(e,t,r,i,n,s){const[a,o]=s,l=i.x+r*a*e.x,c=l+a*e.x,u=i.y-t*o*e.y,h=u-o*e.y;return new O.Z({xmin:l,xmax:c,ymin:h,ymax:u,spatialReference:n})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,r){const i=this.rasterInfo.storageInfo.blockBoundary[e];return!i||i.maxRow<t||i.maxCol<r||i.minRow>t||i.minCol>r}async _fetchPixels(e,t,r,i={}){let n=(0,D.b)(e);if(n>=2)return{extent:e,pixelBlock:null};const s=this._getSourceDataInfo(e,t,r,i),{pyramidLevel:a,pyramidResolution:l,srcResolution:c,srcExtent:u,srcWidth:h,srcHeight:d}=s;if(0===h||0===d)return{extent:e,srcExtent:u,pixelBlock:null};const f=(0,o.u)(this.rasterInfo.transform),m="gcs-shift"===(null==f?void 0:f.type),p=(0,o.i)((0,D.g)(e.spatialReference));!m&&p||(n=(0,D.b)(s.srcExtent,m));const g=this.rasterInfo.storageInfo,y={x:Math.floor((u.xmin-g.origin.x)/l.x+.1),y:Math.floor((g.origin.y-u.ymax)/l.y+.1)},x=await this._fetchRawTiles(a,y,{width:h,height:d,wrapCount:n},i);if(!x)return{extent:e,srcExtent:u,pixelBlock:null};const w=a>0?g.pyramidBlockWidth:g.blockWidth,b=a>0?g.pyramidBlockHeight:g.blockHeight,v=w===h&&b===d&&y.x%w==0&&y.y%b==0,I=new L.Z({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/r,spatialReference:e.spatialReference}),_=!e.spatialReference.equals(this.rasterInfo.spatialReference),{datumTransformation:R}=i;if(!_&&v&&1===x.pixelBlocks.length&&w===t&&b===r&&c.x===I.x&&c.y===I.y)return{extent:e,srcExtent:u,pixelBlock:x.pixelBlocks[0]};const k=p&&(0,o.i)((0,D.g)(u.spatialReference)),S=i.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");S&&!this.rasterJobHandler&&await(0,D.l)();const T=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:e,srcBufferExtent:x.extent,pixelSize:I.toJSON(),datumTransformation:R,rasterTransform:f,hasWrapAround:n>0||k,isAdaptive:!1!==this.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:S},i):(0,D.d)({projectedExtent:e,srcBufferExtent:x.extent,pixelSize:I,datumTransformation:R,rasterTransform:f,hasWrapAround:n>0||k,isAdaptive:!1,includeGCSGrid:S});let P;const M=!i.requestRawData,O={rows:T.spacing[0],cols:T.spacing[1]},E=(0,o.u)(this._getRasterTileAlignmentInfo(a,x.extent.xmin)),{pixelBlocks:F,mosaicSize:B,isPartiallyFilled:N}=x;let A=null;if(this.rasterJobHandler){const e=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:F,srcMosaicSize:B,destDimension:M?{width:t,height:r}:null,coefs:M?T.coefficients:null,sampleSpacing:M?O:null,projectDirections:S,gcsGrid:S?T.gcsGrid:null,isUV:"vector-uv"===this.rasterInfo.dataType,interpolation:i.interpolation,alignmentInfo:E,blockWidths:null},i);({pixelBlock:P,localNorthDirections:A}=e)}else{const e=(0,W.m)(F,B,{alignmentInfo:E});P=M?(0,W.k)(e,{width:t,height:r},T.coefficients,O,i.interpolation):e,S&&T.gcsGrid&&(A=(0,W.n)({width:t,height:r},T.gcsGrid),P=(0,C.d)(P,this.rasterInfo.dataType,A))}return i.requestRawData||S?{srcExtent:u,pixelBlock:P,transformGrid:T,localNorthDirections:A,extent:e,isPartiallyFilled:N}:{srcExtent:u,extent:e,pixelBlock:P}}async _fetchRawTiles(e,t,r,i){const{origin:n,blockBoundary:s}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:l}=this.getBlockWidthHeight(e);let{x:c,y:u}=t,{width:h,height:d,wrapCount:f}=r;const m=this._getRasterTileAlignmentInfo(e,0);i.buffer&&(c-=i.buffer.cols,u-=i.buffer.rows,h+=2*i.buffer.cols,d+=2*i.buffer.rows);let p=0,g=0,y=0;f&&(0,o.i)(m)&&(({worldColumnCountFromOrigin:g,originColumnOffset:y,rightPadding:p}=m),g*m.blockWidth-p>=c+h&&(p=0));const x=Math.floor(c/a),w=Math.floor(u/l),b=Math.floor((c+h+p-1)/a),v=Math.floor((u+d+p-1)/l),I=s[e];if(!I)return null;const{minRow:_,minCol:R,maxCol:k,maxRow:S}=I;if(0===f&&(v<_||b<R||w>S||x>k))return null;const C=new Array;let T=!1;const P=null==this.ioConfig.allowPartialFill?i.allowPartialFill:this.ioConfig.allowPartialFill;for(let t=w;t<=v;t++)for(let r=x;r<=b;r++){let n=r;if(!i.disableWrapAround&&f&&(0,o.i)(m)&&g<=r&&(n=r-g-y),t>=_&&n>=R&&S>=t&&k>=n){const r=this._fetchRawTile(e,t,n,i);P?C.push(new Promise((e=>{r.then((t=>e(t))).catch((()=>{T=!0,e(null)}))}))):C.push(r)}else C.push(null)}if(0===C.length)return null;const M=await Promise.all(C),E={height:(v-w+1)*l,width:(b-x+1)*a},{spatialReference:F}=this.rasterInfo,B=this.getPyramidPixelSize(e),{x:D,y:L}=B;return{extent:new O.Z({xmin:n.x+x*a*D,xmax:n.x+(b+1)*a*D,ymin:n.y-(v+1)*l*L,ymax:n.y-w*l*L,spatialReference:F}),pixelBlocks:M,mosaicSize:E,isPartiallyFilled:T}}_fetchRawTile(e,t,r,i){const n=this.rasterInfo.storageInfo.blockBoundary[e];if(!n)return Promise.resolve(null);const{minRow:s,minCol:a,maxCol:l,maxRow:u}=n;if(t<s||r<a||t>u||r>l)return Promise.resolve(null);const h=H(this.url,i.sliceId),d=`${e}/${t}/${r}`;let f=J(h,i.registryId,d);if((0,o.b)(f)){const n=new AbortController;f=this.fetchRawTile(e,t,r,{...i,signal:n.signal}),Z(h,i.registryId,d,f,n),f.catch((()=>j(h,i.registryId,d)))}return i.signal&&(0,c.fu)(i,(()=>{z(h,i.registryId,d)})),f}_getIndexFromDimensions(e,t){const{extent:r,interval:i,unit:n,values:s}=t;if(null!=s&&s.length)return Array.isArray(s[0])?s.findIndex((t=>t[0]<=e&&t[1]>=e)):s.indexOf(e);if(e>r[1])return-1;const a=r[0];let o=-1;if("ISO8601"===n){var l;switch((null==(l=t.intervalUnit)?void 0:l.toLowerCase())||"seconds"){case"seconds":o=Math.round((e-a)/1e3/i);break;case"minutes":o=Math.round((e-a)/6e4/i);break;case"hours":o=Math.round((e-a)/36e5/i);break;case"days":o=Math.round((e-a)/864e5/i);break;case"years":o=Math.round((new Date(e).getUTCFullYear()-new Date(a).getUTCFullYear())/i);break;case"decades":o=Math.round((new Date(e).getUTCFullYear()-new Date(a).getUTCFullYear())/10/i)}return o}return Math.round((e-a)/i)}_getDimensionValuesCount(e){const{extent:t,interval:r,unit:i,values:n}=e;let s=(null==n?void 0:n.length)||0;if(s)return s;const a=t[0];if(0===s&&"ISO8601"===i){var o;switch((null==(o=e.intervalUnit)?void 0:o.toLowerCase())||"seconds"){case"seconds":s=Math.round((t[1]-t[0])/1e3/r);break;case"minutes":s=Math.round((t[1]-t[0])/6e4/r);break;case"hours":s=Math.round((t[1]-t[0])/36e5/r);break;case"days":s=Math.round((t[1]-t[0])/864e5/r);break;case"years":s=Math.round((new Date(t[1]).getUTCFullYear()-new Date(a).getUTCFullYear())/r);break;case"decades":s=Math.round((new Date(t[1]).getUTCFullYear()-new Date(a).getUTCFullYear())/10/r)}return s}return Math.round((t[1]-t[0])/r)}_getRasterTileAlignmentInfo(e,t){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=(0,D.e)(this.rasterInfo)),(0,o.i)(this._rasterTileAlighmentInfo.pyramidsInfo)?{startX:t,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[e]}:null}_getSourceDataInfo(e,t,r,i={}){const n={datumTransformation:i.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};i.srcResolution&&(n.srcResolution=i.srcResolution,this._updateSourceDataInfo(e,n));const s=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:a,srcHeight:o,pyramidLevel:l}=n,c=a/t,u=o/r,h=l<s&&c*u>=16;if(h||l===s&&(c>8||u>8)||0===a||0===o){const a=new L.Z({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/r,spatialReference:e.spatialReference});let o=(0,D.f)(a,this.rasterInfo.spatialReference,e,n.datumTransformation);const d=!o||i.srcResolution&&o.x+o.y<i.srcResolution.x+i.srcResolution.y;if(h&&i.srcResolution&&d){const e=Math.round(Math.log(Math.max(c,u))/Math.LN2)-1;if(s-l+3>=e){const t=2**e;o={x:i.srcResolution.x*t,y:i.srcResolution.y*t}}}o&&(n.srcResolution=o,this._updateSourceDataInfo(e,n))}return(n.srcWidth/t>8||n.srcHeight/r>8)&&(n.srcWidth=0,n.srcHeight=0),n}_updateSourceDataInfo(e,t){t.srcWidth=0,t.srcHeight=0;const r=this.rasterInfo.spatialReference,{srcResolution:i,datumTransformation:n}=t,{pyramidLevel:s,pyramidResolution:a,excessiveReading:l}=(0,D.s)(i,this.rasterInfo,this.ioConfig.sampling);if(l)return;let c=t.srcExtent||(0,D.c)(e,r,n);if(null==c)return;const u=(0,o.u)(this.rasterInfo.transform);u&&(c=u.inverseTransform(c)),t.srcExtent=c;const h=Math.ceil((c.xmax-c.xmin)/a.x-.1),d=Math.ceil((c.ymax-c.ymin)/a.y-.1);t.pyramidLevel=s,t.pyramidResolution=a,t.srcWidth=h,t.srcHeight=d}_getRequestOptionsWithSliceId(e){return(0,o.i)(this.rasterInfo.multidimensionalInfo)&&null==e.sliceId&&(e={...e,sliceId:this.getSliceIndex(e.multidimensionalDefinition)}),e}};(0,i._)([(0,u.Cb)()],G.prototype,"_rasterTileAlighmentInfo",void 0),(0,i._)([(0,u.Cb)({readOnly:!0})],G.prototype,"_isGlobalWrappableSource",null),(0,i._)([(0,u.Cb)(_.u)],G.prototype,"url",null),(0,i._)([(0,u.Cb)({type:String,json:{write:!0}})],G.prototype,"datasetName",void 0),(0,i._)([(0,u.Cb)({type:String,json:{write:!0}})],G.prototype,"datasetFormat",void 0),(0,i._)([(0,u.Cb)()],G.prototype,"rasterInfo",void 0),(0,i._)([(0,u.Cb)()],G.prototype,"ioConfig",void 0),(0,i._)([(0,u.Cb)()],G.prototype,"sourceJSON",void 0),G=(0,i._)([(0,m.j)("esri.layers.support.rasterDatasets.BaseRaster")],G);const $=G;function V(e,t){if(!e||!t)return[];let r=t;t.indexOf("/")>-1?(r=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const i=[];if(t){const n=V(e,r);for(let e=0;e<n.length;e++)V(n[e],t).forEach((e=>i.push(e)));return i}const n=e.getElementsByTagNameNS("*",r);if(!n||0===n.length)return[];for(let e=0;e<n.length;e++)i.push(n[e]||n.item[e]);return i}function Y(e,t){if(!e||!t)return null;let r=t;t.indexOf("/")>-1?(r=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const i=V(e,r);return i.length>0?t?Y(i[0],t):i[0]:null}function X(e,t=null){const r=t?Y(e,t):e;let i;return r?(i=r.textContent||r.nodeValue,i?i.trim():null):null}function K(e,t){return function(e,t){const r=V(e,t),i=[];let n;for(let e=0;e<r.length;e++)n=r[e].textContent||r[e].nodeValue,n&&(n=n.trim(),""!==n&&i.push(n));return i}(e,t).map((e=>Number(e)))}function Q(e,t){const r=X(e,t);return Number(r)}function ee(e,t){var r;const i=null==e||null==(r=e.nodeName)?void 0:r.toLowerCase(),n=t.toLowerCase();return i.slice(i.lastIndexOf(":")+1)===n}var te=r(89440),re=r(62162),ie=r(16647),ne=r(58912),se=r(19902),ae=r(97546),oe=r(88056),le=r(22572),ce=r(87258),ue=r(32101),he=r(9411),de=r(22337),fe=r(78893);r(15324),r(91055),r(76996),r(21972),r(23639),r(31450),r(71552),r(40642),r(60474),r(66396),r(22723),r(86656),r(6540),r(19657),r(6906),r(86787),r(2906),r(14249),r(60217),r(73796),r(35132),r(89623),r(84069),r(44567),r(98380),r(92896),r(22781),r(57251),r(32422),r(29107),r(30574),r(2157),r(25977),r(58076),r(98242),r(7471),r(54414),r(1648),r(8925),r(33921),r(3482),r(45154),r(16769),r(55531),r(30582),r(593),r(85699),r(96055),r(47776),r(18033),r(6331),r(62048),r(4292),r(75626),r(72652),r(29641),r(30493),r(70821),r(82673),r(34229),r(37029),r(55306),r(96467),r(63571),r(30776),r(48027),r(54174),r(82426),r(29794),r(63130),r(25696),r(59877),r(42775),r(95834),r(34394),r(57150),r(76726),r(20444),r(76393),r(78548),r(2497),r(49906),r(46527),r(11799),r(48649),r(94216),r(9960),r(30823),r(53326),r(92482),r(5853),r(39141),r(38742),r(48243),r(34635),r(10401),r(49900),r(88762),r(22739),r(67477),r(78533),r(74653),r(91091),r(58943),r(70737),r(36834),r(85339),r(8487),r(17817),r(90814),r(15459),r(61847),r(16796),r(16955),r(22401),r(77894),r(55187),r(8586),r(44509),r(69814),r(11305),r(62259),r(44790),r(5909),r(60669),r(48208),r(51589),r(65684),r(12158),r(74864),r(63683),r(94479),r(45702),r(51127),r(74071),r(51723),r(23243),r(51669),r(6090),r(3977),r(36741),r(11253),r(90319),r(38822),r(52228),r(74057),r(23761),r(48190),r(85557),r(53785),r(95587),r(94070),r(43022),r(16218),r(9075),r(83378),r(81050),r(55436),r(62484),r(76223),r(86951),r(95310),r(93939),r(238),r(71831),r(84225),r(95533),r(94751),r(19124),r(41864),r(92200),r(65949),r(22465),r(65775),r(5777),r(73173),r(30831),r(91700),r(53269),r(65514),r(46987),r(37453),r(66284),r(87239),r(66774),r(12381),r(1623),r(92624),r(92847),r(56420),r(74742),r(28239),r(93314),r(35197),r(59765),r(77361),r(1557),r(47842),r(17298),r(9801),r(53523),r(42911),r(46826),r(45433),r(54732),r(92817),r(79764),r(95873),r(82933),r(58085),r(89241);const me=new Map;me.set("int16","esriFieldTypeSmallInteger"),me.set("int32","esriFieldTypeInteger"),me.set("int64","esriFieldTypeInteger"),me.set("float32","esriFieldTypeSingle"),me.set("float64","esriFieldTypeDouble"),me.set("text","esriFieldTypeString");let pe=class extends ${constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:null==e?void 0:e.signal});if(!this._validateHeader(t))throw new a.Z("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:r,rasterInfo:i}=this._parseHeader(t);if("thematic"===i.dataType){const e=await this._fetchAuxiliaryInformation();i.attributeTable=e}this._set("storageInfo",r),this._set("rasterInfo",i),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,r,i={}){const n=this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(n<0)return null;const s=this._buildCacheFilePath(n,t,r,i.multidimensionalDefinition),a=this._getIndexRecordFromBundle(t,r),o=await this.request(s,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:i.signal});if(!o)return null;const l=new Uint8Array(o.data),c=this._getTileEndAndContentType(l,a);if(0===c.recordSize)return null;const u=await this.request(s,{range:{from:c.position,to:c.position+c.recordSize},responseType:"array-buffer",signal:i.signal});return u?this.decodePixelBlock(u.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null}_validateHeader(e){return e&&"RasterInfo"===e.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some((t=>!e[t]))}_parseHeader(e){var t,r;const i=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:n,histograms:s,colormap:a,blockWidth:o,blockHeight:l,firstPyramidLevel:c,maximumPyramidLevel:u}=e,h=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),d=e.extent.spatialReference,f=null==(t=e.geodataXform)?void 0:t.spatialReference,m=new v.Z(null!=d&&d.wkid||null!=d&&d.wkt?d:f);let p=new O.Z({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:m});const g=new L.Z({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:m}),y=Math.round((p.xmax-p.xmin)/g.x),x=Math.round((p.ymax-p.ymin)/g.y),w=this._parseTransform(e.geodataXform),b=w?p:null;w&&(p=w.forwardTransform(p),g.x=(p.xmax-p.xmin)/y,g.y=(p.ymax-p.ymin)/x);const I=null!=(r=e.properties)?r:{},_=e.format.toLowerCase().replace("cache/",""),R=new L.Z(e.origin.x,e.origin.y,m);let k,C,T,P;if(a&&a.colors)for(k=[],C=0;C<a.colors.length;C++)T=a.colors[C],P=a.values?a.values[C]:C,k.push([P,255&T,T<<16>>>24,T<<8>>>24,T>>>24]);const M=e.LODInfos,E=[];for(C=0;C<M.levels.length;C++)E.push({level:M.levels[C],resolution:M.resolutions[C],scale:96/.0254*M.resolutions[C]});const F=new S.Z({dpi:96,lods:E,format:_,origin:R,size:[o,l],spatialReference:m}),D={recordSize:8,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*8+64},N=[{maxCol:Math.ceil(y/o)-1,maxRow:Math.ceil(x/l)-1,minCol:0,minRow:0}];let A=2;if(u>0)for(C=0;C<u;C++)N.push({maxCol:Math.ceil(y/A/o)-1,maxRow:Math.ceil(x/A/l)-1,minCol:0,minRow:0}),A*=2;const H=e.mdInfo;return{storageInfo:D,rasterInfo:new B.Z({width:y,height:x,pixelType:i,bandCount:n,extent:p,nativeExtent:b,transform:w,spatialReference:m,pixelSize:g,keyProperties:I,statistics:h,histograms:s,multidimensionalInfo:H,colormap:k,storageInfo:new B.R({blockWidth:o,blockHeight:l,pyramidBlockWidth:o,pyramidBlockHeight:l,origin:R,tileInfo:F,firstPyramidLevel:c,maximumPyramidLevel:u,blockBoundary:N})})}}_parseTransform(e){var t,r;if(!(0,le.i)(e))throw new a.Z("cloudraster:open","the data contains unsupported geodata transform types");const i=(0,le.r)(e);if("identity"===i.type)return null;if("polynomial"!==i.type||null==(t=i.forwardCoefficients)||!t.length||null==(r=i.inverseCoefficients)||!r.length)throw new a.Z("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return i}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then((e=>e.data)).catch((()=>null)),r=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then((e=>e.data)).catch((()=>null)),i=await Promise.all([t,r]);let n;if(i[0]){let e=i[0].fields;const t=i[0].values;if(e&&t){e=e.map((e=>({type:"OID"===e.name?"esriFieldTypeOID":me.get(e.type),name:e.name,alias:e.alias||e.name})));const r=t.map((e=>({attributes:e})));e&&t&&(n={fields:e,features:r})}}return!n&&i[1]&&(n=class{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),r=3&t.getUint8(0);if(3!==r)return{header:{version:r},recordSet:null};const i=t.getUint32(4,!0),n=t.getUint16(8,!0),s=t.getUint16(10,!0),a={version:r,recordCount:i,headerByteCount:n,recordByteCount:s};let o=32;const l=[],c=[];let u;if(3===r){for(;13!==t.getUint8(o);)u=String.fromCharCode(t.getUint8(o+11)).trim(),l.push({name:(0,P.b)(new Uint8Array(e,o,11)),type:u,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(u)],length:t.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;c.length<i&&e.byteLength-o>s;){const r=[];32===t.getUint8(o)?(o+=1,l.forEach((t=>{if("C"===t.type)r.push((0,P.b)(new Uint8Array(e,o,t.length)).trim());else if("N"===t.type)r.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim(),10));else if("F"===t.type)r.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim()));else if("D"===t.type){const i=String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim();r.push(new Date(parseInt(i.substring(0,4),10),parseInt(i.substring(4,6),10)-1,parseInt(i.substring(6,8),10)))}o+=t.length})),c.push(r)):o+=s}}const h=function(e){const t=e.fields,r=e.records,i=t.some((e=>"oid"===e.name.toLowerCase()))?"OBJECTID":"OID",n=[{name:i,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map((e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name})))),s=n.map((e=>e.name)),a=[];let o=0,l=0;return r.forEach((e=>{const t={};for(t[i]=o++,l=1;l<s.length;l++)t[s[l]]=e[l-1];a.push({attributes:t})})),{displayFieldName:"",fields:n,features:a}}({fields:l,records:c});return{header:a,fields:l,records:c,recordSet:h}}}.parse(i[1]).recordSet),ce.default.fromJSON(n)}_buildCacheFilePath(e,t,r,i){const n=this.storageInfo.packetSize,s=Math.floor(t/n)*n,a=Math.floor(r/n)*n,l="R"+this._toHexString4(s)+"C"+this._toHexString4(a);let c="L";c+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:u}=this.rasterInfo,h=null==i?void 0:i[0];if(!(0,o.i)(u)||!h)return`${this.url}/_alllayers/${c}/${l}.bundle`;let d=u.variables.find((e=>e.name===h.variableName)).dimensions[0].values.indexOf(h.values[0]).toString(16);const f=4-d.length;for(let e=0;e<f;e++)d="0"+d;return d="S"+d,`${this.url}/_alllayers/${h.variableName}/${d}/${c}/${l}.bundle`}_getIndexRecordFromBundle(e,t){const r=this.storageInfo.packetSize,i=r*(e%r)+t%r;if(i<0)throw"Invalid level / row / col";return 20+i*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const r=e.subarray(t,t+8);let i,n=0;for(i=0;i<5;i++)n|=(255&r[i])<<8*i;const s=0xffffffffff&n;for(n=0,i=5;i<8;i++)n|=(255&r[i])<<8*(i-5);return{position:s,recordSize:0xffffffffff&n}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t}};(0,i._)([(0,u.Cb)({readOnly:!0})],pe.prototype,"storageInfo",void 0),(0,i._)([(0,u.Cb)({type:String,json:{write:!0}})],pe.prototype,"datasetFormat",void 0),pe=(0,i._)([(0,m.j)("esri.layers.support.rasterDatasets.CloudRaster")],pe);const ge=pe;let ye=class extends ${constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(e){var t;await this.init();const{pixelBlock:r,statistics:i,histograms:n,name:s,keyProperties:a,nativeExtent:o,transform:l}=this.data,{width:c,height:u,pixelType:h}=r,d=this.data.extent||new O.Z({xmin:-.5,ymin:.5,xmax:c-.5,ymax:u-.5,spatialReference:new v.Z({wkid:3857})}),f=null!=(t=this.data.isPseudoSpatialReference)?t:!this.data.extent,m={x:d.width/c,y:d.height/u},p=new B.Z({width:c,height:u,pixelType:h,extent:d,nativeExtent:o,transform:l,pixelSize:m,spatialReference:d.spatialReference,bandCount:3,keyProperties:a||{},statistics:i,isPseudoSpatialReference:f,histograms:n});this.createRemoteDatasetStorageInfo(p,512,512),this._set("rasterInfo",p),this.updateTileInfo(),await this._buildInMemoryRaster(r,{width:512,height:512},e),this.datasetName=s,this.url="/InMemory/"+s}fetchRawTile(e,t,r,i={}){const n=this._pixelBlockTiles.get(`${e}/${t}/${r}`);return Promise.resolve(n)}async _buildInMemoryRaster(e,t,r){const i=this.rasterInfo.storageInfo.maximumPyramidLevel,n=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:i},r):Promise.resolve((0,W.g)(e,t,i)),s=(0,o.i)(this.rasterInfo.statistics),l=(0,o.i)(this.rasterInfo.histograms),u=s&&l?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},r):Promise.resolve((0,W.f)(e)),h=await(0,c.as)([n,u]);if(!h[0].value&&h[1].value)throw new a.Z("inmemory-raster:open","failed to build in memory raster");var d,f;this._pixelBlockTiles=h[0].value,s||(this.rasterInfo.statistics=null==(d=h[1].value)?void 0:d.statistics),l&&(this.rasterInfo.histograms=null==(f=h[1].value)?void 0:f.histograms)}};(0,i._)([(0,u.Cb)({type:String,json:{write:!0}})],ye.prototype,"datasetFormat",void 0),(0,i._)([(0,u.Cb)()],ye.prototype,"data",void 0),ye=(0,i._)([(0,m.j)("esri.layers.support.rasterDatasets.InMemoryRaster")],ye);const xe=ye;function we(e,t){if(!e||!t)return null;const r=[];for(let i=0;i<e.length;i++)r.push(e[i]),r.push(t[i]);return r}function be(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new v.Z({wkid:t});if((e=String(e)).startsWith("COMPD_CS")){if(!e.includes("VERTCS")||!e.includes("GEOGCS")&&!e.startsWith("PROJCS"))return null;const r=e.indexOf("VERTCS"),i=e.indexOf("PROJCS"),n=i>-1?i:e.indexOf("GEOGCS");if(-1===n)return null;const s=e.slice(n,e.lastIndexOf("]",r)+1).trim(),a=e.slice(r,e.lastIndexOf("]")).trim();t=ve(s);const o=new v.Z(t?{wkid:t}:{wkt:s}),l=ve(a);return l&&(o.vcsWkid=l),o}return e.startsWith("GEOGCS")||e.startsWith("PROJCS")?(t=ve(e),new v.Z(0!==t?{wkid:t}:{wkt:e})):null}function ve(e){var t;const r=e.replace(/\]/g,"[").replace(/\"/g,"").split("[").map((e=>e.trim())).filter((e=>""!==e)),i=r[r.length-1].split(","),n=null==(t=i[0])?void 0:t.toLowerCase();if(("epsg"===n||"esri"===n)&&e.endsWith('"]]')){const e=Number(i[1]);if(!isNaN(e)&&0!==e)return e}return 0}function Ie(e){var t;if("pamdataset"!==(null==e||null==(t=e.documentElement.tagName)?void 0:t.toLowerCase()))return{};const r={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach((e=>{if(1===e.nodeType)if(ee(e,"SRS")){if(!r.spatialReference){const t=X(e);r.spatialReference=be(t)}}else if(ee(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:i}=function(e){var t;const r=Y(e,"GeodataXform"),i=be(Q(r,"SpatialReference/WKID")||X(r,"SpatialReference/WKT"));if("typens:PolynomialXform"!==r.getAttribute("xsi:type"))return{spatialReference:i,transform:null};const n=null!=(t=Q(r,"PolynomialOrder"))?t:1,s=K(r,"CoeffX/Double"),a=K(r,"CoeffY/Double"),o=K(r,"InverseCoeffX/Double"),l=K(r,"InverseCoeffY/Double"),c=we(s,a),u=we(o,l);return{spatialReference:i,transform:new le.P({spatialReference:i,polynomialOrder:n,forwardCoefficients:c,inverseCoefficients:u})}}(e);r.transform=i,r.spatialReference||(r.spatialReference=t)}else V(e,"MDI").forEach((e=>r.metadata[e.getAttribute("key")]=X(e)));else if(ee(e,"PAMRasterBand")){const t=function(e){var t;const r=Q(e,"NoDataValue"),i=Y(e,"Histograms/HistItem"),n=Q(i,"HistMin"),s=Q(i,"HistMax"),a=Q(i,"BucketCount"),o=null==(t=X(i,"HistCounts"))?void 0:t.split("|").map((e=>Number(e)));let l,c,u,h;V(e,"Metadata/MDI").forEach((e=>{var t;const r=Number(null!=(t=e.textContent)?t:e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=r;break;case"STATISTICS_MAXIMUM":c=r;break;case"STATISTICS_MEAN":u=r;break;case"STATISTICS_STDDEV":h=r}}));const d=Q(e,"Metadata/SourceBandIndex");return{noDataValue:r,histogram:null!=o&&o.length&&null!=l&&null!=c?{min:n,max:s,size:a||o.length,counts:o}:null,sourceBandIndex:d,statistics:null!=l&&null!=c?{min:l,max:c,avg:u,stddev:h}:null}}(e);null!=t.sourceBandIndex&&null==r.rasterBands[t.sourceBandIndex]?r.rasterBands[t.sourceBandIndex]=t:r.rasterBands.push(t)}}));const i=r.rasterBands;if(i){const e=!!i[0].statistics;r.statistics=e?i.map((e=>e.statistics)):null;const t=!!i[0].histogram;r.histograms=t?i.map((e=>e.histogram)):null}return r}let _e=class extends ${async open(e){await this.init();const t=await this._fetchData(e);let{spatialReference:r,statistics:i,histograms:n,transform:s}=await this._fetchAuxiliaryData(e);const a=!r;a&&(r=new v.Z({wkid:3857})),null!=n&&n.length&&null==i&&(i=(0,W.h)(n));const{width:o,height:l}=t;let c=new O.Z({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:r});const u=s?s.forwardTransform(c):c;let h=!0;if(s){const e=s.forwardCoefficients;h=e&&0===e[1]&&0===e[2],h&&(s=null,c=u)}const d=new xe({data:{extent:u,nativeExtent:c,transform:s,pixelBlock:t,statistics:i,histograms:n,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a}});await d.open(),this._set("rasterInfo",d.rasterInfo),this._inMemoryRaster=d}fetchRawTile(e,t,r,i={}){return this._inMemoryRaster.fetchRawTile(e,t,r,i)}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:null==e?void 0:e.signal}),r=(0,P.g)(t).toUpperCase();if("JPG"!==r&&"PNG"!==r&&"GIF"!==r&&"BMP"!==r)throw new a.Z("image-aux-raster:open","the data is not a supported format");return this._set("datasetFormat",r),await this.decodePixelBlock(t,{format:"jpg",width:1,height:1,useCanvas:!0})}async _fetchAuxiliaryData(e){var t,r;const i=(0,o.u)(null==e?void 0:e.signal),n=null!=(t=this.ioConfig.skipExtensions)?t:[],s=n.indexOf("aux.xml")>-1?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:i}),a=this.datasetFormat,l="JPG"===a?"jgw":"PNG"===a?"pgw":"BMP"===a?"bpw":null,u=n.indexOf(l)>-1?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+l,{responseType:"text",signal:i}),h=await(0,c.as)([s,u]);if(null!=i&&i.aborted)throw(0,c.zE)();const d=Ie(null==(r=h[0].value)?void 0:r.data);if(!d.transform){const e=h[1].value?h[1].value.data.split("\n").slice(0,6).map((e=>Number(e))):null;d.transform=6===(null==e?void 0:e.length)?new le.P({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return d}};(0,i._)([(0,u.Cb)({type:String,json:{write:!0}})],_e.prototype,"datasetFormat",void 0),_e=(0,i._)([(0,m.j)("esri.layers.support.rasterDatasets.ImageAuxRaster")],_e);const Re=_e;let ke=class extends ${constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat="RasterTileServer"}async open(e){await this.init();const t=e&&e.signal,r=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:t});r.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const i=r.data;if(this.sourceJSON=i,!i)throw new a.Z("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!i.tileInfo)throw new a.Z("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo(),this.tileType=i.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].indexOf(i.tileInfo.format.toLowerCase())>-1?this.tileType="Map":"lerc"===i.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=i.name.slice(i.name.indexOf("/")+1);const n=await this._fetchRasterInfo({signal:t});if(!(0,o.i)(n))throw new a.Z("image-server-raster:open","cannot initialize image service");{const e="Map"===this.tileType?(0,he.r)(i.tileInfo,i):S.Z.fromJSON(i.tileInfo),{extent:t,pixelSize:r}=n,s=.5/n.width*r.x;let a,o;const l=e.lodAt(Math.max.apply(null,e.lods.map((e=>e.level))));"Map"!==this.tileType&&0!==i.maxScale&&("Raster"===this.tileType?(a=e.lods.find((e=>e.resolution===r.x)),a||(a=e.lods[e.lods.length-1])):(a=e.lods.find((e=>Math.abs(e.scale-i.maxScale)<s)),a||(a=e.lods.filter((e=>e.scale>i.maxScale)).sort(((e,t)=>e.scale>t.scale?1:-1))[0])),r.x=r.y=a.resolution,n.width=Math.ceil((t.xmax-t.xmin)/r.x-.1),n.height=Math.ceil((t.ymax-t.ymin)/r.y-.1)),a||(a=l);const c=e.lodAt(Math.min.apply(null,e.lods.map((e=>e.level))));"Map"===this.tileType?this._levelOffset=e.lods[0].level:0!==i.minScale&&"Elevation"===this.tileType&&(o=e.lods.find((e=>Math.abs(e.scale-i.minScale)<s)),this._levelOffset=o.level-c.level),o||(o=c);const u=Math.max(r.x,r.y);(Math.abs(r.x-r.y)>s||!e.lods.some((e=>Math.abs(e.resolution-u)<s)))&&(r.x=r.y=a.resolution,n.width=Math.ceil((t.xmax-t.xmin)/r.x-.1),n.height=Math.ceil((t.ymax-t.ymin)/r.y-.1));const h=a.level-o.level,[d,f]=e.size,m=[];e.lods.forEach((e=>{e.level>=o.level&&e.level<=a.level&&m.push({x:e.resolution,y:e.resolution})})),m.sort(((e,t)=>e.x-t.x));const p=this.computeBlockBoundary(t,d,f,e.origin,m,h),g=m.length>1?m.slice(1):null;n.storageInfo=new B.R({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],pyramidResolutions:g,compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:h,tileInfo:e,blockBoundary:p}),this._fixGCSShift(n),this._set("rasterInfo",n)}if(i.capabilities.toLowerCase().indexOf("tilemap")>-1){const e={tileInfo:n.storageInfo.tileInfo,parsedUrl:(0,ue.mN)(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new he.T({layer:e})}}async fetchRawTile(e,t,r,i={}){if(this._slices&&null==i.sliceId)return null;const{storageInfo:n,extent:s}=this.rasterInfo,a=n.maximumPyramidLevel-e+this._levelOffset,o=`${this.url}/tile/${a}/${t}/${r}`,l=this._slices?{sliceId:i.sliceId||0}:null,{data:c}=await this.request(o,{query:l,responseType:"array-buffer",signal:i.signal});if(!c)return null;const u=await this.decodePixelBlock(c,{width:n.tileInfo.size[0],height:n.tileInfo.size[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType}),h=n.blockBoundary[e];if("jpg"!==n.compression||r>h.minCol&&r<h.maxCol&&t>h.minRow&&t<h.maxRow)return u;const{origin:d,blockWidth:f,blockHeight:m}=n,{x:p,y:g}=this.getPyramidPixelSize(e),y=Math.round((s.xmin-d.x)/p)%f,x=Math.round((s.xmax-d.x)/p)%f||f,w=Math.round((d.y-s.ymax)/g)%m,b=Math.round((d.y-s.ymin)/g)%m||m,v=r===h.minCol?y:0,I=t===h.minRow?w:0,_=r===h.maxCol?x:f,R=t===h.maxRow?b:m;return(0,W.j)(u,{x:v,y:I},{width:_-v,height:R-I}),u}getSliceIndex(e){if(!this._slices||(0,o.b)(e)||0===e.length)return null;const t=e;for(let e=0;e<this._slices.length;e++){const r=this._slices[e].multidimensionalDefinition;if(r.length===t.length&&!r.some((e=>{const r=t.find((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName));return!r||(Array.isArray(e.values[0])?`${e.values[0][0]}-${e.values[0][1]}`:e.values[0])!==(Array.isArray(r.values[0])?`${r.values[0][0]}-${r.values[0][1]}`:r.values[0])})))return e}return null}async fetchVariableStatisticsHistograms(e,t){const r=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),i=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),n=await Promise.all([r,i]);return n[0]&&n[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:n[0]||null,histograms:n[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let r=this.identifyPixelLocation(e,0,(0,o.u)(t.datumTransformation));if(null===r)return null;let i=0;const{maximumPyramidLevel:n}=this.rasterInfo.storageInfo;let s=n-i+this._levelOffset;const a=r.srcLocation;for(;s>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(s,r.row,r.col,t))break}catch{}if(s--,i++,r=this.identifyPixelLocation(a,i,(0,o.u)(t.datumTransformation)),null===r)return null}return-1===s||null==r?null:i}async _fetchRasterInfo(e){const t=this.sourceJSON,r=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),i=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),n=v.Z.fromJSON(t.spatialReference||t.extent.spatialReference);if("Map"===this.tileType)return new B.Z({width:r,height:i,bandCount:3,extent:O.Z.fromJSON(t.extent),spatialReference:n,pixelSize:new L.Z({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n}),pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}});const{slice:s,signal:a}=e,o=!!t.hasRasterAttributeTable&&this.request(this.url+"/rasterAttributeTable",{query:{slice:s,f:"json"},signal:a}).then((e=>ce.default.fromJSON(e.data))).catch((()=>null)),l=!!t.hasColormap&&this.request(this.url+"/colormap",{query:{slice:s,f:"json"},signal:a}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),c=!!t.hasHistograms&&this.request(this.url+"/histograms",{query:{slice:s,f:"json"},signal:a}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),u=this.request(this.url+"/keyProperties",{query:{f:"json"},signal:a}).then((e=>e.data)).catch((()=>{})),h=!!t.hasMultidimensions&&this._fetchMultidimensionalInfo(),d=!!t.hasMultidimensions&&this.request(this.url+"/slices",{query:{f:"json"},signal:a}).then((e=>e.data&&e.data.slices)).catch((()=>{}));return Promise.all([o,l,c,u,h,d]).then((e=>{let s=null;if(t.minValues&&t.minValues.length===t.bandCount){s=[];for(let e=0;e<t.minValues.length;e++)s.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}return this._slices=e[5]||null,new B.Z({width:r,height:i,bandCount:t.bandCount,extent:O.Z.fromJSON(t.extent),spatialReference:n,pixelSize:new L.Z({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n}),pixelType:t.pixelType.toLowerCase(),statistics:s,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))}async _fetchMultidimensionalInfo(e){var t;const r=await this.request(this.url+"/multidimensionalInfo",{query:{f:"json"},signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=r.variables)&&t.length&&r.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation}))})),r}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:t,spatialReference:r}=e;0===t.xmin&&360===t.xmax&&r.wkid&&r.isGeographic&&(e.nativeExtent=e.extent,e.transform=new le.G,e.extent=e.transform.forwardTransform(t))}};(0,i._)([(0,u.Cb)({type:String,json:{write:!0}})],ke.prototype,"datasetFormat",void 0),(0,i._)([(0,u.Cb)()],ke.prototype,"tileType",void 0),ke=(0,i._)([(0,m.j)("esri.layers.support.rasterDatasets.ImageServerRaster")],ke);const Se=ke,Ce=new Map;Ce.set("Int8","s8"),Ce.set("UInt8","u8"),Ce.set("Int16","s16"),Ce.set("UInt16","u16"),Ce.set("Int32","s32"),Ce.set("UInt32","u32"),Ce.set("Float32","f32"),Ce.set("Float64","f32"),Ce.set("Double64","f32");const Te=new Map;Te.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),Te.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),Te.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),Te.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let Pe=class extends ${constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(e){var t;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const r=e?(0,o.u)(e.signal):null,i=await this.request(this.url,{responseType:"xml",signal:r}),{rasterInfo:n,files:s}=this._parseHeader(i.data);if(-1===(null==(t=this.ioConfig.skipExtensions)?void 0:t.indexOf("aux.xml"))){const t=await this._fetchAuxiliaryData(e);var a;null!=t&&(n.statistics=null!=(a=t.statistics)?a:n.statistics,n.histograms=t.histograms,t.histograms&&!(0,o.i)(n.statistics)&&(n.statistics=(0,W.h)(t.histograms)))}this._set("rasterInfo",n),this._files=s;const l=await this.request(s.index,{responseType:"array-buffer",signal:r});this._storageIndex=this._parseIndex(l.data);const{blockWidth:c,blockHeight:u}=this.rasterInfo.storageInfo,h=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:d,height:f}=this.rasterInfo,m=[],p=this._getBandSegmentCount();let g=0,y=-1;for(;g<this._storageIndex.length;){y++;const e=Math.ceil(d/c/h**y)-1,t=Math.ceil(f/u/h**y)-1;g+=(e+1)*(t+1)*p*4,m.push({maxRow:t,maxCol:e,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=m,y>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=y),this.updateTileInfo()}async fetchRawTile(e,t,r,i={}){const{blockWidth:n,blockHeight:s,blockBoundary:a}=this.rasterInfo.storageInfo,l=a[e];if(!l||l.maxRow<t||l.maxCol<r||l.minRow>t||l.minCol>r)return null;const{bandCount:c,pixelType:u}=this.rasterInfo,{ranges:h,actualTileWidth:d,actualTileHeight:f}=this._getTileLocation(e,t,r);if(!h||0===h.length)return null;if(0===h[0].from&&0===h[0].to){const e=new Uint8Array(n*s);return new de.Z({width:n,height:s,pixels:null,mask:e,validPixelCount:0})}const{bandIds:m}=this.ioConfig,p=this._getBandSegmentCount(),g=[];let y=0;for(y=0;y<p;y++)(!m||m.indexOf[y]>-1)&&g.push(this.request(this._files.data,{range:{from:h[y].from,to:h[y].to},responseType:"array-buffer",signal:i.signal}));const x=await Promise.all(g),w=x.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),b=new Uint8Array(w);let v=0;for(y=0;y<p;y++)b.set(new Uint8Array(x[y].data),v),v+=x[y].data.byteLength;const I=Te.get(this.rasterInfo.storageInfo.compression).decoderFormat,_=await this.decodePixelBlock(b.buffer,{width:n,height:s,format:I,planes:(null==m?void 0:m.length)||c,pixelType:u});if((0,o.i)(this.rasterInfo.noDataValue)&&"lerc"!==I&&!_.mask){const e=this.rasterInfo.noDataValue[0];if(null!=e){const t=_.width*_.height,r=new Uint8Array(t);if(Math.abs(e)>1e24)for(y=0;y<t;y++)Math.abs((_.pixels[0][y]-e)/e)>1e-6&&(r[y]=1);else for(y=0;y<t;y++)_.pixels[0][y]!==e&&(r[y]=1);_.mask=r}}let R=0,k=0;if(d!==n||f!==s){let e=_.mask;if(e)for(y=0;y<s;y++)if(k=y*n,y<f)for(R=d;R<n;R++)e[k+R]=0;else for(R=0;R<n;R++)e[k+R]=0;else for(e=new Uint8Array(n*s),_.mask=e,y=0;y<f;y++)for(k=y*n,R=0;R<d;R++)e[k+R]=1}return _}_parseIndex(e){if(e.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let t,r,i,n,s,a;if(P.i){for(r=new Uint8Array(e),n=new ArrayBuffer(e.byteLength),i=new Uint8Array(n),s=0;s<e.byteLength/4;s++)for(a=0;a<4;a++)i[4*s+a]=r[4*s+3-a];t=new Uint32Array(n)}else t=new Uint32Array(e);return t}_getBandSegmentCount(){return Te.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(e,t,r){const{blockWidth:i,blockHeight:n,pyramidScalingFactor:s}=this.rasterInfo.storageInfo,{width:a,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let c,u,h,d=0,f=0;for(h=0;h<e;h++)f=s**h,c=Math.ceil(a/i/f),u=Math.ceil(o/n/f),d+=c*u;f=s**e,c=Math.ceil(a/i/f),u=Math.ceil(o/n/f),d+=t*c+r,d*=4*l;const m=this._storageIndex.subarray(d,d+4*l);let p=0,g=0;const y=[];for(let e=0;e<l;e++)p=m[4*e+0]*2**32+m[4*e+1],g=p+m[4*e+2]*2**32+m[4*e+3],y.push({from:p,to:g});return{ranges:y,actualTileWidth:r<c-1?i:Math.ceil(a/f)-i*(c-1),actualTileHeight:t<u-1?n:Math.ceil(o/f)-n*(u-1)}}_parseHeader(e){const t=Y(e,"MRF_META/Raster");if(!t)throw new a.Z("mrf:open","not a valid MRF format");const r=Y(t,"Size"),i=parseInt(r.getAttribute("x"),10),n=parseInt(r.getAttribute("y"),10),s=parseInt(r.getAttribute("c"),10),o=(X(t,"Compression")||"none").toLowerCase();if(!Te.has(o))throw new a.Z("mrf:open","currently does not support compression "+o);const l=X(t,"DataType")||"UInt8",c=Ce.get(l);if(null==c)throw new a.Z("mrf:open","currently does not support pixel type "+l);const u=Y(t,"PageSize"),h=parseInt(u.getAttribute("x"),10),d=parseInt(u.getAttribute("y"),10),f=Y(t,"DataValues");let m,p;if(f&&(p=f.getAttribute("NoData"),null!=p&&(m=p.trim().split(" ").map((e=>parseFloat(e))))),Y(e,"MRF_META/CachedSource"))throw new a.Z("mrf:open","currently does not support MRF referencing other data files");const g=Y(e,"MRF_META/GeoTags"),y=Y(g,"BoundingBox");let x,w=!1;if(null!=y){const e=parseFloat(y.getAttribute("minx")),t=parseFloat(y.getAttribute("miny")),r=parseFloat(y.getAttribute("maxx")),i=parseFloat(y.getAttribute("maxy")),n=X(g,"Projection")||"";let s;if("LOCAL_CS[]"!==n)if(n.toLowerCase().startsWith("epsg:")){const e=Number(n.slice(5));isNaN(e)||0===e||(s=new v.Z({wkid:e}))}else s=be(n);else w=!0,s=new v.Z({wkid:3857});x=new O.Z(e,t,r,i),x.spatialReference=s}else w=!0,x=new O.Z({xmin:-.5,ymin:.5-n,xmax:i-.5,ymax:.5,spatialReference:new v.Z({wkid:3857})});const b=Y(e,"MRF_META/Rsets"),I=parseInt(b&&b.getAttribute("scale")||"2",10),_=x.spatialReference,R=new B.R({origin:new L.Z({x:x.xmin,y:x.ymax,spatialReference:_}),blockWidth:h,blockHeight:d,pyramidBlockWidth:h,pyramidBlockHeight:d,compression:o,pyramidScalingFactor:I}),k=new L.Z({x:x.width/i,y:x.height/n,spatialReference:_}),S=new B.Z({width:i,height:n,extent:x,isPseudoSpatialReference:w,spatialReference:_,bandCount:s,pixelType:c,pixelSize:k,noDataValue:m,storageInfo:R}),C=X(e,"datafile"),T=X(e,"IndexFile");return{rasterInfo:S,files:{mrf:this.url,index:T||this.url.replace(".mrf",".idx"),data:C||this.url.replace(".mrf",Te.get(o).blobExtension)}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return Ie(t)}catch{return null}}};(0,i._)([(0,u.Cb)()],Pe.prototype,"_files",void 0),(0,i._)([(0,u.Cb)()],Pe.prototype,"_storageIndex",void 0),(0,i._)([(0,u.Cb)({type:String,json:{write:!0}})],Pe.prototype,"datasetFormat",void 0),Pe=(0,i._)([(0,m.j)("esri.layers.support.rasterIO.MRFRaster")],Pe);const Me=Pe,Oe=function(e,t){const r=e.get(t);return r&&r.values},Ee=function(e,t){const r=e.get(t);return r&&r.values[0]};let Fe=class extends ${constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){var t,r,i;await this.init();const n=e?(0,o.u)(e.signal):null,{data:s}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:n});if(!s)throw new a.Z("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:l,firstIFD:c,isBigTiff:u}=(0,P.p)(s),h=[];await this._readIFDs(h,s,l,c,0,u?8:4,n);const d=(0,P.a)(h),{width:f,height:m,tileWidth:p,tileHeight:g,planes:y,pixelType:x,compression:w,firstPyramidLevel:b,maximumPyramidLevel:I,pyramidBlockWidth:_,pyramidBlockHeight:R,tileBoundary:k,affine:S,metadata:C}=d;let T=be((null==(t=d.extent.spatialReference)?void 0:t.wkt)||(null==(r=d.extent.spatialReference)?void 0:r.wkid)),M=!1;null==T&&(M=!0,T=new v.Z({wkid:3857}));const E=new O.Z({...d.extent,spatialReference:T}),F=new L.Z(E?{x:E.xmin,y:E.ymax,spatialReference:T}:{x:0,y:0}),D=new B.R({blockWidth:p,blockHeight:g,pyramidBlockWidth:_,pyramidBlockHeight:R,compression:w,origin:F,firstPyramidLevel:b,maximumPyramidLevel:I,blockBoundary:k}),N=new L.Z({x:(E.xmax-E.xmin)/f,y:(E.ymax-E.ymin)/m,spatialReference:T}),A=C?{BandProperties:C.bandProperties,DataType:C.dataType}:{},H=new B.Z({width:f,height:m,bandCount:y,pixelType:x,compression:w,pixelSize:N,storageInfo:D,spatialReference:T,isPseudoSpatialReference:M,keyProperties:A,extent:E,statistics:C?C.statistics:null});if(null!=S&&S.length&&(H.nativeExtent=new O.Z({xmin:-.5,ymin:.5-m,xmax:f-.5,ymax:.5,spatialReference:T}),H.transform=new le.P({polynomialOrder:1,forwardCoefficients:[S[2]+S[0]/2,S[5]-S[3]/2,S[0],S[3],-S[1],-S[4]]}),H.extent=H.transform.forwardTransform(H.nativeExtent),H.pixelSize=new L.Z({x:(E.xmax-E.xmin)/f,y:(E.ymax-E.ymin)/m,spatialReference:T}),D.origin.x=-.5,D.origin.y=.5),null==(i=this.ioConfig.skipExtensions)||!i.includes("aux.xml")){const t=await this._fetchAuxiliaryData(e);if(null!=t){var z;if(H.statistics=null!=(z=t.statistics)?z:H.statistics,H.histograms=t.histograms,t.histograms&&!(0,o.i)(H.statistics)&&(H.statistics=(0,W.h)(t.histograms)),t.transform&&!S){H.transform=t.transform,H.nativeExtent=H.extent;const e=H.transform.forwardTransform(H.nativeExtent);H.pixelSize=new L.Z({x:(e.xmax-e.xmin)/f,y:(e.ymax-e.ymin)/m,spatialReference:T}),H.extent=e}H.spatialReference||(H.spatialReference=t.spatialReference)}}if(this._set("rasterInfo",H),this._headerInfo={littleEndian:l,isBigTiff:u,ifds:h,...d},!this._headerInfo.isSupported)throw new a.Z("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(e,t,r,i={}){var n;if(null==(n=this._headerInfo)||!n.isSupported||this.isBlockOutside(e,t,r))return null;const s=this._getTileLocation(e,t,r);if(!s)return null;const{ranges:a,actualTileWidth:o,actualTileHeight:l,ifd:c}=s,u=a.map((e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:i.signal}))),h=await Promise.all(u),d=h.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),f=1===h.length?h[0].data:new ArrayBuffer(d),m=[0],p=[0];if(h.length>1){const e=new Uint8Array(f);for(let t=0,r=0;t<h.length;t++){const i=h[t].data;e.set(new Uint8Array(i),r),m[t]=r,r+=i.byteLength,p[t]=i.byteLength}}const{blockWidth:g,blockHeight:y}=this.getBlockWidthHeight(e),x=await this.decodePixelBlock(f,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offsets:m,sizes:p},width:g,height:y,planes:null,pixelType:null});let w,b,v;if(o!==g||l!==y){let e=x.mask;if(e)for(w=0;w<y;w++)if(v=w*g,w<l)for(b=o;b<g;b++)e[v+b]=0;else for(b=0;b<g;b++)e[v+b]=0;else for(e=new Uint8Array(g*y),x.mask=e,w=0;w<l;w++)for(v=w*g,b=0;b<o;b++)e[v+b]=1}return x}async _readIFDs(e,t,r,i,n,s=4,a){if(!i)return null;(i>=t.byteLength||i<0)&&(t=(await this.request(this.url,{range:{from:i+n,to:i+n+this._bufferSize},responseType:"array-buffer",signal:a})).data,n=i+n,i=0);const o=await this._readIFD(t,r,i,n,P.T.TIFF_TAGS,s,a);if(e.push(o.ifd),!o.nextIFD)return null;await this._readIFDs(e,t,r,o.nextIFD-n,n,s,a)}async _readIFD(e,t,r,i,n=P.T.TIFF_TAGS,s=4,a){if(!e)return null;const o=(0,P.c)(e,t,r,i,n,s);if(o.success){const r=[];if(o.ifd.forEach((e=>{e.values||r.push(e)})),r.length>0){const n=r.map((e=>e.offlineOffsetSize)),s=Math.min.apply(null,n.map((e=>e[0])));if(Math.min.apply(null,n.map((e=>e[0]+e[1])))-s<=this._bufferSize){const{data:n}=await this.request(this.url,{range:{from:s,to:s+this._bufferSize},responseType:"array-buffer",signal:a});e=n,i=s,r.forEach((r=>(0,P.e)(e,t,r,i)))}}if(o.ifd.has("GEOKEYDIRECTORY")){const r=o.ifd.get("GEOKEYDIRECTORY"),n=r.values;if(n&&n.length>4){const s=n[0]+"."+n[1]+"."+n[2],o=await this._readIFD(e,t,r.valueOffset+6-i,i,P.T.GEO_KEYS,2,a);r.data=o.ifd,r.data&&r.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[s]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==e.byteLength){const r=await this.request(this.url,{range:{from:i,to:i+o.requiredBufferSize+4},responseType:"array-buffer",signal:a});return(e=r.data).byteLength<o.requiredBufferSize?null:this._readIFD(e,t,0,i,P.T.TIFF_TAGS,4,a)}}_getTileLocation(e,t,r){const{firstPyramidLevel:i,blockBoundary:n}=this.rasterInfo.storageInfo,s=0===e?0:e-(i-1),a=this._headerInfo.ifds[s];if(!a)return null;const o=(0,P.f)(a,this._headerInfo),l=Oe(a,"TILEOFFSETS");if(void 0===l)return null;const c=Oe(a,"TILEBYTECOUNTS"),{minRow:u,minCol:h,maxRow:d,maxCol:f}=n[s];if(t>d||r>f||t<u||r<h)return null;const m=Ee(a,"IMAGEWIDTH"),p=Ee(a,"IMAGELENGTH"),g=Ee(a,"TILEWIDTH"),y=Ee(a,"TILELENGTH"),x=o?this.rasterInfo.bandCount:1,w=x*t*(f+1)+r,b=[{from:l[w],to:l[w+x-1]+c[w+x-1]-1}];if(o){let e=!0;for(let t=0;t<x;t++)if(l[w+t]+c[w+t]!==l[w+t+1]){e=!1;break}if(!e)for(let e=0;e<x;e++)b[e]={from:l[w+e],to:l[w+e]+c[w+e]-1}}const v=l[w],I=c[w];return null==v||null==I?null:{ranges:b,ifd:a,actualTileWidth:r===f?m%g:g,actualTileHeight:t===d?p%y:y}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return Ie(t)}catch{return null}}};(0,i._)([(0,u.Cb)()],Fe.prototype,"_files",void 0),(0,i._)([(0,u.Cb)()],Fe.prototype,"_headerInfo",void 0),(0,i._)([(0,u.Cb)()],Fe.prototype,"_bufferSize",void 0),(0,i._)([(0,u.Cb)({type:String,json:{write:!0}})],Fe.prototype,"datasetFormat",void 0),Fe=(0,i._)([(0,m.j)("esri.layers.support.rasterDatasets.TIFFRaster")],Fe);const Be=Fe,De=new Map;De.set("CRF",{desc:"Cloud Raster Format",constructor:ge}),De.set("MRF",{desc:"Meta Raster Format",constructor:Me}),De.set("TIFF",{desc:"GeoTIFF",constructor:Be}),De.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Se}),De.set("JPG",{desc:"JPG Raster Format",constructor:Re}),De.set("PNG",{desc:"PNG Raster Format",constructor:Re}),De.set("GIF",{desc:"GIF Raster Format",constructor:Re}),De.set("BMP",{desc:"BMP Raster Format",constructor:Re});let Le=class extends((0,g.B)((0,ne.S)((0,te.O)((0,re.P)((0,y.C)(q((0,se.T)((0,ie.R)((0,l.M)(p.Z)))))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=(0,o.i)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(c.r9).then((()=>this._openRaster(t)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var e,t;let r=[new ae.Z({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const i=null==(e=this.rasterInfo)||null==(t=e.attributeTable)?void 0:t.fields;if(i){const e=i.filter((e=>"oid"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const t=e.clone();return t.name="Raster."+e.name,t}));r=r.concat(e)}const n=this.rasterInfo.dataType;if(("vector-magdir"===n||"vector-uv"===n)&&(0,o.i)(this.rasterInfo.multidimensionalInfo)){var s;const e=null==(s=this.rasterInfo.multidimensionalInfo.variables[0].unit)?void 0:s.trim(),t="Magnitude"+(e?` (${e})`:"");r.push(new ae.Z({name:"Raster.Magnitude",alias:t,domain:null,editable:!1,type:"double"})),r.push(new ae.Z({name:"Raster.Direction",alias:"Direction (°)",domain:null,editable:!1,type:"double"}))}return r}set renderer(e){this._set("renderer",e),this.updateRenderer()}readRenderer(e,t,r){const i=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,n=(0,s.ij)(i,r)||void 0;if(null!=n)return n}createPopupTemplate(e){return(0,fe.eZ)({fields:this.rasterFields,title:this.title},e)}write(e,t){const{raster:r}=this;if(this.loaded?"RasterTileServer"===r.datasetFormat&&("Raster"===r.tileType||"Map"===r.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t&&t.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new a.Z("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await class{static get supportedFormats(){const e=new Set;return De.forEach(((t,r)=>e.add(r))),e}static async open(e){const{url:t,ioConfig:r,sourceJSON:i}=e;let n=e.datasetFormat;null==n&&t.lastIndexOf(".")&&(n=t.slice(t.lastIndexOf(".")+1).toUpperCase()),"OVR"===n||"TIF"===n?n="TIFF":"JPG"!==n&&"JPEG"!==n&&"JFIF"!==n||(n="JPG"),t.toLowerCase().indexOf("/imageserver")>-1&&-1===t.toLowerCase().indexOf("/wcsserver")&&(n="RasterTileServer");const s={url:t,sourceJSON:i,datasetFormat:n,ioConfig:r||{bandIds:null,sampling:null}};let o,l;if(this.supportedFormats.has(n))return o=De.get(n).constructor,l=new o(s),await l.open({signal:e.signal}),l;if(n)throw new a.Z("rasterfactory:open","not a supported format "+n);const c=Array.from(De.keys());let u=0;const h=function(){return n=c[u++],n?(o=De.get(n).constructor,l=new o(s),l.open({signal:e.signal}).then((()=>l)).catch((()=>h()))):null};return h()}static register(e,t,r){De.has(e.toUpperCase())||De.set(e.toUpperCase(),{desc:t,constructor:r})}}.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e});const{rasterInfo:t}=this.raster;if(!t)throw new a.Z("imagery-tile-layer:load","cannot load resources on "+this.url);if(this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON){const e="Map"===this.raster.tileType&&null!=this.sourceJSON.minLOD&&null!=this.sourceJSON.maxLOD?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(e,{origin:"service"})}null==this.title&&(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.watch("customParameters",(e=>this.raster.ioConfig.customFetchParameters=e))}};(0,i._)([(0,u.Cb)({type:[h.I],json:{write:{overridePolicy(){var e;return{enabled:!this.loaded||"Raster"===this.raster.tileType||"0,1,2"!==(null==(e=this.bandIds)?void 0:e.join(","))}}}}})],Le.prototype,"bandIds",void 0),(0,i._)([(0,u.Cb)({json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"bilinear"!==this.interpolation}}}}}),(0,d.e)(oe.i)],Le.prototype,"interpolation",void 0),(0,i._)([(0,u.Cb)({json:{write:!0}})],Le.prototype,"multidimensionalDefinition",void 0),(0,i._)([(0,u.Cb)(_.b)],Le.prototype,"legendEnabled",void 0),(0,i._)([(0,u.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Le.prototype,"isReference",void 0),(0,i._)([(0,u.Cb)({type:["show","hide"]})],Le.prototype,"listMode",void 0),(0,i._)([(0,u.Cb)()],Le.prototype,"sourceJSON",void 0),(0,i._)([(0,u.Cb)({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],Le.prototype,"version",void 0),(0,i._)([(0,u.Cb)()],Le.prototype,"title",void 0),(0,i._)([(0,u.Cb)({readOnly:!0,json:{read:!1}})],Le.prototype,"type",void 0),(0,i._)([(0,u.Cb)({type:["ArcGISTiledImageServiceLayer"]})],Le.prototype,"operationalLayerType",void 0),(0,i._)([(0,u.Cb)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(e,t,r){t[r]=!e}}}})],Le.prototype,"popupEnabled",void 0),(0,i._)([(0,u.Cb)({type:n.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],Le.prototype,"popupTemplate",void 0),(0,i._)([(0,u.Cb)({readOnly:!0})],Le.prototype,"defaultPopupTemplate",null),(0,i._)([(0,u.Cb)({readOnly:!0,type:[ae.Z]})],Le.prototype,"fields",void 0),(0,i._)([(0,u.Cb)({readOnly:!0,type:[ae.Z]})],Le.prototype,"rasterFields",null),(0,i._)([(0,u.Cb)({types:s.dr,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var e;const t="raster-stretch"===(null==(e=this.renderer)?void 0:e.type)&&"none"===this.renderer.stretchType&&!this.renderer.useGamma;return{enabled:!this.loaded||"Raster"===this.raster.tileType||!t}}},origins:{"web-scene":{types:s.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],Le.prototype,"renderer",null),(0,i._)([(0,f.r)("renderer")],Le.prototype,"readRenderer",null),Le=(0,i._)([(0,m.j)("esri.layers.ImageryTileLayer")],Le);const Ne=Le},87258:(e,t,r)=>{r.r(t),r.d(t,{default:()=>w});var i,n=r(29768),s=r(74569),a=r(23761),o=r(57251),l=r(74673),c=r(76506),u=r(34250),h=(r(91306),r(97714)),d=r(17533),f=r(2906),m=r(60947),p=r(32422),g=r(97546);r(21801),r(40642),r(71552),r(73796),r(21972),r(23639),r(92143),r(31450),r(60474),r(66396),r(22723),r(86656),r(91055),r(6540),r(19657),r(6906),r(50406),r(60991),r(91597),r(86787),r(35132),r(89623),r(84069),r(44567),r(98380),r(92896),r(22781),r(86748),r(15324),r(76996),r(14249),r(60217),r(29107),r(30574),r(2157),r(25977),r(58076),r(98242),r(7471),r(54414),r(59465),r(1648),r(8925),r(33921),r(3482),r(45154),r(16769),r(55531),r(30582),r(593),r(85699),r(96055),r(47776),r(18033),r(6331),r(62048),r(4292),r(75626),r(72652),r(29641),r(30493),r(70821),r(82673),r(34229),r(37029),r(96467),r(63571),r(30776),r(48027),r(54174),r(82426),r(29794),r(63130),r(25696),r(59877),r(42775),r(95834),r(34394),r(57150),r(76726),r(20444),r(76393),r(78548),r(2497),r(49906),r(46527),r(11799),r(48649),r(94216),r(9960),r(30823),r(53326),r(92482),r(5853),r(39141),r(32101),r(38742),r(48243),r(34635),r(10401),r(49900),r(88762),r(82058),r(22739),r(20543),r(67477),r(78533),r(74653),r(91091),r(58943),r(70737),r(36834),r(85339),r(8487),r(17817),r(90814),r(15459),r(61847),r(16796),r(16955),r(22401),r(77894),r(55187),r(8586),r(44509),r(69814),r(11305),r(62259),r(44790),r(5909),r(60669),r(48208),r(51589),r(9801),r(53523),r(42911),r(46826),r(45433),r(54732);const y=new o.J({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"extent",mesh:"mesh","":null});let x=i=class extends l.a{constructor(e){super(e),this.displayFieldName=null,this.exceededTransferLimit=!1,this.features=[],this.fields=null,this.geometryType=null,this.hasM=!1,this.hasZ=!1,this.queryGeometry=null,this.spatialReference=null}readFeatures(e,t){const r=m.Z.fromJSON(t.spatialReference),i=[];for(let t=0;t<e.length;t++){const n=e[t],s=a.Z.fromJSON(n),o=n.geometry&&n.geometry.spatialReference;(0,c.i)(s.geometry)&&!o&&(s.geometry.spatialReference=r);const l=n.aggregateGeometries,u=s.aggregateGeometries;if(l&&(0,c.i)(u))for(const e in u){const t=u[e],i=l[e],n=null==i?void 0:i.spatialReference;(0,c.i)(t)&&!n&&(t.spatialReference=r)}i.push(s)}return i}writeGeometryType(e,t,r,i){if(e)return void y.write(e,t,r,i);const{features:n}=this;if(n)for(const e of n)if(e&&(0,c.i)(e.geometry))return void y.write(e.geometry.type,t,r,i)}readQueryGeometry(e,t){if(!e)return null;const r=!!e.spatialReference,i=(0,p.im)(e);return!r&&t.spatialReference&&(i.spatialReference=m.Z.fromJSON(t.spatialReference)),i}writeSpatialReference(e,t){if(e)return void(t.spatialReference=e.toJSON());const{features:r}=this;if(r)for(const e of r)if(e&&(0,c.i)(e.geometry)&&e.geometry.spatialReference)return void(t.spatialReference=e.geometry.spatialReference.toJSON())}clone(){return new i(this.cloneProperties())}cloneProperties(){return(0,c.d9)({displayFieldName:this.displayFieldName,exceededTransferLimit:this.exceededTransferLimit,features:this.features,fields:this.fields,geometryType:this.geometryType,hasM:this.hasM,hasZ:this.hasZ,queryGeometry:this.queryGeometry,spatialReference:this.spatialReference,transform:this.transform})}toJSON(e){const t=this.write();if(t.features&&Array.isArray(e)&&e.length>0)for(let r=0;r<t.features.length;r++){const i=t.features[r];if(i.geometry){const t=e&&e[r];i.geometry=t&&t.toJSON()||i.geometry}}return t}quantize(e){const{scale:[t,r],translate:[i,n]}=e,s=this.features,a=this._getQuantizationFunction(this.geometryType,(e=>Math.round((e-i)/t)),(e=>Math.round((n-e)/r)));for(let e=0,t=s.length;e<t;e++)a((0,c.u)(s[e].geometry))||(s.splice(e,1),e--,t--);return this.transform=e,this}unquantize(){const{geometryType:e,features:t,transform:r}=this;if(!r)return this;const{translate:[i,n],scale:[s,a]}=r,o=this._getHydrationFunction(e,(e=>e*s+i),(e=>n-e*a));for(const{geometry:e}of t)(0,c.i)(e)&&o(e);return this.transform=null,this}_quantizePoints(e,t,r){let i,n;const s=[];for(let a=0,o=e.length;a<o;a++){const o=e[a];if(a>0){const e=t(o[0]),a=r(o[1]);e===i&&a===n||(s.push([e-i,a-n]),i=e,n=a)}else i=t(o[0]),n=r(o[1]),s.push([i,n])}return s.length>0?s:null}_getQuantizationFunction(e,t,r){return"point"===e?e=>(e.x=t(e.x),e.y=r(e.y),e):"polyline"===e||"polygon"===e?e=>{const i=(0,p.oU)(e)?e.rings:e.paths,n=[];for(let e=0,s=i.length;e<s;e++){const s=i[e],a=this._quantizePoints(s,t,r);a&&n.push(a)}return n.length>0?((0,p.oU)(e)?e.rings=n:e.paths=n,e):null}:"multipoint"===e?e=>{const i=this._quantizePoints(e.points,t,r);return i.length>0?(e.points=i,e):null}:"extent"===e?e=>e:null}_getHydrationFunction(e,t,r){return"point"===e?e=>{e.x=t(e.x),e.y=r(e.y)}:"polyline"===e||"polygon"===e?e=>{const i=(0,p.oU)(e)?e.rings:e.paths;let n,s;for(let e=0,a=i.length;e<a;e++){const a=i[e];for(let e=0,i=a.length;e<i;e++){const i=a[e];e>0?(n+=i[0],s+=i[1]):(n=i[0],s=i[1]),i[0]=t(n),i[1]=r(s)}}}:"extent"===e?e=>{e.xmin=t(e.xmin),e.ymin=r(e.ymin),e.xmax=t(e.xmax),e.ymax=r(e.ymax)}:"multipoint"===e?e=>{const i=e.points;let n,s;for(let e=0,a=i.length;e<a;e++){const a=i[e];e>0?(n+=a[0],s+=a[1]):(n=a[0],s=a[1]),a[0]=t(n),a[1]=r(s)}}:void 0}};(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],x.prototype,"displayFieldName",void 0),(0,n._)([(0,u.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],x.prototype,"exceededTransferLimit",void 0),(0,n._)([(0,u.Cb)({type:[a.Z],json:{write:!0}})],x.prototype,"features",void 0),(0,n._)([(0,h.r)("features")],x.prototype,"readFeatures",null),(0,n._)([(0,u.Cb)({type:[g.Z],json:{write:!0}})],x.prototype,"fields",void 0),(0,n._)([(0,u.Cb)({type:["point","multipoint","polyline","polygon","extent","mesh"],json:{read:{reader:y.read}}})],x.prototype,"geometryType",void 0),(0,n._)([(0,f.w)("geometryType")],x.prototype,"writeGeometryType",null),(0,n._)([(0,u.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],x.prototype,"hasM",void 0),(0,n._)([(0,u.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],x.prototype,"hasZ",void 0),(0,n._)([(0,u.Cb)({types:s.qM,json:{write:!0}})],x.prototype,"queryGeometry",void 0),(0,n._)([(0,h.r)("queryGeometry")],x.prototype,"readQueryGeometry",null),(0,n._)([(0,u.Cb)({type:m.Z,json:{write:!0}})],x.prototype,"spatialReference",void 0),(0,n._)([(0,f.w)("spatialReference")],x.prototype,"writeSpatialReference",null),(0,n._)([(0,u.Cb)({json:{write:!0}})],x.prototype,"transform",void 0),x=i=(0,n._)([(0,d.j)("esri.rest.support.FeatureSet")],x),x.prototype.toJSON.isDefaultToJSON=!0;const w=x}}]);