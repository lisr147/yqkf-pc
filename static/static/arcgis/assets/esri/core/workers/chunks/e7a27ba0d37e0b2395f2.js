"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[3920,7258],{25781:(e,t,r)=>{r.d(t,{a:()=>o,b:()=>v,c:()=>g,d:()=>n,e:()=>f,f:()=>c,g:()=>h,h:()=>y,i:()=>a,j:()=>d,l:()=>i,o:()=>l,r:()=>u,s:()=>m,t:()=>p});var s=r(57251);const i=(0,s.s)()({esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriUnknownUnits:"unknown",esriYards:"yards"}),o=(0,s.s)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"}),n=(0,s.s)()({esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds"}),a=(0,s.s)()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTFeatureSets:"featuresets",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),l=(0,s.s)()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"}),u=((0,s.s)()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"}),(0,s.s)()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"})),p=((0,s.s)()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"}),(0,s.s)()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"}),(0,s.s)()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"})),c=(0,s.s)()({0:"either-side-of-vehicle",1:"right-side-of-vehicle",2:"left-side-of-vehicle",3:"no-u-turn"},{useNumericKeys:!0}),d=(0,s.s)()({0:"stop",1:"waypoint",2:"break"},{useNumericKeys:!0}),y=(0,s.s)()({0:"ok",1:"not-located",2:"network-element-not-located",3:"element-not-traversable",4:"invalid-field-values",5:"not-reached",6:"time-window-violation",7:"not-located-on-closest"},{useNumericKeys:!0}),m=(0,s.s)()({1:"right",2:"left"},{useNumericKeys:!0}),f=(0,s.s)()({0:"restriction",1:"added-cost"},{useNumericKeys:!0}),h=(0,s.s)()({0:"permit",1:"restrict"},{useNumericKeys:!0}),g=(0,s.s)()({1:"header",50:"arrive",51:"depart",52:"straight",100:"on-ferry",101:"off-ferry",102:"central-fork",103:"roundabout",104:"u-turn",150:"door",151:"stairs",152:"elevator",153:"escalator",154:"pedestrian-ramp",200:"left-fork",201:"left-ramp",202:"clockwise-roundabout",203:"left-handed-u-turn",204:"bear-left",205:"left-turn",206:"sharp-left",207:"left-turn-and-immediate-left-turn",208:"left-turn-and-immediate-right-turn",300:"right-fork",301:"right-ramp",302:"counter-clockwise-roundabout",303:"right-handed-u-turn",304:"bear-right",305:"right-turn",306:"sharp-right",307:"right-turn-and-immediate-left-turn",308:"right-turn-and-immediate-right-turn",400:"up-elevator",401:"up-escalator",402:"up-stairs",500:"down-elevator",501:"down-escalator",502:"down-stairs",1e3:"general-event",1001:"landmark",1002:"time-zone-change",1003:"traffic-event",1004:"scaled-cost-barrier-event",1005:"boundary-crossing",1006:"restriction-violation"},{useNumericKeys:!0}),v=(0,s.s)()({0:"unknown",1:"segment",2:"maneuver-segment",3:"restriction-violation",4:"scaled-cost-barrier",5:"heavy-traffic",6:"slow-traffic",7:"moderate-traffic"},{useNumericKeys:!0})},62206:(e,t,r)=>{r.d(t,{c:()=>i});class s{constructor(e={}){this._options=e}toQueryParams(e){if(!e)return null;const t=e.toJSON(),r={};return Object.keys(t).forEach((e=>{const s=this._options[e];if(s){const i="boolean"!=typeof s&&s.name?s.name:e,o="boolean"!=typeof s&&s.getter?s.getter(t):t[e];null!=o&&(r[i]=(e=>{if(!Array.isArray(e))return!1;const[t]=e;return"number"==typeof t||"string"==typeof t})(o)?o.join(","):"object"==typeof o?JSON.stringify(o):o)}else r[e]=t[e]}),this),r}}function i(e){return new s(e)}},69997:(e,t,r)=>{r.d(t,{g:()=>i});var s=r(53785);function i(e,t){const r=t||e.extent,i=e.width,o=(0,s.g)(r&&r.spatialReference);return r&&i?r.width/i*o*s.i*96:0}},81731:(e,t,r)=>{r.d(t,{a:()=>i,e:()=>n,p:()=>o}),r(76506);var s=r(32101);function i(e,t){return t?{...t,query:{...e,...t.query}}:{query:e}}function o(e){return"string"==typeof e?(0,s.mN)(e):e}function n(e,t,r){const s={};for(const i in e){if("declaredClass"===i)continue;const o=e[i];if(null!=o&&"function"!=typeof o)if(Array.isArray(o)){s[i]=[];for(let e=0;e<o.length;e++)s[i][e]=n(o[e])}else if("object"==typeof o)if(o.toJSON){const e=o.toJSON(r&&r[i]);s[i]=t?e:JSON.stringify(e)}else s[i]=t?o:JSON.stringify(o);else s[i]=o}return s}r(69997)},45937:(e,t,r)=>{r.d(t,{et:()=>v,ef:()=>b,bI:()=>T,Wf:()=>N});var s=r(82058),i=r(60991),o=r(76506),n=r(71552),a=r(32101),l=r(81731),u=r(29768),p=r(74673),c=r(34250),d=(r(91306),r(59465)),y=r(17533),m=r(25781),f=r(64560);r(31450),r(88762),r(92143),r(40642),r(50406),r(69997),r(53785),r(57251),r(95587),r(60947),r(2906),r(21972),r(23639),r(60474),r(66396),r(22723),r(86656),r(91055),r(6540),r(19657),r(6906),r(89623);let h=class extends p.a{constructor(e){super(e),this.accumulateAttributeNames=null,this.currentVersion=null,this.defaultTravelMode=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsSupportedLanguages=null,this.directionsTimeAttribute=null,this.hasZ=null,this.impedance=null,this.networkDataset=null,this.supportedTravelModes=null}};(0,u._)([(0,c.Cb)()],h.prototype,"accumulateAttributeNames",void 0),(0,u._)([(0,c.Cb)()],h.prototype,"currentVersion",void 0),(0,u._)([(0,c.Cb)()],h.prototype,"defaultTravelMode",void 0),(0,u._)([(0,c.Cb)()],h.prototype,"directionsLanguage",void 0),(0,u._)([(0,d.e)(m.a)],h.prototype,"directionsLengthUnits",void 0),(0,u._)([(0,c.Cb)()],h.prototype,"directionsSupportedLanguages",void 0),(0,u._)([(0,c.Cb)()],h.prototype,"directionsTimeAttribute",void 0),(0,u._)([(0,c.Cb)()],h.prototype,"hasZ",void 0),(0,u._)([(0,c.Cb)()],h.prototype,"impedance",void 0),(0,u._)([(0,c.Cb)()],h.prototype,"networkDataset",void 0),(0,u._)([(0,c.Cb)({type:[f.Z]})],h.prototype,"supportedTravelModes",void 0),h=(0,u._)([(0,y.j)("esri.rest.support.NetworkServiceDescription")],h);const g=h;function v(e,t,r,s){s[r]=[t.length,t.length+e.length],e.forEach((e=>{t.push(e.geometry)}))}function b(e,t){for(let r=0;r<t.length;r++){const s=e[t[r]];if(s&&s.length)for(const e of s)e.z=void 0}console.log("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")}function N(e,t){for(let r=0;r<t.length;r++){const s=e[t[r]];if(s&&s.length)for(const e of s)if((0,o.i)(e)&&e.hasZ)return!0}return!1}async function T(e,t,r){if(!e)throw new i.Z("network-service:missing-url","Url to Network service is missing");const o=(0,l.a)({f:"json",token:t},r),{data:u}=await(0,s.default)(e,o);u.supportedTravelModes||(u.supportedTravelModes=[]);for(let e=0;e<u.supportedTravelModes.length;e++)u.supportedTravelModes[e].id||(u.supportedTravelModes[e].id=u.supportedTravelModes[e].itemId);const p=u.currentVersion>=10.4?async function(e,t,r){try{const i=(0,l.a)({f:"json",token:t},r),o=(0,a.Qj)(e)+"/retrieveTravelModes",{data:{supportedTravelModes:n,defaultTravelMode:u}}=await(0,s.default)(o,i);return{supportedTravelModes:n,defaultTravelMode:u}}catch(e){throw new i.Z("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:e})}}(e,t,r):async function(e,t){var r,i;const o=(0,l.a)({f:"json"},t),{data:u}=await(0,s.default)(e.replace(/\/rest\/.*$/i,"/info"),o);if(!u||!u.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};const{owningSystemUrl:p}=u,c=(0,a.Qj)(p)+"/sharing/rest/portals/self",{data:d}=await(0,s.default)(c,o),y=(0,n.g)("helperServices.routingUtilities.url",d);if(!y)return{supportedTravelModes:[],defaultTravelMode:null};const m=(0,l.p)(p),f=/\/solve$/i.test(m.path)?"Route":/\/solveclosestfacility$/i.test(m.path)?"ClosestFacility":"ServiceAreas",h=(0,l.a)({f:"json",serviceName:f},t),g=(0,a.Qj)(y)+"/GetTravelModes/execute",v=await(0,s.default)(g,h),b=[];let N=null;if(null!=v&&null!=(r=v.data)&&null!=(i=r.results)&&i.length){const e=v.data.results;for(const t of e){var T;if("supportedTravelModes"===t.paramName){if(null!=(T=t.value)&&T.features)for(const{attributes:e}of t.value.features)if(e){const t=JSON.parse(e.TravelMode);b.push(t)}}else"defaultTravelMode"===t.paramName&&(N=t.value)}}return{supportedTravelModes:b,defaultTravelMode:N}}(e,r),{defaultTravelMode:c,supportedTravelModes:d}=await p;return u.defaultTravelMode=c,u.supportedTravelModes=d,g.fromJSON(u)}},8021:(e,t,r)=>{r.d(t,{Z:()=>g});var s=r(29768),i=(r(74569),r(76506)),o=r(34250),n=(r(91306),r(97714)),a=r(17533),l=r(23761),u=r(87258),p=r(21801),c=r(60947),d=r(92896),y=r(91597);r(73796),r(74673),r(21972),r(23639),r(92143),r(31450),r(71552),r(40642),r(60474),r(66396),r(22723),r(86656),r(91055),r(6540),r(19657),r(6906),r(50406),r(60991),r(2906),r(84069),r(35132),r(89623),r(86787),r(44567),r(98380),r(22781),r(57251),r(32422),r(86748),r(15324),r(76996),r(14249),r(60217),r(29107),r(30574),r(2157),r(25977),r(58076),r(98242),r(7471),r(54414),r(59465),r(1648),r(8925),r(33921),r(3482),r(45154),r(16769),r(55531),r(30582),r(593),r(85699),r(96055),r(47776),r(18033),r(6331),r(62048),r(4292),r(75626),r(72652),r(29641),r(30493),r(70821),r(82673),r(34229),r(37029),r(96467),r(63571),r(30776),r(48027),r(54174),r(82426),r(29794),r(63130),r(25696),r(59877),r(42775),r(95834),r(34394),r(57150),r(76726),r(20444),r(76393),r(78548),r(2497),r(49906),r(46527),r(11799),r(48649),r(94216),r(9960),r(30823),r(53326),r(92482),r(5853),r(39141),r(32101),r(38742),r(48243),r(34635),r(10401),r(49900),r(88762),r(82058),r(22739),r(20543),r(67477),r(78533),r(74653),r(91091),r(58943),r(70737),r(36834),r(85339),r(8487),r(17817),r(90814),r(15459),r(61847),r(16796),r(16955),r(22401),r(77894),r(55187),r(8586),r(44509),r(69814),r(11305),r(62259),r(44790),r(5909),r(60669),r(48208),r(51589),r(97546),r(9801),r(53523),r(42911),r(46826),r(45433),r(54732);let m=class extends l.Z{};(0,s._)([(0,o.Cb)()],m.prototype,"events",void 0),(0,s._)([(0,o.Cb)()],m.prototype,"strings",void 0),m=(0,s._)([(0,a.j)("esri.rest.support.DirectionsFeature")],m);const f=m;let h=class extends u.default{constructor(e){super(e),this.extent=null,this.features=null,this.geometryType="polyline",this.routeId=null,this.routeName=null,this.totalDriveTime=null,this.totalLength=null,this.totalTime=null}readFeatures(e,t){var r;if(!e)return[];const s=null!=(r=t.summary.envelope.spatialReference)?r:t.spatialReference,i=s&&c.Z.fromJSON(s);return e.map((e=>{var t,r;const s=this._decompressGeometry(e.compressedGeometry),o=new d.Z({...s,spatialReference:i}),n=null!=(t=null==(r=e.events)?void 0:r.map((e=>{const{arriveTimeUTC:t,ETA:r,point:{x:s,y:o,z:n},strings:a}=e;return new f({geometry:new y.Z({x:s,y:o,z:n,hasZ:void 0!==n,spatialReference:i}),attributes:{ETA:r,arriveTimeUTC:t},strings:a})})))?t:[];return new f({attributes:e.attributes,events:n,geometry:o,strings:e.strings})}))}get mergedGeometry(){if(!this.features)return null;const e=this.features.map((({geometry:e})=>(0,i.u)(e))),t=this.get("extent.spatialReference");return this._mergePolylinesToSinglePath(e,t)}get strings(){return this.features.map((({strings:e})=>e))}_decompressGeometry(e){let t=0,r=0,s=0,i=0;const o=[];let n,a,l,u,p,c,d,y,m=0,f=0,h=0;if(p=e.match(/((\+|\-)[^\+\-\|]+|\|)/g),p||(p=[]),0===parseInt(p[m],32)){m=2;const e=parseInt(p[m],32);m++,c=parseInt(p[m],32),m++,1&e&&(f=p.indexOf("|")+1,d=parseInt(p[f],32),f++),2&e&&(h=p.indexOf("|",f)+1,y=parseInt(p[h],32),h++)}else c=parseInt(p[m],32),m++;for(;m<p.length&&"|"!==p[m];){n=parseInt(p[m],32)+t,m++,t=n,a=parseInt(p[m],32)+r,m++,r=a;const e=[n/c,a/c];f&&(u=parseInt(p[f],32)+s,f++,s=u,e.push(u/d)),h&&(l=parseInt(p[h],32)+i,h++,i=l,e.push(l/y)),o.push(e)}return{paths:[o],hasZ:f>0,hasM:h>0}}_mergePolylinesToSinglePath(e,t){if(0===e.length)return new d.Z({spatialReference:t});const r=[];for(const t of e)for(const e of t.paths)r.push(...e);const s=[];r.forEach(((e,t)=>{0!==t&&e[0]===r[t-1][0]&&e[1]===r[t-1][1]||s.push(e)}));const{hasM:i,hasZ:o}=e[0];return new d.Z({hasM:i,hasZ:o,paths:[s],spatialReference:t})}};(0,s._)([(0,o.Cb)({type:p.Z,json:{read:{source:"summary.envelope"}}})],h.prototype,"extent",void 0),(0,s._)([(0,o.Cb)()],h.prototype,"features",void 0),(0,s._)([(0,n.r)("features")],h.prototype,"readFeatures",null),(0,s._)([(0,o.Cb)()],h.prototype,"geometryType",void 0),(0,s._)([(0,o.Cb)({readOnly:!0})],h.prototype,"mergedGeometry",null),(0,s._)([(0,o.Cb)()],h.prototype,"routeId",void 0),(0,s._)([(0,o.Cb)()],h.prototype,"routeName",void 0),(0,s._)([(0,o.Cb)({value:null,readOnly:!0})],h.prototype,"strings",null),(0,s._)([(0,o.Cb)({json:{read:{source:"summary.totalDriveTime"}}})],h.prototype,"totalDriveTime",void 0),(0,s._)([(0,o.Cb)({json:{read:{source:"summary.totalLength"}}})],h.prototype,"totalLength",void 0),(0,s._)([(0,o.Cb)({json:{read:{source:"summary.totalTime"}}})],h.prototype,"totalTime",void 0),h=(0,s._)([(0,a.j)("esri.rest.support.DirectionsFeatureSet")],h);const g=h},87258:(e,t,r)=>{r.r(t),r.d(t,{default:()=>b});var s,i=r(29768),o=r(74569),n=r(23761),a=r(57251),l=r(74673),u=r(76506),p=r(34250),c=(r(91306),r(97714)),d=r(17533),y=r(2906),m=r(60947),f=r(32422),h=r(97546);r(21801),r(40642),r(71552),r(73796),r(21972),r(23639),r(92143),r(31450),r(60474),r(66396),r(22723),r(86656),r(91055),r(6540),r(19657),r(6906),r(50406),r(60991),r(91597),r(86787),r(35132),r(89623),r(84069),r(44567),r(98380),r(92896),r(22781),r(86748),r(15324),r(76996),r(14249),r(60217),r(29107),r(30574),r(2157),r(25977),r(58076),r(98242),r(7471),r(54414),r(59465),r(1648),r(8925),r(33921),r(3482),r(45154),r(16769),r(55531),r(30582),r(593),r(85699),r(96055),r(47776),r(18033),r(6331),r(62048),r(4292),r(75626),r(72652),r(29641),r(30493),r(70821),r(82673),r(34229),r(37029),r(96467),r(63571),r(30776),r(48027),r(54174),r(82426),r(29794),r(63130),r(25696),r(59877),r(42775),r(95834),r(34394),r(57150),r(76726),r(20444),r(76393),r(78548),r(2497),r(49906),r(46527),r(11799),r(48649),r(94216),r(9960),r(30823),r(53326),r(92482),r(5853),r(39141),r(32101),r(38742),r(48243),r(34635),r(10401),r(49900),r(88762),r(82058),r(22739),r(20543),r(67477),r(78533),r(74653),r(91091),r(58943),r(70737),r(36834),r(85339),r(8487),r(17817),r(90814),r(15459),r(61847),r(16796),r(16955),r(22401),r(77894),r(55187),r(8586),r(44509),r(69814),r(11305),r(62259),r(44790),r(5909),r(60669),r(48208),r(51589),r(9801),r(53523),r(42911),r(46826),r(45433),r(54732);const g=new a.J({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"extent",mesh:"mesh","":null});let v=s=class extends l.a{constructor(e){super(e),this.displayFieldName=null,this.exceededTransferLimit=!1,this.features=[],this.fields=null,this.geometryType=null,this.hasM=!1,this.hasZ=!1,this.queryGeometry=null,this.spatialReference=null}readFeatures(e,t){const r=m.Z.fromJSON(t.spatialReference),s=[];for(let t=0;t<e.length;t++){const i=e[t],o=n.Z.fromJSON(i),a=i.geometry&&i.geometry.spatialReference;(0,u.i)(o.geometry)&&!a&&(o.geometry.spatialReference=r);const l=i.aggregateGeometries,p=o.aggregateGeometries;if(l&&(0,u.i)(p))for(const e in p){const t=p[e],s=l[e],i=null==s?void 0:s.spatialReference;(0,u.i)(t)&&!i&&(t.spatialReference=r)}s.push(o)}return s}writeGeometryType(e,t,r,s){if(e)return void g.write(e,t,r,s);const{features:i}=this;if(i)for(const e of i)if(e&&(0,u.i)(e.geometry))return void g.write(e.geometry.type,t,r,s)}readQueryGeometry(e,t){if(!e)return null;const r=!!e.spatialReference,s=(0,f.im)(e);return!r&&t.spatialReference&&(s.spatialReference=m.Z.fromJSON(t.spatialReference)),s}writeSpatialReference(e,t){if(e)return void(t.spatialReference=e.toJSON());const{features:r}=this;if(r)for(const e of r)if(e&&(0,u.i)(e.geometry)&&e.geometry.spatialReference)return void(t.spatialReference=e.geometry.spatialReference.toJSON())}clone(){return new s(this.cloneProperties())}cloneProperties(){return(0,u.d9)({displayFieldName:this.displayFieldName,exceededTransferLimit:this.exceededTransferLimit,features:this.features,fields:this.fields,geometryType:this.geometryType,hasM:this.hasM,hasZ:this.hasZ,queryGeometry:this.queryGeometry,spatialReference:this.spatialReference,transform:this.transform})}toJSON(e){const t=this.write();if(t.features&&Array.isArray(e)&&e.length>0)for(let r=0;r<t.features.length;r++){const s=t.features[r];if(s.geometry){const t=e&&e[r];s.geometry=t&&t.toJSON()||s.geometry}}return t}quantize(e){const{scale:[t,r],translate:[s,i]}=e,o=this.features,n=this._getQuantizationFunction(this.geometryType,(e=>Math.round((e-s)/t)),(e=>Math.round((i-e)/r)));for(let e=0,t=o.length;e<t;e++)n((0,u.u)(o[e].geometry))||(o.splice(e,1),e--,t--);return this.transform=e,this}unquantize(){const{geometryType:e,features:t,transform:r}=this;if(!r)return this;const{translate:[s,i],scale:[o,n]}=r,a=this._getHydrationFunction(e,(e=>e*o+s),(e=>i-e*n));for(const{geometry:e}of t)(0,u.i)(e)&&a(e);return this.transform=null,this}_quantizePoints(e,t,r){let s,i;const o=[];for(let n=0,a=e.length;n<a;n++){const a=e[n];if(n>0){const e=t(a[0]),n=r(a[1]);e===s&&n===i||(o.push([e-s,n-i]),s=e,i=n)}else s=t(a[0]),i=r(a[1]),o.push([s,i])}return o.length>0?o:null}_getQuantizationFunction(e,t,r){return"point"===e?e=>(e.x=t(e.x),e.y=r(e.y),e):"polyline"===e||"polygon"===e?e=>{const s=(0,f.oU)(e)?e.rings:e.paths,i=[];for(let e=0,o=s.length;e<o;e++){const o=s[e],n=this._quantizePoints(o,t,r);n&&i.push(n)}return i.length>0?((0,f.oU)(e)?e.rings=i:e.paths=i,e):null}:"multipoint"===e?e=>{const s=this._quantizePoints(e.points,t,r);return s.length>0?(e.points=s,e):null}:"extent"===e?e=>e:null}_getHydrationFunction(e,t,r){return"point"===e?e=>{e.x=t(e.x),e.y=r(e.y)}:"polyline"===e||"polygon"===e?e=>{const s=(0,f.oU)(e)?e.rings:e.paths;let i,o;for(let e=0,n=s.length;e<n;e++){const n=s[e];for(let e=0,s=n.length;e<s;e++){const s=n[e];e>0?(i+=s[0],o+=s[1]):(i=s[0],o=s[1]),s[0]=t(i),s[1]=r(o)}}}:"extent"===e?e=>{e.xmin=t(e.xmin),e.ymin=r(e.ymin),e.xmax=t(e.xmax),e.ymax=r(e.ymax)}:"multipoint"===e?e=>{const s=e.points;let i,o;for(let e=0,n=s.length;e<n;e++){const n=s[e];e>0?(i+=n[0],o+=n[1]):(i=n[0],o=n[1]),n[0]=t(i),n[1]=r(o)}}:void 0}};(0,i._)([(0,p.Cb)({type:String,json:{write:!0}})],v.prototype,"displayFieldName",void 0),(0,i._)([(0,p.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],v.prototype,"exceededTransferLimit",void 0),(0,i._)([(0,p.Cb)({type:[n.Z],json:{write:!0}})],v.prototype,"features",void 0),(0,i._)([(0,c.r)("features")],v.prototype,"readFeatures",null),(0,i._)([(0,p.Cb)({type:[h.Z],json:{write:!0}})],v.prototype,"fields",void 0),(0,i._)([(0,p.Cb)({type:["point","multipoint","polyline","polygon","extent","mesh"],json:{read:{reader:g.read}}})],v.prototype,"geometryType",void 0),(0,i._)([(0,y.w)("geometryType")],v.prototype,"writeGeometryType",null),(0,i._)([(0,p.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],v.prototype,"hasM",void 0),(0,i._)([(0,p.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],v.prototype,"hasZ",void 0),(0,i._)([(0,p.Cb)({types:o.qM,json:{write:!0}})],v.prototype,"queryGeometry",void 0),(0,i._)([(0,c.r)("queryGeometry")],v.prototype,"readQueryGeometry",null),(0,i._)([(0,p.Cb)({type:m.Z,json:{write:!0}})],v.prototype,"spatialReference",void 0),(0,i._)([(0,y.w)("spatialReference")],v.prototype,"writeSpatialReference",null),(0,i._)([(0,p.Cb)({json:{write:!0}})],v.prototype,"transform",void 0),v=s=(0,i._)([(0,d.j)("esri.rest.support.FeatureSet")],v),v.prototype.toJSON.isDefaultToJSON=!0;const b=v},2710:(e,t,r)=>{r.d(t,{Z:()=>p});var s=r(29768),i=r(57251),o=r(74673),n=r(34250),a=(r(76506),r(91306),r(17533));r(71552),r(21972),r(23639),r(92143),r(31450),r(40642),r(60474),r(66396),r(22723),r(86656),r(91055),r(6540),r(19657),r(6906),r(50406),r(60991);const l=new i.J({esriJobMessageTypeInformative:"informative",esriJobMessageTypeProcessDefinition:"process-definition",esriJobMessageTypeProcessStart:"process-start",esriJobMessageTypeProcessStop:"process-stop",esriJobMessageTypeWarning:"warning",esriJobMessageTypeError:"error",esriJobMessageTypeEmpty:"empty",esriJobMessageTypeAbort:"abort"});let u=class extends o.a{constructor(e){super(e),this.description=null,this.type=null}};(0,s._)([(0,n.Cb)({type:String,json:{write:!0}})],u.prototype,"description",void 0),(0,s._)([(0,n.Cb)({type:String,json:{read:l.read,write:l.write}})],u.prototype,"type",void 0),u=(0,s._)([(0,a.j)("esri.rest.support.GPMessage")],u);const p=u},37265:(e,t,r)=>{r.d(t,{Z:()=>p});var s=r(29768),i=r(57251),o=r(34250),n=(r(76506),r(91306),r(17533)),a=r(2710);r(71552),r(92143),r(31450),r(40642),r(60474),r(66396),r(22723),r(86656),r(60991),r(6540),r(74673),r(21972),r(23639),r(91055),r(19657),r(6906),r(50406);const l=new i.J({0:"informative",1:"process-definition",2:"process-start",3:"process-stop",50:"warning",100:"error",101:"empty",200:"abort"});let u=class extends a.Z{constructor(e){super(e),this.type=null}};(0,s._)([(0,o.Cb)({type:String,json:{read:l.read,write:l.write}})],u.prototype,"type",void 0),u=(0,s._)([(0,n.j)("esri.rest.support.NAMessage")],u);const p=u},64560:(e,t,r)=>{r.d(t,{Z:()=>d});var s,i=r(29768),o=r(74673),n=r(76506),a=r(34250),l=(r(91306),r(59465)),u=r(17533),p=r(25781);r(21972),r(23639),r(92143),r(31450),r(71552),r(40642),r(60474),r(66396),r(22723),r(86656),r(91055),r(6540),r(19657),r(6906),r(50406),r(60991),r(57251);let c=s=class extends o.a{constructor(e){super(e),this.attributeParameterValues=null,this.description=null,this.distanceAttributeName=null,this.id=null,this.impedanceAttributeName=null,this.name=null,this.restrictionAttributeNames=null,this.simplificationTolerance=null,this.simplificationToleranceUnits=null,this.timeAttributeName=null,this.type=null,this.useHierarchy=null,this.uturnAtJunctions=null}clone(){return new s((0,n.d9)({attributeParameterValues:this.attributeParameterValues,description:this.description,distanceAttributeName:this.distanceAttributeName,id:this.id,impedanceAttributeName:this.impedanceAttributeName,name:this.name,restrictionAttributeNames:this.restrictionAttributeNames,simplificationTolerance:this.simplificationTolerance,simplificationToleranceUnits:this.simplificationToleranceUnits,timeAttributeName:this.timeAttributeName,type:this.type,useHierarchy:this.useHierarchy,uturnAtJunctions:this.uturnAtJunctions}))}};(0,i._)([(0,a.Cb)({type:[Object],json:{write:!0}})],c.prototype,"attributeParameterValues",void 0),(0,i._)([(0,a.Cb)({type:String,json:{write:!0}})],c.prototype,"description",void 0),(0,i._)([(0,a.Cb)({type:String,json:{write:!0}})],c.prototype,"distanceAttributeName",void 0),(0,i._)([(0,a.Cb)({type:String,json:{write:!0}})],c.prototype,"id",void 0),(0,i._)([(0,a.Cb)({type:String,json:{write:!0}})],c.prototype,"impedanceAttributeName",void 0),(0,i._)([(0,a.Cb)({type:String,json:{write:!0}})],c.prototype,"name",void 0),(0,i._)([(0,a.Cb)({type:[String],json:{write:!0}})],c.prototype,"restrictionAttributeNames",void 0),(0,i._)([(0,a.Cb)({type:Number,json:{write:{allowNull:!0}}})],c.prototype,"simplificationTolerance",void 0),(0,i._)([(0,l.e)(p.l)],c.prototype,"simplificationToleranceUnits",void 0),(0,i._)([(0,a.Cb)({type:String,json:{write:!0}})],c.prototype,"timeAttributeName",void 0),(0,i._)([(0,l.e)(p.t)],c.prototype,"type",void 0),(0,i._)([(0,a.Cb)({type:Boolean,json:{write:!0}})],c.prototype,"useHierarchy",void 0),(0,i._)([(0,l.e)(p.r)],c.prototype,"uturnAtJunctions",void 0),c=s=(0,i._)([(0,u.j)("esri.rest.support.TravelMode")],c);const d=c}}]);