(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d237932"],{fc65:function(e,t,r){"use strict";r.r(t);var i,a=r("a4ee"),n=(r("c120"),r("b2b2")),s=r("e92d"),o=r("cea0"),l=r("59b2"),c=r("d386"),u=r("09db"),p=r("e041"),d=(r("8eed"),r("f402"),r("4856")),m=r("a6a3"),b=r("e694"),h=r("22f4"),y=r("b911"),f=r("3d59"),g=r("997b"),O=r("0db5"),j=r("8e17"),v=r("5a62"),R=r("601a"),w=r("f51b"),x=r("7ffa"),S=r("4adc"),I=r("fa8a"),N=r("afcf"),T=r("ce50"),_=r("f4cc"),P=r("5996"),C=r("4ae5"),F=r("3af1"),D=r("1219"),A=r("e06a"),M=r("2eab"),V=r("8d60"),J=r("3e27"),z=r("ba40"),k=r("a1f3"),L=r("80b7"),E=r("f29a"),q=r("c64f"),U=r("feec"),Q=r("b627"),B=r("448d"),H=r("6a0e");const G=new Set(["raster","raster2","dem","fillraster"]),W=new Set(["rasters"]),X=e=>e&&e.rasterFunction?te.fromJSON(e):e,Y=e=>e&&e instanceof te?e.toJSON():e,K=e=>(null==e?void 0:e.functionName)&&!e.declaredClass,$=e=>K(e)?new te(e):e;var Z;!function(e){e[e.MOSAIC=0]="MOSAIC",e[e.GROUP=1]="GROUP",e[e.ITEM=2]="ITEM"}(Z||(Z={}));const ee=e=>{if(null==e)return null;e=Object(x["a"])(e);const t={};for(const r of Object.keys(e))G.has(r.toLowerCase())?t[r]=X(e[r]):W.has(r.toLowerCase())&&Array.isArray(e[r])?t[r]=e[r].map(X):t[r]=e[r];return t};let te=i=class extends H["a"]{constructor(e){super(e),this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.description=null,this.functionDefinition=null,this.thumbnail=null}set functionArguments(e){if(e){const t=Object.keys(e);if(t.some(t=>G.has(t.toLowerCase())&&K(e[t]))||t.some(t=>W.has(t.toLowerCase())&&Array.isArray(e[t])&&e[t].some(e=>K(e)))){e=Object(x["a"])(e);for(const r of t)G.has(r.toLowerCase())?e[r]=$(e[r]):W.has(r.toLowerCase())&&Array.isArray(e[r])&&(e[r]=e[r].map(e=>$(e)))}}this._set("functionArguments",e)}readFunctionArguments(e,t){return e=t.arguments||t.rasterFunctionArguments,ee(e)}writeFunctionArguments(e,t,r){const i={};for(const a of Object.keys(e))G.has(a.toLowerCase())?i[a]=Y(e[a]):W.has(a.toLowerCase())&&Array.isArray(e[a])?i[a]=e[a].map(Y):i[a]=Y(e[a]);this.functionDefinition?t.arguments=i:t[r]=i}readFunctionName(e,t){const r=t.rasterFunctionInfos,i=t.name;return i||(r&&r.length&&"None"!==r[0].name?r[0].name:t.rasterFunction)}writeFunctionName(e,t,r){this.functionDefinition?t.name=e:t[r]=e}readFunctionType(e){return Z[e]}writeFunctionType(e,t,r){t[r]=Z[e]}clone(){return new i({functionName:this.functionName,functionArguments:Object(x["a"])(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,description:this.description,functionType:this.functionType,functionDefinition:this.functionDefinition,thumbnail:this.thumbnail})}};Object(a["a"])([Object(l["b"])({json:{type:Object,write:{target:"rasterFunctionArguments"}}})],te.prototype,"functionArguments",null),Object(a["a"])([Object(N["a"])("functionArguments",["rasterFunctionArguments","arguments"])],te.prototype,"readFunctionArguments",null),Object(a["a"])([Object(u["a"])("functionArguments")],te.prototype,"writeFunctionArguments",null),Object(a["a"])([Object(l["b"])({json:{type:String,write:{target:"rasterFunction"}}})],te.prototype,"functionName",void 0),Object(a["a"])([Object(N["a"])("functionName",["rasterFunction","rasterFunctionInfos","name"])],te.prototype,"readFunctionName",null),Object(a["a"])([Object(u["a"])("functionName")],te.prototype,"writeFunctionName",null),Object(a["a"])([Object(B["a"])({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1}),Object(l["b"])({json:{default:"unknown"}})],te.prototype,"outputPixelType",void 0),Object(a["a"])([Object(l["b"])({type:String,json:{read:!0,write:!0}})],te.prototype,"variableName",void 0),Object(a["a"])([Object(l["b"])({type:String,json:{read:!0,write:!0,origins:{"web-document":{read:!1,write:!1}}}})],te.prototype,"description",void 0),Object(a["a"])([Object(l["b"])({json:{origins:{"web-document":{read:!1,write:!1}}}})],te.prototype,"functionType",void 0),Object(a["a"])([Object(N["a"])("functionType")],te.prototype,"readFunctionType",null),Object(a["a"])([Object(u["a"])("functionType")],te.prototype,"writeFunctionType",null),Object(a["a"])([Object(l["b"])({type:Object,json:{read:{source:"function"},write:{target:"function"},origins:{"web-document":{read:!1,write:!1}}}})],te.prototype,"functionDefinition",void 0),Object(a["a"])([Object(l["b"])({type:String,json:{read:!0,write:!0,origins:{"web-document":{read:!1,write:!1}}}})],te.prototype,"thumbnail",void 0),te=i=Object(a["a"])([Object(c["a"])("esri.layers.support.RasterFunction")],te);var re=te,ie=re,ae=r("c3fc"),ne=r("7c6e"),se=r("6557");const oe={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767]},le={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},ce=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function ue(e){return ce.has(e.type)}function pe(e,t){if(!e||!t)return Object(x["a"])(e||t);const r=Object(x["a"])(e);return"none"!==t.functionName.toLowerCase()&&(me(r.functionArguments).Raster=t),r}function de(e,t){switch(t=t||{},e.type){case"raster-stretch":return fe(e,t);case"class-breaks":return ge(e,t);case"unique-value":return ve(e,t);case"raster-colormap":return Re(e,t);case"vector-field":return he(e,t);case"raster-shaded-relief":return ye(e,t)}}function me(e){const t=e.Raster;return t&&"esri.layers.support.RasterFunction"===t.declaredClass?me(t.functionArguments):e}const be={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function he(e,t){const r=new ie;r.functionName="VectorFieldRenderer";const{dataType:i,bandProperties:a}=t,n="vector-uv"===i;let s,o;a&&2===a.length&&(s=a.map(e=>e.BandName.toLowerCase()).indexOf("magnitude"),o=a.map(e=>e.BandName.toLowerCase()).indexOf("direction")),-1!==s&&null!==s||(s=0,o=1);const l="arithmetic"===e.rotationType?1:2,c="flow-from"===e.flowRepresentation?0:1,u=e.visualVariables?e.visualVariables.filter(e=>"Magnitude"===e.field)[0]:new ae["a"],p={magnitudeBandID:s,directionBandID:o,isUVComponents:n,referenceSystem:l,massFlowAngleRepresentation:c,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:le[e.style.toLowerCase().replace("-","_")],minimumMagnitude:u.minDataValue,maximumMagnitude:u.maxDataValue,minimumSymbolSize:u.minSize,maximumSymbolSize:u.maxSize};return r.functionArguments=p,r}function ye(e,t){if("elevation"!==t.dataType)return new ie;const r=new ie;r.functionName="Hillshade";const i="traditional"===e.hillshadeType?0:1,a="none"===e.scalingType?1:3,n={HillshadeType:i,SlopeType:a,ZFactor:e.zFactor};return 0===i&&(n.Azimuth=e.azimuth,n.Altitude=e.altitude),3===a&&(n.PSPower=e.pixelSizePower,n.PSZFactor=e.pixelSizeFactor),r.functionArguments=n,r.variableName="Raster",e.colorRamp&&(r.functionName="ShadedRelief",n.Colormap=Object(ne["b"])(e.colorRamp,256)),r}function fe(e,t){const r=new ie;r.functionName="Stretch";const i=be[se["b"].toJSON(e.stretchType)],a="u8",n={StretchType:i,Statistics:we(e.statistics),DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(n.Min=e.outputMin),null!=e.outputMax&&(n.Max=e.outputMax),i===be.standardDeviation?(n.NumberOfStandardDeviations=e.numberOfStandardDeviations,r.outputPixelType=a):i===be.percentClip?(n.MinPercent=e.minPercent,n.MaxPercent=e.maxPercent,r.outputPixelType=a):i===be.minMax?r.outputPixelType=a:i===be.sigmoid&&(n.SigmoidStrengthLevel=e.sigmoidStrengthLevel),r.functionArguments=n,r.variableName="Raster",e.colorRamp){const i=e.colorRamp,a=new ie,n=Object(ne["c"])(i);return n?a.functionArguments={colorRamp:n}:!t.convertColorRampToColormap||"algorithmic"!==i.type&&"multipart"!==i.type?a.functionArguments={colorRamp:e.colorRamp.toJSON()}:a.functionArguments={Colormap:Object(ne["b"])(i,256)},a.variableName="Raster",a.functionName="Colormap",a.functionArguments.Raster=r,a}return r}function ge(e,t){const r=[],i=[],a=[],n=[],s=1e-6,{pixelType:o,rasterAttributeTable:l}=t,c=l&&l.features,u=je(l);if(c&&Array.isArray(c)&&e.classBreakInfos){e.classBreakInfos.forEach((t,r)=>{const i=t.symbol.color;let a;i.a&&c.forEach(s=>{a=s.attributes[e.field],(a>=t.minValue&&a<t.maxValue||r===e.classBreakInfos.length-1&&a>=t.minValue)&&n.push([s.attributes[u],i.r,i.g,i.b])})});const t=o?Oe(n,o):n,r=new ie;return r.functionName="Colormap",r.functionArguments={},r.functionArguments.Colormap=t,r.variableName="Raster",r}e.classBreakInfos.forEach((e,t)=>{const o=e.symbol&&e.symbol.color;o.a?(0===t?r.push(e.minValue,e.maxValue+s):r.push(e.minValue+s,e.maxValue+s),i.push(t),n.push([t,o.r,o.g,o.b])):a.push(e.minValue,e.maxValue)});const p=o?Oe(n,o):n,d=new ie;d.functionName="Remap",d.functionArguments={InputRanges:r,OutputValues:i,NoDataRanges:a},d.variableName="Raster";const m=new ie;return m.functionName="Colormap",m.functionArguments={Colormap:p,Raster:d},m}function Oe(e,t){const r=oe[String(t).toLowerCase()];return r&&e.push([Math.floor(r[0]-1),0,0,0],[Math.ceil(r[1]+1),0,0,0]),e}function je(e){if(!e)return;const{fields:t}=e,r=t&&t.find(e=>e&&e.name&&"value"===e.name.toLowerCase());return r&&r.name}function ve(e,t){const r=[],{pixelType:i,rasterAttributeTable:a}=t,n=a&&a.features,s=je(a);let o=!1;if(e.uniqueValueInfos&&e.uniqueValueInfos.forEach(t=>{const i=t.symbol.color;i.a&&(e.field!==s&&n?n&&n.forEach(a=>{String(a.attributes[e.field])===String(t.value)&&r.push([a.attributes[s],i.r,i.g,i.b])}):isNaN(+t.value)?o=!0:r.push([+t.value,i.r,i.g,i.b]))}),o)return null;const l=i&&r.length>0?Oe(r,i):r,c=new ie;return c.functionName="Colormap",c.functionArguments={},c.functionArguments.Colormap=l,c.variableName="Raster",c}function Re(e,t){const r=e.extractColormap();if(!r||0===r.length)return;const{pixelType:i}=t,a=i?Oe(r,i):r,n=new ie;return n.functionName="Colormap",n.functionArguments={},n.functionArguments.Colormap=a,n}function we(e){const t=[];return e.forEach(e=>{const r=e;if(Array.isArray(r))t.push(r);else{if(null==r.min||null==r.max)return;const e=[r.min,r.max,r.avg||0,r.stddev||0];t.push(e)}}),t}var xe,Se=r("1a3e");const Ie=Object(I["b"])()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),Ne=Object(I["b"])()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});function Te(e){let t;switch(e?e.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":t="esriMosaicAttribute";break;case"lockraster":t="esriMosaicLockRaster";break;case"center":t="esriMosaicCenter";break;case"northwest":t="esriMosaicNorthwest";break;case"nadir":t="esriMosaicNadir";break;case"viewpoint":t="esriMosaicViewpoint";break;case"seamline":t="esriMosaicSeamline";break;case"none":default:t="esriMosaicNone"}return Ne.fromJSON(t)}let _e=xe=class extends H["a"]{constructor(e){super(e),this.ascending=!0,this.itemRenderingRule=null,this.lockRasterIds=null,this.method=null,this.multidimensionalDefinition=null,this.objectIds=null,this.operation=null,this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(e,t){return null!=t.ascending?t.ascending:null==t.sortAscending||t.sortAscending}readMethod(e,t){return Te(t.mosaicMethod||t.defaultMosaicMethod)}readOperation(e,t){const r=t.mosaicOperation,i=t.mosaicOperator&&t.mosaicOperator.toLowerCase(),a=r||(i?Ie.toJSON(i):null);return Ie.fromJSON(a)||"first"}castSortValue(e){return null==e||"string"==typeof e||"number"==typeof e?e:""+e}clone(){return new xe({ascending:this.ascending,itemRenderingRule:Object(x["a"])(this.itemRenderingRule),lockRasterIds:Object(x["a"])(this.lockRasterIds),method:this.method,multidimensionalDefinition:Object(x["a"])(this.multidimensionalDefinition),objectIds:Object(x["a"])(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:Object(x["a"])(this.viewpoint),where:this.where})}};Object(a["a"])([Object(l["b"])({type:Boolean,json:{write:!0}})],_e.prototype,"ascending",void 0),Object(a["a"])([Object(N["a"])("ascending",["ascending","sortAscending"])],_e.prototype,"readAscending",null),Object(a["a"])([Object(l["b"])({type:ie,json:{write:!0}})],_e.prototype,"itemRenderingRule",void 0),Object(a["a"])([Object(l["b"])({type:[o["a"]],json:{write:{overridePolicy(){return{enabled:"lock-raster"===this.method}}}}})],_e.prototype,"lockRasterIds",void 0),Object(a["a"])([Object(l["b"])({type:String,json:{type:Ne.jsonValues,write:{target:"mosaicMethod",writer:Ne.write}}})],_e.prototype,"method",void 0),Object(a["a"])([Object(N["a"])("method",["mosaicMethod","defaultMosaicMethod"])],_e.prototype,"readMethod",null),Object(a["a"])([Object(l["b"])({type:[Q["a"]],json:{write:!0}})],_e.prototype,"multidimensionalDefinition",void 0),Object(a["a"])([Object(l["b"])({type:[o["a"]],json:{name:"fids",write:!0}})],_e.prototype,"objectIds",void 0),Object(a["a"])([Object(l["b"])({json:{type:Ie.jsonValues,read:{reader:Ie.read},write:{target:"mosaicOperation",writer:Ie.write}}})],_e.prototype,"operation",void 0),Object(a["a"])([Object(N["a"])("operation",["mosaicOperation","mosaicOperator"])],_e.prototype,"readOperation",null),Object(a["a"])([Object(l["b"])({type:String,json:{write:{overridePolicy(){return{enabled:"attribute"===this.method}}}}})],_e.prototype,"sortField",void 0),Object(a["a"])([Object(l["b"])({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:"attribute"===this.method,allowNull:!0}}}}})],_e.prototype,"sortValue",void 0),Object(a["a"])([Object(Se["a"])("sortValue")],_e.prototype,"castSortValue",null),Object(a["a"])([Object(l["b"])({type:C["a"],json:{write:!0}})],_e.prototype,"viewpoint",void 0),Object(a["a"])([Object(l["b"])({type:String,json:{write:!0}})],_e.prototype,"where",void 0),_e=xe=Object(a["a"])([Object(c["a"])("esri.layers.support.MosaicRule")],_e);var Pe=_e,Ce=Pe;const Fe=new I["a"]({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"}),De=new I["a"]({esriNoDataMatchAny:"any",esriNoDataMatchAll:"all"});let Ae=class extends H["a"]{constructor(){super(...arguments),this.layer=null,this.adjustAspectRatio=void 0,this.bandIds=void 0,this.compression=void 0,this.compressionQuality=void 0,this.compressionTolerance=.01,this.format=null,this.interpolation=null,this.noData=null,this.noDataInterpretation=void 0,this.pixelType=void 0,this.lercVersion=2}writeAdjustAspectRatio(e,t,r){this.layer.version<10.3||(t[r]=e)}writeCompressionQuality(e,t,r){this.format&&this.format.toLowerCase().indexOf("jpg")>-1&&null!=e&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}writeLercVersion(e,t,r){"lerc"===this.format&&this.layer.version>=10.5&&(t[r]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("renderingRule"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("renderer"),e.commitProperty("definitionExpression"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let t=e.mosaicRule;const r=e.definitionExpression;return t?r&&r!==t.where&&(t=t.clone(),t.where=r):r&&(t=new Ce({where:r})),t}get renderingRule(){const e=this.layer;let t=e.renderingRule;const r=e.pixelFilter,i=!e.format||e.format.indexOf("jpg")>-1||e.format.indexOf("png")>-1;return t=this._addResampleRasterFunction(t),i&&!r&&(t=this.combineRendererWithRenderingRule()),t}combineRendererWithRenderingRule(){var e;const t=this.layer,{rasterInfo:r,renderingRule:i,renderer:a}=t;return a&&ue(a)?pe(de(a,{rasterAttributeTable:r.attributeTable,pixelType:r.pixelType,dataType:r.dataType,bandProperties:null==(e=r.keyProperties)?void 0:e.BandProperties,convertColorRampToColormap:t.version<10.6}),i):i}_addResampleRasterFunction(e){var t;if("vector-field"!==(null==(t=this.layer.renderer)?void 0:t.type)||"Resample"===(null==e?void 0:e.functionName))return e;const r="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10,i=new ie({functionName:"Resample",functionArguments:{ResamplingType:r,InputCellSize:{x:this.layer.pixelSizeX,y:this.layer.pixelSizeY}}});return pe(i,e)}};Object(a["a"])([Object(l["b"])()],Ae.prototype,"layer",void 0),Object(a["a"])([Object(l["b"])({json:{write:!0}})],Ae.prototype,"adjustAspectRatio",void 0),Object(a["a"])([Object(u["a"])("adjustAspectRatio")],Ae.prototype,"writeAdjustAspectRatio",null),Object(a["a"])([Object(l["b"])({json:{write:!0}}),Object(S["a"])("layer.bandIds")],Ae.prototype,"bandIds",void 0),Object(a["a"])([Object(l["b"])({json:{write:!0}})],Ae.prototype,"compression",void 0),Object(a["a"])([Object(l["b"])({json:{write:!0}}),Object(S["a"])("layer.compressionQuality")],Ae.prototype,"compressionQuality",void 0),Object(a["a"])([Object(u["a"])("compressionQuality")],Ae.prototype,"writeCompressionQuality",null),Object(a["a"])([Object(l["b"])({json:{write:!0}}),Object(S["a"])("layer.compressionTolerance")],Ae.prototype,"compressionTolerance",void 0),Object(a["a"])([Object(u["a"])("compressionTolerance")],Ae.prototype,"writeCompressionTolerance",null),Object(a["a"])([Object(l["b"])({json:{write:!0}}),Object(S["a"])("layer.format")],Ae.prototype,"format",void 0),Object(a["a"])([Object(l["b"])({type:String,json:{read:{reader:Fe.read},write:{writer:Fe.write}}}),Object(S["a"])("layer.interpolation")],Ae.prototype,"interpolation",void 0),Object(a["a"])([Object(l["b"])({json:{write:!0}}),Object(S["a"])("layer.noData")],Ae.prototype,"noData",void 0),Object(a["a"])([Object(l["b"])({type:String,json:{read:{reader:De.read},write:{writer:De.write}}}),Object(S["a"])("layer.noDataInterpretation")],Ae.prototype,"noDataInterpretation",void 0),Object(a["a"])([Object(l["b"])({json:{write:!0}})],Ae.prototype,"pixelType",void 0),Object(a["a"])([Object(l["b"])({json:{write:!0}})],Ae.prototype,"lercVersion",void 0),Object(a["a"])([Object(u["a"])("lercVersion")],Ae.prototype,"writeLercVersion",null),Object(a["a"])([Object(l["b"])({type:Number})],Ae.prototype,"version",null),Object(a["a"])([Object(l["b"])({json:{write:!0}})],Ae.prototype,"mosaicRule",null),Object(a["a"])([Object(l["b"])({json:{write:!0}})],Ae.prototype,"renderingRule",null),Ae=Object(a["a"])([Object(c["a"])("esri.layers.mixins.ExportImageServiceParameters")],Ae);var Me=r("a4f3"),Ve=r("da6b"),Je=r("1451"),ze=r("1ccd"),ke=r("7220"),Le=r("a8d5"),Ee=r("bb72");let qe=class extends H["a"]{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};Object(a["a"])([Object(l["b"])({json:{write:!0}})],qe.prototype,"catalogItemVisibilities",void 0),Object(a["a"])([Object(l["b"])({type:E["default"],json:{write:!0}})],qe.prototype,"catalogItems",void 0),Object(a["a"])([Object(l["b"])({type:C["a"],json:{write:!0}})],qe.prototype,"location",void 0),Object(a["a"])([Object(l["b"])({json:{write:!0}})],qe.prototype,"name",void 0),Object(a["a"])([Object(l["b"])({json:{write:!0}})],qe.prototype,"objectId",void 0),Object(a["a"])([Object(l["b"])({json:{write:!0}})],qe.prototype,"processedValues",void 0),Object(a["a"])([Object(l["b"])({json:{write:!0}})],qe.prototype,"properties",void 0),Object(a["a"])([Object(l["b"])({json:{write:!0}})],qe.prototype,"value",void 0),qe=Object(a["a"])([Object(c["a"])("esri.tasks.support.ImageIdentifyResult")],qe);var Ue=qe,Qe=Ue;function Be(e){const t=null==e?void 0:e.time;if(t&&(null!=t.start||null!=t.end)){const r=[];null!=t.start&&r.push(t.start),null!=t.end&&-1===r.indexOf(t.end)&&r.push(t.end),e.time=r.join(",")}}async function He(e,t,r){const i=Object(Ee["c"])(e),a=t.geometry?[t.geometry]:[],s=await Object(Le["a"])(a),o=t.toJSON();Be(o);const l=s&&s[0];Object(n["k"])(l)&&(o.geometry=l.toJSON());const c=Object(Ee["b"])({...i.query,f:"json",...o});return Object(Ee["a"])(c,r)}async function Ge(e,t,r){const i=await He(e,t,r),a=Object(Ee["c"])(e),{data:n}=await Object(M["default"])(a.path+"/computeStatisticsHistograms",i),{statistics:s}=n;return null!=s&&s.length&&s.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),{statistics:s,histograms:n.histograms}}async function We(e,t,r){const i=await He(e,t,r),a=Object(Ee["c"])(e),{data:n}=await Object(M["default"])(a.path+"/computeHistograms",i);return{histograms:n.histograms}}async function Xe(e,t,r){const i=Object(Ee["c"])(e),a=t.geometry?[t.geometry]:[];return Object(Le["a"])(a).then(e=>{const a=t.toJSON(),s=e&&e[0];Object(n["k"])(s)&&(a.geometry=JSON.stringify(s.toJSON()));const o=Object(Ee["b"])({...i.query,f:"json",...a}),l=Object(Ee["a"])(o,r);return Object(M["default"])(i.path+"/identify",l)}).then(e=>Qe.fromJSON(e.data))}var Ye=r("9209");let Ke=class extends Ye["a"]{execute(e,t){return Xe(this.url,e,t)}};Ke=Object(a["a"])([Object(c["a"])("esri.tasks.ImageIdentifyTask")],Ke);var $e,Ze=Ke,et=Ze,tt=r("a9ab"),rt=r("658b");let it=$e=class extends H["a"]{constructor(){super(...arguments),this.geometry=null,this.mosaicRule=null,this.renderingRule=null,this.pixelSize=null,this.raster=void 0,this.timeExtent=null}writeGeometry(e,t,r){null!=e&&(t.geometryType=Object(tt["c"])(e),t[r]=e.toJSON())}clone(){return new $e(Object(x["a"])({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,raster:this.raster,timeExtent:this.timeExtent}))}};Object(a["a"])([Object(l["b"])({types:A["a"],json:{read:tt["a"]}})],it.prototype,"geometry",void 0),Object(a["a"])([Object(u["a"])("geometry")],it.prototype,"writeGeometry",null),Object(a["a"])([Object(l["b"])({type:Ce,json:{write:!0}})],it.prototype,"mosaicRule",void 0),Object(a["a"])([Object(l["b"])({type:ie,json:{write:!0}})],it.prototype,"renderingRule",void 0),Object(a["a"])([Object(l["b"])({type:C["a"],json:{write:!0}})],it.prototype,"pixelSize",void 0),Object(a["a"])([Object(l["b"])({json:{write:!0}})],it.prototype,"raster",void 0),Object(a["a"])([Object(l["b"])({type:rt["a"],json:{read:{source:"time"},write:{target:"time"}}})],it.prototype,"timeExtent",void 0),it=$e=Object(a["a"])([Object(c["a"])("esri.tasks.support.ImageHistogramParameters")],it);var at,nt=it,st=nt;let ot=at=class extends H["a"]{constructor(){super(...arguments),this.geometry=null,this.renderingRules=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0}writeGeometry(e,t,r){null!=e&&(t.geometryType=Object(tt["c"])(e),t[r]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=Ce.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}writeMosaicRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=ie.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}writeRenderingRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))}writeRenderingRules(e,t,r){null!=e&&(t[r]=JSON.stringify(e.map(e=>e.toJSON())))}writePixelSize(e,t,r){null!=e&&(t[r]=JSON.stringify(e))}writeTimeExtent(e,t,r){if(null!=e){const i=e.start?e.start.getTime():null,a=e.end?e.end.getTime():null;t[r]=null!=i?null!=a?`${i},${a}`:""+i:null}}clone(){return new at(Object(x["a"])({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};Object(a["a"])([Object(l["b"])({json:{write:!0}})],ot.prototype,"geometry",void 0),Object(a["a"])([Object(u["a"])("geometry")],ot.prototype,"writeGeometry",null),Object(a["a"])([Object(l["b"])({type:Ce,json:{write:!0}})],ot.prototype,"mosaicRule",null),Object(a["a"])([Object(u["a"])("mosaicRule")],ot.prototype,"writeMosaicRule",null),Object(a["a"])([Object(l["b"])({type:ie,json:{write:!0}})],ot.prototype,"renderingRule",null),Object(a["a"])([Object(u["a"])("renderingRule")],ot.prototype,"writeRenderingRule",null),Object(a["a"])([Object(l["b"])({type:[ie],json:{write:!0}})],ot.prototype,"renderingRules",void 0),Object(a["a"])([Object(u["a"])("renderingRules")],ot.prototype,"writeRenderingRules",null),Object(a["a"])([Object(l["b"])({type:C["a"],json:{write:!0}})],ot.prototype,"pixelSize",void 0),Object(a["a"])([Object(u["a"])("pixelSize")],ot.prototype,"writePixelSize",null),Object(a["a"])([Object(l["b"])({type:Boolean,json:{write:!0}})],ot.prototype,"returnGeometry",void 0),Object(a["a"])([Object(l["b"])({type:Boolean,json:{write:!0}})],ot.prototype,"returnCatalogItems",void 0),Object(a["a"])([Object(l["b"])({type:Boolean,json:{write:!0}})],ot.prototype,"returnPixelValues",void 0),Object(a["a"])([Object(l["b"])({type:Number,json:{write:!0}})],ot.prototype,"maxItemCount",void 0),Object(a["a"])([Object(l["b"])({type:rt["a"],json:{write:{target:"time"}}})],ot.prototype,"timeExtent",void 0),Object(a["a"])([Object(u["a"])("timeExtent")],ot.prototype,"writeTimeExtent",null),Object(a["a"])([Object(l["b"])({json:{write:!0}})],ot.prototype,"raster",void 0),Object(a["a"])([Object(l["b"])({json:{write:!0}})],ot.prototype,"viewId",void 0),ot=at=Object(a["a"])([Object(c["a"])("esri.tasks.support.ImageIdentifyParameters")],ot);var lt=ot,ct=lt;const ut=s["a"].getLogger("esri.layers.mixins.ArcGISImageService"),pt=Object(I["b"])()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"}),dt=Object(I["b"])()({esriNoDataMatchAny:"any",esriNoDataMatchAll:"all"}),mt=Object(I["b"])()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),bt=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),ht=Object(l["a"])(o["i"],{min:0,max:255});function yt(e){if(!e)return null;const t=JSON.stringify(e).match(/"rasterFunction":"(.*?")/gi),r=null==t?void 0:t.map(e=>e.replace('"rasterFunction":"',"").replace('"',""));return r?r.join("/"):null}const ft=e=>{let t=class extends e{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._symbolizer=null,this._defaultServiceMosaicRule=null,this.rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandCount=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.pixelSizeX=null,this.pixelSizeY=null,this.pixelFilter=null,this.raster=void 0,this.viewId=void 0,this.renderer=null,this.rasterAttributeTable=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=null}initialize(){this._set("exportImageServiceParameters",new Ae({layer:this}))}readDefaultServiceMosaicRule(e,t){return Ce.fromJSON(t)}get rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||this.rasterFunctionInfos.length<1||this.rasterFunctionInfos.forEach(t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)}),e}get queryTask(){return new U["a"]({url:this.url})}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every(e=>"number"==typeof e))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,r){null!=e&&"lerc"!==this.format&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}get fieldsIndex(){return this.fields?new L["a"](this.fields):null}set format(e){e&&bt.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=Ce.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){return Ce.fromJSON(e||t.mosaicRule||t)}writeMosaicRule(e,t,r){let i=this.mosaicRule;const a=this.definitionExpression;i?a&&a!==i.where&&(i=i.clone(),i.where=a):a&&(i=new Ce({where:a})),this._isValidCustomizedMosaicRule(i)&&(t[r]=i.toJSON())}writeNoData(e,t,r){null!=e&&"number"==typeof e&&(t[r]=ht(e))}readObjectIdField(e,t){if(!e){const r=t.fields.filter(e=>"esriFieldTypeOID"===e.type||"oid"===e.type);e=r&&r[0]&&r[0].name}return e}get parsedUrl(){return this.url?Object(p["J"])(this.url):null}readRenderer(e,t,r){var i,a;const n=null==t||null==(i=t.layerDefinition)||null==(a=i.drawingInfo)?void 0:a.renderer,s=Object(z["b"])(n,r);return null==s?null:("vector-field"===s.type&&t.symbolTileSize&&!n.symbolTileSize&&(s.symbolTileSize=t.symbolTileSize),ue(s)||ut.warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),s)}writeRenderer(e,t,r){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this.rasterAttributeTableFieldPrefix||"Raster.",t=new k["a"]({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),r=new k["a"]({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=new k["a"]({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let a=this.fields?Object(x["a"])(this.fields):[];a.push(r),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&a.push(t),this.version>=10.4&&this.rasterFunctionInfos&&this.rasterFunctionInfos.some(e=>"none"===e.name.toLowerCase())&&a.push(i),this.rasterFunctionInfos&&this.rasterFunctionInfos.filter(e=>"none"!==e.name.toLowerCase()).forEach(e=>{a.push(new k["a"]({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))}),null==this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType||(a.push(new k["a"]({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),a.push(new k["a"]({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const n=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null;if(n&&n.length>0){const t=n.filter(e=>"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase()).map(t=>{const r=Object(x["a"])(t);return r.name=e+t.name,r});a=a.concat(t)}return a}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=ie.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}readRenderingRule(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||r&&r.length&&"None"!==r[0].name?ie.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,r){this._isRFTJson(e)||(t[r]=e.toJSON())}readSpatialReference(e,t){const r=e||t.extent.spatialReference;return r?P["a"].fromJSON(r):null}readPixelType(e){return mt.fromJSON(e)||e}writePixelType(e,t,r){(Object(n["j"])(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[r]=mt.toJSON(e))}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let r=e;if(!this._isPicture()&&this.renderer&&this._symbolizer&&!this.pixelFilter){const i=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON()),a=this._rasterJobHandler.instance,{bandIds:n}=this;if(a){i&&(this._symbolizer.bind(),await a.updateSymbolizer(this._symbolizer,t),this._cachedRendererJson=this.renderer.toJSON());const s=await a.symbolize({bandIds:n,...e},t);r={extent:e.extent,pixelBlock:s}}else r={extent:e.extent,pixelBlock:this._symbolizer.symbolize({bandIds:n,...e})}}return r}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeHistograms(e,t){const r=null==t?void 0:t.signal;if(await this._fetchCapabilities(r),!this.capabilities.operations.supportsComputeHistograms)throw new T["a"]("imagery-layer:compute-histograms","this operation is not supported on the input image service");e=Object(o["d"])(st,e).clone();const{raster:i,mosaicRule:a,renderingRule:n}=this;return n&&null==e.renderingRule&&(e.renderingRule=n),a&&null==e.mosaicRule&&(e.mosaicRule=a),i&&null==e.raster&&(e.raster=i),We(this.url,e,{signal:r})}async computeStatisticsHistograms(e,t){const r=null==t?void 0:t.signal;if(await this._fetchCapabilities(r),!this.capabilities.operations.supportsComputeStatisticsHistograms)throw new T["a"]("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");e=Object(o["d"])(st,e).clone();const{raster:i,mosaicRule:a,renderingRule:n}=this;return n&&null==e.renderingRule&&(e.renderingRule=n),a&&null==e.mosaicRule&&(e.mosaicRule=a),i&&null==e.raster&&(e.raster=i),Ge(this.url,e,{signal:r})}fetchImage(e,t,r,i={}){if(null==e||null==t||null==r)return Promise.reject(new T["a"]("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));const a=this.renderer||this._symbolizer?this.generateRasterInfo(this.renderingRule,{signal:i.signal}):null;return Object(_["w"])(a).then(a=>{a&&(this.rasterInfo=a);const n={imageServiceParameters:this.getExportImageServiceParameters(e,t,r,i.timeExtent),imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:i.requestAsImageElement&&!this.pixelFilter||!1,signal:i.signal};return this._requestArrayBuffer(n)})}fetchKeyProperties(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return Object(M["default"])(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then(e=>e.data)}fetchRasterAttributeTable(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return this.version<10.1?Promise.reject(new T["a"]("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):Object(M["default"])(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then(e=>E["default"].fromJSON(e.data))}async getCatalogItemRasterInfo(e,t){const r=Object(M["default"])(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t}).then(e=>e.data),i=Object(M["default"])(this.parsedUrl.path+"/"+e+"/info/keyProperties",{query:this._getQueryParams(),...t}).then(e=>e.data).catch(()=>{}),a=await Promise.all([r,i]);if(!a[0])return;const n=F["a"].fromJSON(a[0].extent),s=a[0].statistics?a[0].statistics.map(e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]})):null;return new Me["a"]({bandCount:a[0].bandCount,extent:n,spatialReference:n.sr,pixelSize:new C["a"]({x:a[0].pixelSizeX,y:a[0].pixelSizeY,spatialReference:n.sr}),pixelType:a[0].pixelType.toLowerCase(),statistics:s,histograms:a[0].histograms,keyProperties:a[1]||{}})}async getCatalogItemICSInfo(e,t){const{data:r}=await Object(M["default"])(this.parsedUrl.path+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),i=r&&r.ics;if(!i)return;let a=null;try{a=(await Object(M["default"])(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!a||!a.spatialReference)return{ics:i,icsToPixelTransform:null,icsExtent:null,northDirection:null};const n=this.version>=10.7?Object(M["default"])(this.parsedUrl.path+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then(e=>e.data).catch(()=>({})):{},s=a.spatialReference,o={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[a]}),inSR:s.wkid||JSON.stringify(s),outSR:"0:"+e},l=Object(M["default"])(this.parsedUrl.path+"/project",{query:this._getQueryParams(o),...t}).then(e=>e.data).catch(()=>({})),c=5,u=(a.xmin+a.xmax)/2,p=(a.ymax-a.ymin)/(c+1),d=a.ymin+p,m=[];for(let P=0;P<c;P++)m.push({x:u,y:d+p*P});const b={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:m}),inSR:s.wkid||JSON.stringify(s),outSR:"0:"+e},h=Object(M["default"])(this.parsedUrl.path+"/project",{query:this._getQueryParams(b),...t}).then(e=>e.data).catch(()=>({})),y=await Promise.all([n,l,h]);let f=y[0].ipxf;if(null==f){var g,O,j;const e=null==(g=i.geodataXform)?void 0:g.xf_0;"topup"===(null==e||null==(O=e.name)?void 0:O.toLowerCase())&&6===(null==e||null==(j=e.coefficients)?void 0:j.length)&&(f={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const v=F["a"].fromJSON(y[1]&&y[1].geometries&&y[1].geometries[0]);v&&(v.spatialReference=new P["a"]({wkid:0,imageCoordinateSystem:i}));const R=y[2].geometries?y[2].geometries.filter(e=>null!=e&&null!=e.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y):[],w=R.length;if(w<3)return{ics:i,icsToPixelTransform:f,icsExtent:v,northDirection:null};let x=0,S=0,I=0,N=0;for(let P=0;P<w;P++)x+=R[P].x,S+=R[P].y,I+=R[P].x*R[P].x,N+=R[P].x*R[P].y;const T=(w*N-x*S)/(w*I-x*x);let _=0;const C=R[c-1].x>R[0].x,D=R[c-1].y>R[0].y;return T===1/0?_=D?90:270:0===T?_=C?0:180:T>0?_=C?180*Math.atan(T)/Math.PI:180*Math.atan(T)/Math.PI+180:T<0&&(_=D?180+180*Math.atan(T)/Math.PI:360+180*Math.atan(T)/Math.PI),{ics:i,icsToPixelTransform:f,icsExtent:v,northDirection:_}}async generateRasterInfo(e,t){if((!e||"none"===e.functionName.toLowerCase()||this._isVectorFieldResampleFunction(e))&&Object(n["k"])(this.serviceRasterInfo))return this.serviceRasterInfo;const r=yt(e);if(this._functionRasterInfos[r])return this._functionRasterInfos[r];const i=this._generateRasterInfo(e,t);this._functionRasterInfos[r]=i;try{return await i}catch{return this._functionRasterInfos[r]=null,null}}getExportImageServiceParameters(e,t,r,i){const a=(e=e.clone().shiftCentralMeridian()).spatialReference;let s;if(a.imageCoordinateSystem){const{id:e,referenceServiceName:t}=a.imageCoordinateSystem;s=null!=e?t?this.parsedUrl.path.toLowerCase().indexOf("/"+t.toLowerCase()+"/")>-1?"0:"+e:JSON.stringify({icsid:e,icsns:t}):"0:"+e:JSON.stringify({ics:a.imageCoordinateSystem})}else s=a.wkid||JSON.stringify(a.toJSON());Object(n["k"])(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const o=this.exportImageServiceParameters.toJSON(),{bandIds:l,noData:c,mosaicRule:u}=o;let{renderingRule:p}=o;if(l instanceof Array&&l.length>0&&!this.renderingRule?o.bandIds=l.join(","):o.bandIds=void 0,null!=l&&l.length&&this.renderingRule)if("Colormap"===p.rasterFunction){const e=new ie({functionName:"ExtractBand",functionArguments:{BandIds:l,raster:p.rasterFunctionArguments.Raster}});p.rasterFunctionArguments.Raster=e}else p=new ie({functionName:"ExtractBand",functionArguments:{BandIds:l,raster:p}});c instanceof Array&&c.length>0&&(o.noData=c.join(","));const d=this.timeInfo;u&&u.multidimensionalDefinition&&i&&d&&d.startField&&(u.multidimensionalDefinition=u.multidimensionalDefinition.filter(e=>e.dimensionName!==d.startField)),o.mosaicRule=u&&JSON.stringify(u),o.renderingRule=p&&JSON.stringify(p);const m={};if(i){const{start:e,end:t}=i.toJSON();e&&t&&e===t?m.time=""+e:null==e&&null==t||(m.time=`${null==e?"null":e},${null==t?"null":t}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:s,imageSR:s,size:t+","+r,...o,...m}}async identify(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsIdentify)throw new T["a"]("imagery-layer:query-rasters","query operation is not supported on the input image service");e=Object(o["d"])(ct,e).clone();const{raster:r,mosaicRule:i,renderingRule:a}=this;return a&&null==e.renderingRule&&(e.renderingRule=a),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),new et({url:this.url}).execute(e,t)}async queryRasters(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsQuery)throw new T["a"]("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=Object(o["d"])(q["a"],e),this.queryTask.execute(e,t)}queryVisibleRasters(e,t){if(!e)return Promise.reject(new T["a"]("imagery-layer: query-visible-rasters","missing query parameter"));const{pixelSize:r,returnDomainValues:i,returnTopmostRaster:a,showNoDataRecords:s}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let o=!1,l=null,c=null;const u="raster.servicepixelvalue",p=this.rasterFunctionNamesIndex;if(Object(n["k"])(e.outFields)&&(o=e.outFields.some(e=>-1===e.toLowerCase().indexOf(u)),this.version>=10.4)){const t=e.outFields.filter(e=>e.toLowerCase().indexOf(u)>-1&&e.length>u.length).map(e=>{const t=e.slice(u.length+1);return[this._updateRenderingRulesFunctionName(t,p),t]});l=t.map(e=>new ie({functionName:e[0]})),c=t.map(e=>e[1]),0===l.length?this.renderingRule?(l.push(this.renderingRule),c.push(this.renderingRule.functionName)):l=null:this.renderingRule&&!l.some(e=>e.functionName===this.renderingRule.functionName)&&(l.push(this.renderingRule),c.push(this.renderingRule.functionName))}const d=Object(n["j"])(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),m=this._getQueryParams({geometry:e.geometry,timeExtent:e.timeExtent,mosaicRule:this.exportImageServiceParameters.mosaicRule,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:l,pixelSize:r,returnCatalogItems:o,returnGeometry:d,maxItemCount:a?1:null});delete m.f;const b=new ct(m),h=new et({url:this.url}),y=this.generateRasterInfo(this.renderingRule);return new Promise(t=>{y.then(()=>{h.execute(b).then(r=>{const a=e.outFields;if(o&&!d&&r.catalogItems&&r.catalogItems.features&&r.catalogItems.features.length>0){const n=this.objectIdField||"ObjectId",o=r.catalogItems.features,l=o.map(e=>e.attributes&&e.attributes[n]),u=new q["a"]({objectIds:l,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[n]});return this.queryRasters(u).then(l=>{l&&l.features&&l.features.length>0&&l.features.forEach(t=>{o.forEach(r=>{r.attributes[n]===t.attributes[n]&&(r.geometry=new D["a"](t.geometry),r.geometry.spatialReference=e.outSpatialReference)})}),t(this._processVisibleRastersResponse(r,{returnDomainValues:i,templateRRFunctionNames:c,showNoDataRecords:s,templateFields:a}))}).catch(()=>{throw new T["a"]("imagery-layer:query-visible-rasters","encountered error when querying visible rasters geometry")})}t(this._processVisibleRastersResponse(r,{returnDomainValues:i,templateRRFunctionNames:c,showNoDataRecords:s,templateFields:a}))}).catch(()=>{throw new T["a"]("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")})})})}async fetchVariableStatisticsHistograms(e,t){const r=Object(M["default"])(this.parsedUrl.path+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then(e=>{var t;return null==(t=e.data)?void 0:t.statistics}),i=Object(M["default"])(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then(e=>{var t;return null==(t=e.data)?void 0:t.histograms}),a=await Promise.all([r,i]);return a[0]&&a[0].forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),{statistics:a[0]||null,histograms:a[1]||null}}async _fetchService(e){await this._fetchServiceInfo(e),Object(n["k"])(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=Object(n["k"])(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):this._fetchAuxiliaryRasterInfo({serviceInfo:t,signal:e}).then(e=>(this._set("serviceRasterInfo",e),e)),i=this.renderingRule&&"none"!==this.renderingRule.functionName.toLowerCase()?this.generateRasterInfo(this.renderingRule,{signal:e}):null;return Promise.all([r,i]).then(e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),this.renderer&&Object(ze["d"])(this.rasterInfo).indexOf(this.renderer.type)<0&&(this.renderer=null,ut.warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._configDefaultRenderer(),this.watch("renderer",()=>this._configDefaultRenderer()),this.watch("renderingRule",e=>{(this.renderer||this._symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(e).then(e=>{e&&(this.rasterInfo=e)})});const t=Object(n["k"])(this.serviceRasterInfo)&&this.serviceRasterInfo.multidimensionalInfo;t&&this._updateMultidimensionalDefinition(t)})}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new Ve["a"];this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e},()=>null),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var t;let r=this.sourceJSON;if(!r){const{data:t,ssl:i}=await Object(M["default"])(this.parsedUrl.path,{query:this._getQueryParams(),signal:e});r=t,this.sourceJSON=r,i&&(this.url=this.url.replace(/^http:/i,"https:"))}if((null==(t=r.capabilities)?void 0:t.toLowerCase().split(",").map(e=>e.trim()).indexOf("tilesonly"))>-1)throw new T["a"]("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(r,{origin:"service",url:this.parsedUrl})}_isVectorFieldResampleFunction(e){if(!Object(n["k"])(e))return!1;const{functionName:t,functionArguments:r}=e,i="resample"===t.toLowerCase(),a=(null==r?void 0:r.ResampleType)||(null==r?void 0:r.resampleType);return i&&(7===a||10===a)}_isPicture(){return!this.format||this.format.indexOf("jpg")>-1||this.format.indexOf("png")>-1}_configDefaultRenderer(){if(!this._isPicture()&&!this.pixelFilter){if(!this.bandIds&&this.rasterInfo.bandCount>=3){const e=Object(ze["b"])(this.rasterInfo);!e||3===this.rasterInfo.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}var e,t;this.renderer||(this.renderer=Object(ze["a"])(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null==(e=this.mosaicRule)||null==(t=e.multidimensionalDefinition)?void 0:t[0].variableName})),this._symbolizer?(this._symbolizer.rendererJSON=Object(ze["e"])(this.renderer.toJSON()),this._symbolizer.rasterInfo=this.rasterInfo):this._symbolizer=new ke["a"]({rendererJSON:this.renderer.toJSON(),rasterInfo:this.rasterInfo}),this._symbolizer.bind()||(this._symbolizer=null)}}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:e.pixelBlock&&e.pixelBlock.clone()}}_getQueryParams(e){const{raster:t,viewId:r}=this;return{raster:t,viewId:r,f:"json",...e}}_decodePixelBlock(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):Object(Je["a"])(e,t,r)}async _fetchMultidimensionalInfo(e){var t;const r=await Object(M["default"])(this.parsedUrl.path+"/multidimensionalInfo",{query:this._getQueryParams(),signal:e}).then(e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo});return null!=(t=r.variables)&&t.length&&r.variables.forEach(e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation})}),r}_fetchAuxiliaryRasterInfo(e){const t=e&&e.serviceInfo;if(!t)return Promise.reject(new T["a"]("imagery-layer:fetch-metadata","valid serviceInfo is required"));const r=e.renderingRule?JSON.stringify(e.renderingRule.toJSON()):null,i=e.signal,a=!!(t.hasRasterAttributeTable&&this.version>=10.1)&&Object(M["default"])(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then(e=>E["default"].fromJSON(e.data)).catch(()=>null),n=!!(t.hasColormap&&this.version>=10.1)&&Object(M["default"])(this.parsedUrl.path+"/colormap",{query:this._getQueryParams({renderingRule:this.version>=10.6?r:null}),signal:i}).then(e=>{var t;return null==(t=e.data)?void 0:t.colormap}),s=!!(t.hasHistograms&&this.version>=10.1)&&Object(M["default"])(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then(e=>{var t;return null==(t=e.data)?void 0:t.histograms}),o=this.version>=10.3&&Object(M["default"])(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:r}),signal:i}).then(e=>e.data).catch(()=>{}),l=!!(t.hasMultidimensions&&this.version>=10.3)&&this._fetchMultidimensionalInfo();return Promise.all([a,n,s,o,l]).then(e=>{let r=null;if(t.minValues&&t.minValues.length===t.bandCount){r=[];for(let e=0;e<t.minValues.length;e++)r.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}const i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),a=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),n=P["a"].fromJSON(t.spatialReference||t.extent.spatialReference);return new Me["a"]({width:i,height:a,bandCount:t.bandCount,extent:F["a"].fromJSON(t.extent),spatialReference:n,pixelSize:new C["a"]({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n}),pixelType:t.pixelType.toLowerCase(),statistics:r,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})})}_requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:r,signal:i}=e;if(r&&!this.pixelFilter&&t.format&&t.format.indexOf("png")>-1)return Object(M["default"])(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:i}).then(e=>({imageElement:e.data,params:t}));const a=this._initJobHandler(),n=Object(M["default"])(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:i});return Promise.all([n,a]).then(e=>{const r=e[0].data,a=t.format||"jpgpng";let n=a;if("bsq"!==n&&"bip"!==n&&(n=Object(Je["b"])(r)),!n)throw new T["a"]("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(r)));const s="gif"===a||"bmp"===a||a.indexOf("png")>-1&&("png"===n||"jpg"===n),o={signal:i};return s?Object(Je["a"])(r,{useCanvas:!0,...t},o).then(e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t})):this._decodePixelBlock(r,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:a},o).then(e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t}))})}async _generateRasterInfo(e,t){const{data:r}=await Object(M["default"])(this.parsedUrl.path,{query:this._getQueryParams({renderingRule:e}),...t});return await this._fetchAuxiliaryRasterInfo({serviceInfo:r,renderingRule:e,...t})}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this._defaultServiceMosaicRule&&this._defaultServiceMosaicRule.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=e.variables[0].dimensions,r="",i=[];for(const a in t)if(t.hasOwnProperty(a)){const e=t[a],n=e.extent;let s=!0,o=[n[0]];e.hasRanges&&!0===e.hasRanges?(s=!1,o=[e.values[0]]):"stdz"===e.name.toLowerCase()&&Math.abs(n[1])<=Math.abs(n[0])&&(o=[n[1]]),i.push(new Q["a"]({variableName:r,dimensionName:t[a].name,isSlice:s,values:o}))}if(i.length>0){this.mosaicRule=this.mosaicRule||new Ce;const e=this.mosaicRule.multidimensionalDefinition;(!e||e&&e.length<=0)&&(this.mosaicRule.multidimensionalDefinition=i)}}_formatAttributeValue(e,t){if("string"==typeof e){const r=this.popupTemplate&&this.popupTemplate.fieldInfos,i=this._getFieldInfo(r,t),a=i&&i.format;if(a){let t,r;return e.trim().indexOf(",")>-1?(t=",",r=t+" ",this._formatDelimitedString(e,t,r,a)):e.trim().indexOf(" ")>-1?(t=r=" ",this._formatDelimitedString(e,t,r,a)):this._formatNumberFromString(e,a)}}return e}_getFieldInfo(e,t){if(!e||!e.length||!t)return;const r=t.toLowerCase();let i;return e.some(e=>!(!e.fieldName||e.fieldName.toLowerCase()!==r&&e.fieldName.toLowerCase()!==r.replace(/ /g,"_"))&&(i=e,!0)),i}_formatDelimitedString(e,t,r,i){return e&&t&&r&&i?e.trim().split(t).map(e=>this._formatNumberFromString(e,i)).join(r):e}_formatNumberFromString(e,t){if(!e||!t)return e;const r=Number(e);return isNaN(r)?e:t.format(r)}_processVisibleRastersResponse(e,t){t=t||{};const r=e.value,{templateRRFunctionNames:i,showNoDataRecords:a,returnDomainValues:s,templateFields:o}=t,l=e.processedValues;let c=e.catalogItems&&e.catalogItems.features,u=e.properties&&e.properties.Values&&e.properties.Values.map(e=>e.replace(/ /gi,", "))||[];const p=this.objectIdField||"ObjectId",d="string"==typeof r&&r.toLowerCase().indexOf("nodata")>-1,m=[];if(r&&!c&&!d){const e={};e[p]=0,u=[r],c=[new V["a"](this.fullExtent,null,e)]}if(!c)return[];let b,h,y;this._updateResponseFieldNames(c,o);for(let f=0;f<c.length;f++){if(b=c[f],null!=r&&!d){if(h=u[f],y=this.renderingRule&&l&&l.length>0&&i&&i.length>0&&i.indexOf(this.renderingRule.functionName)>-1?l[i.indexOf(this.renderingRule.functionName)]:r,"nodata"===h.toLowerCase()&&!a)continue;const e="Raster.ItemPixelValue",t="Raster.ServicePixelValue";b.attributes[e]=this._formatAttributeValue(h,e),b.attributes[t]=this._formatAttributeValue(y,t),this._updateFeatureWithMagDirValues(b,h);const s=this.fields&&this.fields.length>0;let o=this.renderingRule&&Object(n["k"])(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?s?h:r:y;this.renderingRule||(o=s?h:r),this._updateFeatureWithRasterAttributeTableValues(b,o)}if(b.sourceLayer=this,s&&this._updateFeatureWithDomainValues(b),i&&l&&i.length===l.length)for(let e=0;e<i.length;e++){const t="Raster.ServicePixelValue."+i[e];b.attributes[t]=this._formatAttributeValue(l[e],t)}m.push(c[f])}return m}_updateFeatureWithRasterAttributeTableValues(e,t){const r=this.rasterInfo&&this.rasterInfo.attributeTable||Object(n["k"])(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable,i=r&&r.features;if(!i)return;const a=r.fields,s=a.map(e=>e.name).filter(e=>"value"===e.toLowerCase()),o=s&&s[0];if(!o)return;const l=i.filter(e=>e.attributes[o]===(null!=t?parseInt(t,10):null));l&&l[0]&&a.forEach(t=>{const r=this.rasterAttributeTableFieldPrefix+t.name;e.attributes[r]=this._formatAttributeValue(l[0].attributes[t.name],r)})}_updateFeatureWithMagDirValues(e,t){if(!this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType)return;const r=t.replace(" ",",").split(",").map(e=>parseFloat(e)),i=r.map(e=>[e]),a=r.map(e=>({minValue:e,maxValue:e,noDataValue:null})),n=new J["a"]({height:1,width:1,pixelType:"f32",pixels:i,statistics:a});this.pixelFilter({pixelBlock:n,extent:new F["a"](0,0,0,0,this.spatialReference)}),e.attributes["Raster.Magnitude"]=n.pixels[0][0],e.attributes["Raster.Direction"]=n.pixels[1][0]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter(e=>e.domain&&"coded-value"===e.domain.type);null!=t&&t.forEach(t=>{const r=e.attributes[t.name];if(null!=r){const i=t.domain.codedValues.filter(e=>e.code===r)[0];i&&(e.attributes[t.name]=i.name)}})}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;r&&e.forEach(e=>{if(e&&e.attributes)for(const i of t)if(r.has(i)){const t=r.get(i).name;t!==i&&(e.attributes[i]=e.attributes[t],delete e.attributes[t])}})}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const r=e.toLowerCase().replace(/ /gi,"_");return t.has(r)?t.get(r):e}_isRFTJson(e){return e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map(e=>e.trim()):["image","catalog"],{currentVersion:r,advancedQueryCapabilities:i,maxRecordCount:a}=e,n=t.indexOf("image")>-1,s="esriImageServiceDataTypeElevation"===e.serviceDataType,o=!!(e.spatialReference||e.extent&&e.extent.spatialReference);return{operations:{supportsComputeHistograms:n,supportsExportImage:n,supportsIdentify:n,supportsMeasure:t.indexOf("mensuration")>-1&&o,supportsDownload:t.indexOf("download")>-1,supportsQuery:t.indexOf("catalog")>-1&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&n,supportsProject:r>=10.3&&n,supportsComputeStatisticsHistograms:r>=10.4&&n,supportsQueryBoundary:r>=10.6&&n,supportsCalculateVolume:r>=10.7&&s,supportsComputePixelLocation:r>=10.7&&t.indexOf("catalog")>-1},query:{supportsStatistics:!(!i||!i.supportsStatistics),supportsOrderBy:!(!i||!i.supportsOrderBy),supportsDistinct:!(!i||!i.supportsDistinct),supportsPagination:!(!i||!i.supportsPagination),supportsStandardizedQueriesOnly:!(!i||!i.useStandardizedQueries),maxRecordCount:a}}}};return Object(a["a"])([Object(l["b"])()],t.prototype,"_functionRasterInfos",void 0),Object(a["a"])([Object(l["b"])()],t.prototype,"_rasterJobHandler",void 0),Object(a["a"])([Object(l["b"])()],t.prototype,"_symbolizer",void 0),Object(a["a"])([Object(l["b"])()],t.prototype,"_defaultServiceMosaicRule",void 0),Object(a["a"])([Object(N["a"])("_defaultServiceMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultServiceMosaicRule",null),Object(a["a"])([Object(l["b"])()],t.prototype,"_cachedRendererJson",void 0),Object(a["a"])([Object(l["b"])()],t.prototype,"rasterAttributeTableFieldPrefix",void 0),Object(a["a"])([Object(l["b"])({readOnly:!0})],t.prototype,"rasterFunctionNamesIndex",null),Object(a["a"])([Object(l["b"])({readOnly:!0})],t.prototype,"queryTask",null),Object(a["a"])([Object(l["b"])()],t.prototype,"adjustAspectRatio",void 0),Object(a["a"])([Object(l["b"])({readOnly:!0}),Object(S["a"])("serviceRasterInfo.bandCount")],t.prototype,"bandCount",void 0),Object(a["a"])([Object(l["b"])({type:[o["a"]],json:{write:!0}})],t.prototype,"bandIds",void 0),Object(a["a"])([Object(N["a"])("bandIds")],t.prototype,"readBandIds",null),Object(a["a"])([Object(l["b"])({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),Object(a["a"])([Object(N["a"])("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),Object(a["a"])([Object(l["b"])({type:Number})],t.prototype,"compressionQuality",void 0),Object(a["a"])([Object(u["a"])("compressionQuality")],t.prototype,"writeCompressionQuality",null),Object(a["a"])([Object(l["b"])({type:Number})],t.prototype,"compressionTolerance",void 0),Object(a["a"])([Object(u["a"])("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),Object(a["a"])([Object(l["b"])({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),Object(a["a"])([Object(l["b"])({type:String,json:{read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression"}}})],t.prototype,"definitionExpression",void 0),Object(a["a"])([Object(l["b"])({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),Object(a["a"])([Object(l["b"])()],t.prototype,"rasterInfo",void 0),Object(a["a"])([Object(l["b"])({readOnly:!0,type:[k["a"]]})],t.prototype,"fields",void 0),Object(a["a"])([Object(l["b"])({readOnly:!0})],t.prototype,"fieldsIndex",null),Object(a["a"])([Object(l["b"])({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],t.prototype,"format",null),Object(a["a"])([Object(N["a"])("service","format",["serviceDataType"])],t.prototype,"readFormat",null),Object(a["a"])([Object(l["b"])({type:F["a"]})],t.prototype,"fullExtent",void 0),Object(a["a"])([Object(l["b"])({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),Object(a["a"])([Object(l["b"])({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),Object(a["a"])([Object(l["b"])({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),Object(a["a"])([Object(l["b"])({type:String,json:{type:pt.jsonValues,read:pt.read,write:pt.write}})],t.prototype,"interpolation",void 0),Object(a["a"])([Object(l["b"])()],t.prototype,"minScale",void 0),Object(a["a"])([Object(N["a"])("service","minScale")],t.prototype,"readMinScale",null),Object(a["a"])([Object(l["b"])()],t.prototype,"maxScale",void 0),Object(a["a"])([Object(N["a"])("service","maxScale")],t.prototype,"readMaxScale",null),Object(a["a"])([Object(l["b"])({type:Ce})],t.prototype,"mosaicRule",null),Object(a["a"])([Object(N["a"])("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),Object(a["a"])([Object(u["a"])("mosaicRule")],t.prototype,"writeMosaicRule",null),Object(a["a"])([Object(l["b"])({readOnly:!0}),Object(S["a"])("serviceRasterInfo.multidimensionalInfo")],t.prototype,"multidimensionalInfo",void 0),Object(a["a"])([Object(l["b"])({json:{type:o["a"]}})],t.prototype,"noData",void 0),Object(a["a"])([Object(u["a"])("noData")],t.prototype,"writeNoData",null),Object(a["a"])([Object(l["b"])({type:String,json:{type:dt.jsonValues,read:dt.read,write:dt.write}})],t.prototype,"noDataInterpretation",void 0),Object(a["a"])([Object(l["b"])({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),Object(a["a"])([Object(N["a"])("objectIdField")],t.prototype,"readObjectIdField",null),Object(a["a"])([Object(l["b"])({readOnly:!0})],t.prototype,"parsedUrl",null),Object(a["a"])([Object(l["b"])({readOnly:!0}),Object(S["a"])("serviceRasterInfo.pixelSize.x")],t.prototype,"pixelSizeX",void 0),Object(a["a"])([Object(l["b"])({readOnly:!0}),Object(S["a"])("serviceRasterInfo.pixelSize.y")],t.prototype,"pixelSizeY",void 0),Object(a["a"])([Object(l["b"])({type:Function})],t.prototype,"pixelFilter",void 0),Object(a["a"])([Object(l["b"])()],t.prototype,"raster",void 0),Object(a["a"])([Object(l["b"])()],t.prototype,"viewId",void 0),Object(a["a"])([Object(l["b"])({types:z["a"],json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:z["c"],name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],t.prototype,"renderer",void 0),Object(a["a"])([Object(N["a"])("renderer")],t.prototype,"readRenderer",null),Object(a["a"])([Object(u["a"])("renderer")],t.prototype,"writeRenderer",null),Object(a["a"])([Object(l["b"])(h["h"])],t.prototype,"opacity",void 0),Object(a["a"])([Object(l["b"])({readOnly:!0}),Object(S["a"])("serviceRasterInfo.attributeTable")],t.prototype,"rasterAttributeTable",void 0),Object(a["a"])([Object(l["b"])({readOnly:!0})],t.prototype,"rasterFields",null),Object(a["a"])([Object(l["b"])({readOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),Object(a["a"])([Object(l["b"])({type:ie})],t.prototype,"renderingRule",null),Object(a["a"])([Object(N["a"])("renderingRule",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRenderingRule",null),Object(a["a"])([Object(u["a"])("renderingRule")],t.prototype,"writeRenderingRule",null),Object(a["a"])([Object(l["b"])()],t.prototype,"serviceDataType",void 0),Object(a["a"])([Object(l["b"])({readOnly:!0,type:P["a"]})],t.prototype,"spatialReference",void 0),Object(a["a"])([Object(N["a"])("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),Object(a["a"])([Object(l["b"])({json:{type:mt.jsonValues}})],t.prototype,"pixelType",void 0),Object(a["a"])([Object(N["a"])("pixelType")],t.prototype,"readPixelType",null),Object(a["a"])([Object(u["a"])("pixelType")],t.prototype,"writePixelType",null),Object(a["a"])([Object(l["b"])({constructOnly:!0,type:Me["a"]})],t.prototype,"serviceRasterInfo",void 0),Object(a["a"])([Object(l["b"])()],t.prototype,"sourceJSON",void 0),Object(a["a"])([Object(l["b"])(h["n"])],t.prototype,"url",void 0),Object(a["a"])([Object(l["b"])({readOnly:!0})],t.prototype,"version",void 0),Object(a["a"])([Object(N["a"])("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=Object(a["a"])([Object(c["a"])("esri.layers.mixins.ArcGISImageService")],t),t};let gt=class extends(Object(g["a"])(Object(R["a"])(Object(j["a"])(Object(v["a"])(Object(y["a"])(Object(O["a"])(ft(Object(f["a"])(Object(b["a"])(m["a"])))))))))){constructor(...e){super(...e),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=Object(n["k"])(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).then(()=>this._fetchService(t),()=>this._fetchService(t))),Promise.resolve(this)}writeOperationalLayerType(e,t,r){var i;const a="vector-field"===(null==(i=this.renderer)?void 0:i.type);t[r]=a?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(e){const t=this.rasterFields,r=this.title,i=new Set;let a=!1,n=!1;this.capabilities&&(a=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,n=a&&("esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType));const s=new Set;a&&(s.add("raster.itempixelvalue"),n&&s.add("raster.magnitude").add("raster.direction"));for(const o of t){const e=o.name.toLowerCase();s.has(e)||e.indexOf("raster.servicepixelvalue.")>-1||i.add(o.name)}return Object(w["a"])({fields:t,title:r},{...e,visibleFieldNames:i})}redraw(){this.emit("redraw")}};Object(a["a"])([Object(l["b"])(h["e"])],gt.prototype,"legendEnabled",void 0),Object(a["a"])([Object(l["b"])({type:["show","hide"]})],gt.prototype,"listMode",void 0),Object(a["a"])([Object(l["b"])({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],gt.prototype,"isReference",void 0),Object(a["a"])([Object(l["b"])({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],gt.prototype,"operationalLayerType",void 0),Object(a["a"])([Object(u["a"])("web-map","operationalLayerType")],gt.prototype,"writeOperationalLayerType",null),Object(a["a"])([Object(l["b"])(h["j"])],gt.prototype,"popupEnabled",void 0),Object(a["a"])([Object(l["b"])({type:d["a"],json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],gt.prototype,"popupTemplate",void 0),Object(a["a"])([Object(l["b"])({readOnly:!0})],gt.prototype,"defaultPopupTemplate",null),Object(a["a"])([Object(l["b"])({readOnly:!0,json:{read:!1}})],gt.prototype,"type",void 0),gt=Object(a["a"])([Object(c["a"])("esri.layers.ImageryLayer")],gt);var Ot=gt;t["default"]=Ot}}]);